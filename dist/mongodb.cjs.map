{"version":3,"file":"mongodb.cjs","mappings":"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","sources":["webpack://mongodb/webpack/universalModuleDefinition","webpack://mongodb/./node_modules/events/events.js","webpack://mongodb/./node_modules/ip/lib/ip.js","webpack://mongodb/./node_modules/mongodb-connection-string-url/lib/index.js","webpack://mongodb/./node_modules/mongodb-connection-string-url/lib/redact.js","webpack://mongodb/./node_modules/mongodb/lib/admin.js","webpack://mongodb/./node_modules/mongodb/lib/bson.js","webpack://mongodb/./node_modules/mongodb/lib/bulk/common.js","webpack://mongodb/./node_modules/mongodb/lib/bulk/ordered.js","webpack://mongodb/./node_modules/mongodb/lib/bulk/unordered.js","webpack://mongodb/./node_modules/mongodb/lib/change_stream.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/auth_provider.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/gssapi.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/mongo_credentials.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/mongocr.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/mongodb_aws.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/mongodb_oidc.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/mongodb_oidc/aws_service_workflow.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/mongodb_oidc/callback_workflow.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/mongodb_oidc/service_workflow.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/mongodb_oidc/token_entry_cache.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/plain.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/providers.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/scram.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/auth/x509.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/command_monitoring_events.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/commands.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/connect.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/connection.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/connection_pool.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/connection_pool_events.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/errors.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/message_stream.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/metrics.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/stream_description.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/wire_protocol/compression.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/wire_protocol/constants.js","webpack://mongodb/./node_modules/mongodb/lib/cmap/wire_protocol/shared.js","webpack://mongodb/./node_modules/mongodb/lib/collection.js","webpack://mongodb/./node_modules/mongodb/lib/connection_string.js","webpack://mongodb/./node_modules/mongodb/lib/constants.js","webpack://mongodb/./node_modules/mongodb/lib/cursor/abstract_cursor.js","webpack://mongodb/./node_modules/mongodb/lib/cursor/aggregation_cursor.js","webpack://mongodb/./node_modules/mongodb/lib/cursor/change_stream_cursor.js","webpack://mongodb/./node_modules/mongodb/lib/cursor/find_cursor.js","webpack://mongodb/./node_modules/mongodb/lib/cursor/list_collections_cursor.js","webpack://mongodb/./node_modules/mongodb/lib/cursor/list_indexes_cursor.js","webpack://mongodb/./node_modules/mongodb/lib/db.js","webpack://mongodb/./node_modules/mongodb/lib/deps.js","webpack://mongodb/./node_modules/mongodb/lib/encrypter.js","webpack://mongodb/./node_modules/mongodb/lib/error.js","webpack://mongodb/./node_modules/mongodb/lib/explain.js","webpack://mongodb/./node_modules/mongodb/lib/gridfs/download.js","webpack://mongodb/./node_modules/mongodb/lib/gridfs/index.js","webpack://mongodb/./node_modules/mongodb/lib/gridfs/upload.js","webpack://mongodb/./node_modules/mongodb/lib/index.js","webpack://mongodb/./node_modules/mongodb/lib/mongo_client.js","webpack://mongodb/./node_modules/mongodb/lib/mongo_logger.js","webpack://mongodb/./node_modules/mongodb/lib/mongo_types.js","webpack://mongodb/./node_modules/mongodb/lib/operations/add_user.js","webpack://mongodb/./node_modules/mongodb/lib/operations/aggregate.js","webpack://mongodb/./node_modules/mongodb/lib/operations/bulk_write.js","webpack://mongodb/./node_modules/mongodb/lib/operations/collections.js","webpack://mongodb/./node_modules/mongodb/lib/operations/command.js","webpack://mongodb/./node_modules/mongodb/lib/operations/common_functions.js","webpack://mongodb/./node_modules/mongodb/lib/operations/count.js","webpack://mongodb/./node_modules/mongodb/lib/operations/count_documents.js","webpack://mongodb/./node_modules/mongodb/lib/operations/create_collection.js","webpack://mongodb/./node_modules/mongodb/lib/operations/delete.js","webpack://mongodb/./node_modules/mongodb/lib/operations/distinct.js","webpack://mongodb/./node_modules/mongodb/lib/operations/drop.js","webpack://mongodb/./node_modules/mongodb/lib/operations/estimated_document_count.js","webpack://mongodb/./node_modules/mongodb/lib/operations/execute_operation.js","webpack://mongodb/./node_modules/mongodb/lib/operations/find.js","webpack://mongodb/./node_modules/mongodb/lib/operations/find_and_modify.js","webpack://mongodb/./node_modules/mongodb/lib/operations/get_more.js","webpack://mongodb/./node_modules/mongodb/lib/operations/indexes.js","webpack://mongodb/./node_modules/mongodb/lib/operations/insert.js","webpack://mongodb/./node_modules/mongodb/lib/operations/is_capped.js","webpack://mongodb/./node_modules/mongodb/lib/operations/kill_cursors.js","webpack://mongodb/./node_modules/mongodb/lib/operations/list_collections.js","webpack://mongodb/./node_modules/mongodb/lib/operations/list_databases.js","webpack://mongodb/./node_modules/mongodb/lib/operations/operation.js","webpack://mongodb/./node_modules/mongodb/lib/operations/options_operation.js","webpack://mongodb/./node_modules/mongodb/lib/operations/profiling_level.js","webpack://mongodb/./node_modules/mongodb/lib/operations/remove_user.js","webpack://mongodb/./node_modules/mongodb/lib/operations/rename.js","webpack://mongodb/./node_modules/mongodb/lib/operations/run_command.js","webpack://mongodb/./node_modules/mongodb/lib/operations/set_profiling_level.js","webpack://mongodb/./node_modules/mongodb/lib/operations/stats.js","webpack://mongodb/./node_modules/mongodb/lib/operations/update.js","webpack://mongodb/./node_modules/mongodb/lib/operations/validate_collection.js","webpack://mongodb/./node_modules/mongodb/lib/read_concern.js","webpack://mongodb/./node_modules/mongodb/lib/read_preference.js","webpack://mongodb/./node_modules/mongodb/lib/sdam/common.js","webpack://mongodb/./node_modules/mongodb/lib/sdam/events.js","webpack://mongodb/./node_modules/mongodb/lib/sdam/monitor.js","webpack://mongodb/./node_modules/mongodb/lib/sdam/server.js","webpack://mongodb/./node_modules/mongodb/lib/sdam/server_description.js","webpack://mongodb/./node_modules/mongodb/lib/sdam/server_selection.js","webpack://mongodb/./node_modules/mongodb/lib/sdam/srv_polling.js","webpack://mongodb/./node_modules/mongodb/lib/sdam/topology.js","webpack://mongodb/./node_modules/mongodb/lib/sdam/topology_description.js","webpack://mongodb/./node_modules/mongodb/lib/sessions.js","webpack://mongodb/./node_modules/mongodb/lib/sort.js","webpack://mongodb/./node_modules/mongodb/lib/transactions.js","webpack://mongodb/./node_modules/mongodb/lib/utils.js","webpack://mongodb/./node_modules/mongodb/lib/write_concern.js","webpack://mongodb/./node_modules/mongodb/lib/ sync","webpack://mongodb/./node_modules/punycode/punycode.es6.js","webpack://mongodb/./node_modules/smart-buffer/build/smartbuffer.js","webpack://mongodb/./node_modules/smart-buffer/build/utils.js","webpack://mongodb/./node_modules/socks/build/client/socksclient.js","webpack://mongodb/./node_modules/socks/build/common/constants.js","webpack://mongodb/./node_modules/socks/build/common/helpers.js","webpack://mongodb/./node_modules/socks/build/common/receivebuffer.js","webpack://mongodb/./node_modules/socks/build/common/util.js","webpack://mongodb/./node_modules/socks/build/index.js","webpack://mongodb/./node_modules/tr46/index.js","webpack://mongodb/./node_modules/tr46/lib/regexes.js","webpack://mongodb/./node_modules/tr46/lib/statusMapping.js","webpack://mongodb/./src/event_emitter.ts","webpack://mongodb/./src/index.ts","webpack://mongodb/./src/list.ts","webpack://mongodb/./src/modules/buffer.ts","webpack://mongodb/./src/modules/crypto.ts","webpack://mongodb/./src/modules/net.ts","webpack://mongodb/./src/modules/os.ts","webpack://mongodb/./src/modules/process.ts","webpack://mongodb/./src/modules/stream.ts","webpack://mongodb/./src/modules/timers.ts","webpack://mongodb/./src/modules/url.ts","webpack://mongodb/./src/modules/util.ts","webpack://mongodb/./src/ws.ts","webpack://mongodb/./node_modules/webidl-conversions/lib/index.js","webpack://mongodb/./node_modules/whatwg-url/index.js","webpack://mongodb/./node_modules/whatwg-url/lib/Function.js","webpack://mongodb/./node_modules/whatwg-url/lib/URL-impl.js","webpack://mongodb/./node_modules/whatwg-url/lib/URL.js","webpack://mongodb/./node_modules/whatwg-url/lib/URLSearchParams-impl.js","webpack://mongodb/./node_modules/whatwg-url/lib/URLSearchParams.js","webpack://mongodb/./node_modules/whatwg-url/lib/encoding.js","webpack://mongodb/./node_modules/whatwg-url/lib/infra.js","webpack://mongodb/./node_modules/whatwg-url/lib/percent-encoding.js","webpack://mongodb/./node_modules/whatwg-url/lib/url-state-machine.js","webpack://mongodb/./node_modules/whatwg-url/lib/urlencoded.js","webpack://mongodb/./node_modules/whatwg-url/lib/utils.js","webpack://mongodb/./node_modules/whatwg-url/webidl2js-wrapper.js","webpack://mongodb/./node_modules/bson/lib/bson.cjs","webpack://mongodb/webpack/bootstrap","webpack://mongodb/webpack/runtime/define property getters","webpack://mongodb/webpack/runtime/hasOwnProperty shorthand","webpack://mongodb/webpack/runtime/make namespace object","webpack://mongodb/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mongodb\"] = factory();\n\telse\n\t\troot[\"mongodb\"] = factory();\n})(globalThis, () => {\nreturn ","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","const ip = exports;\nconst { Buffer } = require('buffer');\nconst os = require('os');\n\nip.toBuffer = function (ip, buff, offset) {\n  offset = ~~offset;\n\n  let result;\n\n  if (this.isV4Format(ip)) {\n    result = buff || Buffer.alloc(offset + 4);\n    ip.split(/\\./g).map((byte) => {\n      result[offset++] = parseInt(byte, 10) & 0xff;\n    });\n  } else if (this.isV6Format(ip)) {\n    const sections = ip.split(':', 8);\n\n    let i;\n    for (i = 0; i < sections.length; i++) {\n      const isv4 = this.isV4Format(sections[i]);\n      let v4Buffer;\n\n      if (isv4) {\n        v4Buffer = this.toBuffer(sections[i]);\n        sections[i] = v4Buffer.slice(0, 2).toString('hex');\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, v4Buffer.slice(2, 4).toString('hex'));\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0');\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0');\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      const argv = [i, 1];\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0');\n      }\n      sections.splice(...argv);\n    }\n\n    result = buff || Buffer.alloc(offset + 16);\n    for (i = 0; i < sections.length; i++) {\n      const word = parseInt(sections[i], 16);\n      result[offset++] = (word >> 8) & 0xff;\n      result[offset++] = word & 0xff;\n    }\n  }\n\n  if (!result) {\n    throw Error(`Invalid ip address: ${ip}`);\n  }\n\n  return result;\n};\n\nip.toString = function (buff, offset, length) {\n  offset = ~~offset;\n  length = length || (buff.length - offset);\n\n  let result = [];\n  if (length === 4) {\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buff[offset + i]);\n    }\n    result = result.join('.');\n  } else if (length === 16) {\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(buff.readUInt16BE(offset + i).toString(16));\n    }\n    result = result.join(':');\n    result = result.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');\n    result = result.replace(/:{3,4}/, '::');\n  }\n\n  return result;\n};\n\nconst ipv4Regex = /^(\\d{1,3}\\.){3,3}\\d{1,3}$/;\nconst ipv6Regex = /^(::)?(((\\d{1,3}\\.){3}(\\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;\n\nip.isV4Format = function (ip) {\n  return ipv4Regex.test(ip);\n};\n\nip.isV6Format = function (ip) {\n  return ipv6Regex.test(ip);\n};\n\nfunction _normalizeFamily(family) {\n  if (family === 4) {\n    return 'ipv4';\n  }\n  if (family === 6) {\n    return 'ipv6';\n  }\n  return family ? family.toLowerCase() : 'ipv4';\n}\n\nip.fromPrefixLen = function (prefixlen, family) {\n  if (prefixlen > 32) {\n    family = 'ipv6';\n  } else {\n    family = _normalizeFamily(family);\n  }\n\n  let len = 4;\n  if (family === 'ipv6') {\n    len = 16;\n  }\n  const buff = Buffer.alloc(len);\n\n  for (let i = 0, n = buff.length; i < n; ++i) {\n    let bits = 8;\n    if (prefixlen < 8) {\n      bits = prefixlen;\n    }\n    prefixlen -= bits;\n\n    buff[i] = ~(0xff >> bits) & 0xff;\n  }\n\n  return ip.toString(buff);\n};\n\nip.mask = function (addr, mask) {\n  addr = ip.toBuffer(addr);\n  mask = ip.toBuffer(mask);\n\n  const result = Buffer.alloc(Math.max(addr.length, mask.length));\n\n  // Same protocol - do bitwise and\n  let i;\n  if (addr.length === mask.length) {\n    for (i = 0; i < addr.length; i++) {\n      result[i] = addr[i] & mask[i];\n    }\n  } else if (mask.length === 4) {\n    // IPv6 address and IPv4 mask\n    // (Mask low bits)\n    for (i = 0; i < mask.length; i++) {\n      result[i] = addr[addr.length - 4 + i] & mask[i];\n    }\n  } else {\n    // IPv6 mask and IPv4 addr\n    for (i = 0; i < result.length - 6; i++) {\n      result[i] = 0;\n    }\n\n    // ::ffff:ipv4\n    result[10] = 0xff;\n    result[11] = 0xff;\n    for (i = 0; i < addr.length; i++) {\n      result[i + 12] = addr[i] & mask[i + 12];\n    }\n    i += 12;\n  }\n  for (; i < result.length; i++) {\n    result[i] = 0;\n  }\n\n  return ip.toString(result);\n};\n\nip.cidr = function (cidrString) {\n  const cidrParts = cidrString.split('/');\n\n  const addr = cidrParts[0];\n  if (cidrParts.length !== 2) {\n    throw new Error(`invalid CIDR subnet: ${addr}`);\n  }\n\n  const mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.mask(addr, mask);\n};\n\nip.subnet = function (addr, mask) {\n  const networkAddress = ip.toLong(ip.mask(addr, mask));\n\n  // Calculate the mask's length.\n  const maskBuffer = ip.toBuffer(mask);\n  let maskLength = 0;\n\n  for (let i = 0; i < maskBuffer.length; i++) {\n    if (maskBuffer[i] === 0xff) {\n      maskLength += 8;\n    } else {\n      let octet = maskBuffer[i] & 0xff;\n      while (octet) {\n        octet = (octet << 1) & 0xff;\n        maskLength++;\n      }\n    }\n  }\n\n  const numberOfAddresses = 2 ** (32 - maskLength);\n\n  return {\n    networkAddress: ip.fromLong(networkAddress),\n    firstAddress: numberOfAddresses <= 2\n      ? ip.fromLong(networkAddress)\n      : ip.fromLong(networkAddress + 1),\n    lastAddress: numberOfAddresses <= 2\n      ? ip.fromLong(networkAddress + numberOfAddresses - 1)\n      : ip.fromLong(networkAddress + numberOfAddresses - 2),\n    broadcastAddress: ip.fromLong(networkAddress + numberOfAddresses - 1),\n    subnetMask: mask,\n    subnetMaskLength: maskLength,\n    numHosts: numberOfAddresses <= 2\n      ? numberOfAddresses : numberOfAddresses - 2,\n    length: numberOfAddresses,\n    contains(other) {\n      return networkAddress === ip.toLong(ip.mask(other, mask));\n    },\n  };\n};\n\nip.cidrSubnet = function (cidrString) {\n  const cidrParts = cidrString.split('/');\n\n  const addr = cidrParts[0];\n  if (cidrParts.length !== 2) {\n    throw new Error(`invalid CIDR subnet: ${addr}`);\n  }\n\n  const mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.subnet(addr, mask);\n};\n\nip.not = function (addr) {\n  const buff = ip.toBuffer(addr);\n  for (let i = 0; i < buff.length; i++) {\n    buff[i] = 0xff ^ buff[i];\n  }\n  return ip.toString(buff);\n};\n\nip.or = function (a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // same protocol\n  if (a.length === b.length) {\n    for (let i = 0; i < a.length; ++i) {\n      a[i] |= b[i];\n    }\n    return ip.toString(a);\n\n  // mixed protocols\n  }\n  let buff = a;\n  let other = b;\n  if (b.length > a.length) {\n    buff = b;\n    other = a;\n  }\n\n  const offset = buff.length - other.length;\n  for (let i = offset; i < buff.length; ++i) {\n    buff[i] |= other[i - offset];\n  }\n\n  return ip.toString(buff);\n};\n\nip.isEqual = function (a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // Same protocol\n  if (a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n\n  // Swap\n  if (b.length === 4) {\n    const t = b;\n    b = a;\n    a = t;\n  }\n\n  // a - IPv4, b - IPv6\n  for (let i = 0; i < 10; i++) {\n    if (b[i] !== 0) return false;\n  }\n\n  const word = b.readUInt16BE(10);\n  if (word !== 0 && word !== 0xffff) return false;\n\n  for (let i = 0; i < 4; i++) {\n    if (a[i] !== b[i + 12]) return false;\n  }\n\n  return true;\n};\n\nip.isPrivate = function (addr) {\n  return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n    .test(addr)\n    || /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n      .test(addr)\n    || /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^f[cd][0-9a-f]{2}:/i.test(addr)\n    || /^fe80:/i.test(addr)\n    || /^::1$/.test(addr)\n    || /^::$/.test(addr);\n};\n\nip.isPublic = function (addr) {\n  return !ip.isPrivate(addr);\n};\n\nip.isLoopback = function (addr) {\n  return /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/\n    .test(addr)\n    || /^fe80::1$/.test(addr)\n    || /^::1$/.test(addr)\n    || /^::$/.test(addr);\n};\n\nip.loopback = function (family) {\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  if (family !== 'ipv4' && family !== 'ipv6') {\n    throw new Error('family must be ipv4 or ipv6');\n  }\n\n  return family === 'ipv4' ? '127.0.0.1' : 'fe80::1';\n};\n\n//\n// ### function address (name, family)\n// #### @name {string|'public'|'private'} **Optional** Name or security\n//      of the network interface.\n// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults\n//      to ipv4).\n//\n// Returns the address for the network interface on the current system with\n// the specified `name`:\n//   * String: First `family` address of the interface.\n//             If not found see `undefined`.\n//   * 'public': the first public ip address of family.\n//   * 'private': the first private ip address of family.\n//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.\n//\nip.address = function (name, family) {\n  const interfaces = os.networkInterfaces();\n\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  //\n  // If a specific network interface has been named,\n  // return the address.\n  //\n  if (name && name !== 'private' && name !== 'public') {\n    const res = interfaces[name].filter((details) => {\n      const itemFamily = _normalizeFamily(details.family);\n      return itemFamily === family;\n    });\n    if (res.length === 0) {\n      return undefined;\n    }\n    return res[0].address;\n  }\n\n  const all = Object.keys(interfaces).map((nic) => {\n    //\n    // Note: name will only be `public` or `private`\n    // when this is called.\n    //\n    const addresses = interfaces[nic].filter((details) => {\n      details.family = _normalizeFamily(details.family);\n      if (details.family !== family || ip.isLoopback(details.address)) {\n        return false;\n      } if (!name) {\n        return true;\n      }\n\n      return name === 'public' ? ip.isPrivate(details.address)\n        : ip.isPublic(details.address);\n    });\n\n    return addresses.length ? addresses[0].address : undefined;\n  }).filter(Boolean);\n\n  return !all.length ? ip.loopback(family) : all[0];\n};\n\nip.toLong = function (ip) {\n  let ipl = 0;\n  ip.split('.').forEach((octet) => {\n    ipl <<= 8;\n    ipl += parseInt(octet);\n  });\n  return (ipl >>> 0);\n};\n\nip.fromLong = function (ipl) {\n  return (`${ipl >>> 24}.${\n    ipl >> 16 & 255}.${\n    ipl >> 8 & 255}.${\n    ipl & 255}`);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommaAndColonSeparatedRecord = exports.ConnectionString = exports.redactConnectionString = void 0;\nconst whatwg_url_1 = require(\"whatwg-url\");\nconst redact_1 = require(\"./redact\");\nObject.defineProperty(exports, \"redactConnectionString\", { enumerable: true, get: function () { return redact_1.redactConnectionString; } });\nconst DUMMY_HOSTNAME = '__this_is_a_placeholder__';\nfunction connectionStringHasValidScheme(connectionString) {\n    return (connectionString.startsWith('mongodb://') ||\n        connectionString.startsWith('mongodb+srv://'));\n}\nconst HOSTS_REGEX = /^(?<protocol>[^/]+):\\/\\/(?:(?<username>[^:@]*)(?::(?<password>[^@]*))?@)?(?<hosts>(?!:)[^/?@]*)(?<rest>.*)/;\nclass CaseInsensitiveMap extends Map {\n    delete(name) {\n        return super.delete(this._normalizeKey(name));\n    }\n    get(name) {\n        return super.get(this._normalizeKey(name));\n    }\n    has(name) {\n        return super.has(this._normalizeKey(name));\n    }\n    set(name, value) {\n        return super.set(this._normalizeKey(name), value);\n    }\n    _normalizeKey(name) {\n        name = `${name}`;\n        for (const key of this.keys()) {\n            if (key.toLowerCase() === name.toLowerCase()) {\n                name = key;\n                break;\n            }\n        }\n        return name;\n    }\n}\nfunction caseInsenstiveURLSearchParams(Ctor) {\n    return class CaseInsenstiveURLSearchParams extends Ctor {\n        append(name, value) {\n            return super.append(this._normalizeKey(name), value);\n        }\n        delete(name) {\n            return super.delete(this._normalizeKey(name));\n        }\n        get(name) {\n            return super.get(this._normalizeKey(name));\n        }\n        getAll(name) {\n            return super.getAll(this._normalizeKey(name));\n        }\n        has(name) {\n            return super.has(this._normalizeKey(name));\n        }\n        set(name, value) {\n            return super.set(this._normalizeKey(name), value);\n        }\n        keys() {\n            return super.keys();\n        }\n        values() {\n            return super.values();\n        }\n        entries() {\n            return super.entries();\n        }\n        [Symbol.iterator]() {\n            return super[Symbol.iterator]();\n        }\n        _normalizeKey(name) {\n            return CaseInsensitiveMap.prototype._normalizeKey.call(this, name);\n        }\n    };\n}\nclass URLWithoutHost extends whatwg_url_1.URL {\n}\nclass MongoParseError extends Error {\n    get name() {\n        return 'MongoParseError';\n    }\n}\nclass ConnectionString extends URLWithoutHost {\n    constructor(uri, options = {}) {\n        var _a;\n        const { looseValidation } = options;\n        if (!looseValidation && !connectionStringHasValidScheme(uri)) {\n            throw new MongoParseError('Invalid scheme, expected connection string to start with \"mongodb://\" or \"mongodb+srv://\"');\n        }\n        const match = uri.match(HOSTS_REGEX);\n        if (!match) {\n            throw new MongoParseError(`Invalid connection string \"${uri}\"`);\n        }\n        const { protocol, username, password, hosts, rest } = (_a = match.groups) !== null && _a !== void 0 ? _a : {};\n        if (!looseValidation) {\n            if (!protocol || !hosts) {\n                throw new MongoParseError(`Protocol and host list are required in \"${uri}\"`);\n            }\n            try {\n                decodeURIComponent(username !== null && username !== void 0 ? username : '');\n                decodeURIComponent(password !== null && password !== void 0 ? password : '');\n            }\n            catch (err) {\n                throw new MongoParseError(err.message);\n            }\n            const illegalCharacters = /[:/?#[\\]@]/gi;\n            if (username === null || username === void 0 ? void 0 : username.match(illegalCharacters)) {\n                throw new MongoParseError(`Username contains unescaped characters ${username}`);\n            }\n            if (!username || !password) {\n                const uriWithoutProtocol = uri.replace(`${protocol}://`, '');\n                if (uriWithoutProtocol.startsWith('@') || uriWithoutProtocol.startsWith(':')) {\n                    throw new MongoParseError('URI contained empty userinfo section');\n                }\n            }\n            if (password === null || password === void 0 ? void 0 : password.match(illegalCharacters)) {\n                throw new MongoParseError('Password contains unescaped characters');\n            }\n        }\n        let authString = '';\n        if (typeof username === 'string')\n            authString += username;\n        if (typeof password === 'string')\n            authString += `:${password}`;\n        if (authString)\n            authString += '@';\n        try {\n            super(`${protocol.toLowerCase()}://${authString}${DUMMY_HOSTNAME}${rest}`);\n        }\n        catch (err) {\n            if (looseValidation) {\n                new ConnectionString(uri, {\n                    ...options,\n                    looseValidation: false\n                });\n            }\n            if (typeof err.message === 'string') {\n                err.message = err.message.replace(DUMMY_HOSTNAME, hosts);\n            }\n            throw err;\n        }\n        this._hosts = hosts.split(',');\n        if (!looseValidation) {\n            if (this.isSRV && this.hosts.length !== 1) {\n                throw new MongoParseError('mongodb+srv URI cannot have multiple service names');\n            }\n            if (this.isSRV && this.hosts.some(host => host.includes(':'))) {\n                throw new MongoParseError('mongodb+srv URI cannot have port number');\n            }\n        }\n        if (!this.pathname) {\n            this.pathname = '/';\n        }\n        Object.setPrototypeOf(this.searchParams, caseInsenstiveURLSearchParams(this.searchParams.constructor).prototype);\n    }\n    get host() { return DUMMY_HOSTNAME; }\n    set host(_ignored) { throw new Error('No single host for connection string'); }\n    get hostname() { return DUMMY_HOSTNAME; }\n    set hostname(_ignored) { throw new Error('No single host for connection string'); }\n    get port() { return ''; }\n    set port(_ignored) { throw new Error('No single host for connection string'); }\n    get href() { return this.toString(); }\n    set href(_ignored) { throw new Error('Cannot set href for connection strings'); }\n    get isSRV() {\n        return this.protocol.includes('srv');\n    }\n    get hosts() {\n        return this._hosts;\n    }\n    set hosts(list) {\n        this._hosts = list;\n    }\n    toString() {\n        return super.toString().replace(DUMMY_HOSTNAME, this.hosts.join(','));\n    }\n    clone() {\n        return new ConnectionString(this.toString(), {\n            looseValidation: true\n        });\n    }\n    redact(options) {\n        return (0, redact_1.redactValidConnectionString)(this, options);\n    }\n    typedSearchParams() {\n        const sametype = false && new (caseInsenstiveURLSearchParams(whatwg_url_1.URLSearchParams))();\n        return this.searchParams;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const { href, origin, protocol, username, password, hosts, pathname, search, searchParams, hash } = this;\n        return { href, origin, protocol, username, password, hosts, pathname, search, searchParams, hash };\n    }\n}\nexports.ConnectionString = ConnectionString;\nclass CommaAndColonSeparatedRecord extends CaseInsensitiveMap {\n    constructor(from) {\n        super();\n        for (const entry of (from !== null && from !== void 0 ? from : '').split(',')) {\n            if (!entry)\n                continue;\n            const colonIndex = entry.indexOf(':');\n            if (colonIndex === -1) {\n                this.set(entry, '');\n            }\n            else {\n                this.set(entry.slice(0, colonIndex), entry.slice(colonIndex + 1));\n            }\n        }\n    }\n    toString() {\n        return [...this].map(entry => entry.join(':')).join(',');\n    }\n}\nexports.CommaAndColonSeparatedRecord = CommaAndColonSeparatedRecord;\nexports.default = ConnectionString;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.redactConnectionString = exports.redactValidConnectionString = void 0;\nconst index_1 = __importStar(require(\"./index\"));\nfunction redactValidConnectionString(inputUrl, options) {\n    var _a, _b;\n    const url = inputUrl.clone();\n    const replacementString = (_a = options === null || options === void 0 ? void 0 : options.replacementString) !== null && _a !== void 0 ? _a : '_credentials_';\n    const redactUsernames = (_b = options === null || options === void 0 ? void 0 : options.redactUsernames) !== null && _b !== void 0 ? _b : true;\n    if ((url.username || url.password) && redactUsernames) {\n        url.username = replacementString;\n        url.password = '';\n    }\n    else if (url.password) {\n        url.password = replacementString;\n    }\n    if (url.searchParams.has('authMechanismProperties')) {\n        const props = new index_1.CommaAndColonSeparatedRecord(url.searchParams.get('authMechanismProperties'));\n        if (props.get('AWS_SESSION_TOKEN')) {\n            props.set('AWS_SESSION_TOKEN', replacementString);\n            url.searchParams.set('authMechanismProperties', props.toString());\n        }\n    }\n    if (url.searchParams.has('tlsCertificateKeyFilePassword')) {\n        url.searchParams.set('tlsCertificateKeyFilePassword', replacementString);\n    }\n    if (url.searchParams.has('proxyUsername') && redactUsernames) {\n        url.searchParams.set('proxyUsername', replacementString);\n    }\n    if (url.searchParams.has('proxyPassword')) {\n        url.searchParams.set('proxyPassword', replacementString);\n    }\n    return url;\n}\nexports.redactValidConnectionString = redactValidConnectionString;\nfunction redactConnectionString(uri, options) {\n    var _a, _b;\n    const replacementString = (_a = options === null || options === void 0 ? void 0 : options.replacementString) !== null && _a !== void 0 ? _a : '<credentials>';\n    const redactUsernames = (_b = options === null || options === void 0 ? void 0 : options.redactUsernames) !== null && _b !== void 0 ? _b : true;\n    let parsed;\n    try {\n        parsed = new index_1.default(uri);\n    }\n    catch (_c) { }\n    if (parsed) {\n        options = { ...options, replacementString: '___credentials___' };\n        return parsed.redact(options).toString().replace(/___credentials___/g, replacementString);\n    }\n    const R = replacementString;\n    const replacements = [\n        uri => uri.replace(redactUsernames ? /(\\/\\/)(.*)(@)/g : /(\\/\\/[^@]*:)(.*)(@)/g, `$1${R}$3`),\n        uri => uri.replace(/(AWS_SESSION_TOKEN(:|%3A))([^,&]+)/gi, `$1${R}`),\n        uri => uri.replace(/(tlsCertificateKeyFilePassword=)([^&]+)/gi, `$1${R}`),\n        uri => redactUsernames ? uri.replace(/(proxyUsername=)([^&]+)/gi, `$1${R}`) : uri,\n        uri => uri.replace(/(proxyPassword=)([^&]+)/gi, `$1${R}`)\n    ];\n    for (const replacer of replacements) {\n        uri = replacer(uri);\n    }\n    return uri;\n}\nexports.redactConnectionString = redactConnectionString;\n//# sourceMappingURL=redact.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Admin = void 0;\nconst add_user_1 = require(\"./operations/add_user\");\nconst execute_operation_1 = require(\"./operations/execute_operation\");\nconst list_databases_1 = require(\"./operations/list_databases\");\nconst remove_user_1 = require(\"./operations/remove_user\");\nconst run_command_1 = require(\"./operations/run_command\");\nconst validate_collection_1 = require(\"./operations/validate_collection\");\n/**\n * The **Admin** class is an internal class that allows convenient access to\n * the admin functionality and commands for MongoDB.\n *\n * **ADMIN Cannot directly be instantiated**\n * @public\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * const client = new MongoClient('mongodb://localhost:27017');\n * const admin = client.db().admin();\n * const dbInfo = await admin.listDatabases();\n * for (const db of dbInfo.databases) {\n *   console.log(db.name);\n * }\n * ```\n */\nclass Admin {\n    /**\n     * Create a new Admin instance\n     * @internal\n     */\n    constructor(db) {\n        this.s = { db };\n    }\n    /**\n     * Execute a command\n     *\n     * @param command - The command to execute\n     * @param options - Optional settings for the command\n     */\n    async command(command, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new run_command_1.RunCommandOperation(this.s.db, command, { dbName: 'admin', ...options }));\n    }\n    /**\n     * Retrieve the server build information\n     *\n     * @param options - Optional settings for the command\n     */\n    async buildInfo(options) {\n        return this.command({ buildinfo: 1 }, options);\n    }\n    /**\n     * Retrieve the server build information\n     *\n     * @param options - Optional settings for the command\n     */\n    async serverInfo(options) {\n        return this.command({ buildinfo: 1 }, options);\n    }\n    /**\n     * Retrieve this db's server status.\n     *\n     * @param options - Optional settings for the command\n     */\n    async serverStatus(options) {\n        return this.command({ serverStatus: 1 }, options);\n    }\n    /**\n     * Ping the MongoDB server and retrieve results\n     *\n     * @param options - Optional settings for the command\n     */\n    async ping(options) {\n        return this.command({ ping: 1 }, options);\n    }\n    /**\n     * Add a user to the database\n     *\n     * @param username - The username for the new user\n     * @param passwordOrOptions - An optional password for the new user, or the options for the command\n     * @param options - Optional settings for the command\n     */\n    async addUser(username, passwordOrOptions, options) {\n        options =\n            options != null && typeof options === 'object'\n                ? options\n                : passwordOrOptions != null && typeof passwordOrOptions === 'object'\n                    ? passwordOrOptions\n                    : undefined;\n        const password = typeof passwordOrOptions === 'string' ? passwordOrOptions : undefined;\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new add_user_1.AddUserOperation(this.s.db, username, password, { dbName: 'admin', ...options }));\n    }\n    /**\n     * Remove a user from a database\n     *\n     * @param username - The username to remove\n     * @param options - Optional settings for the command\n     */\n    async removeUser(username, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new remove_user_1.RemoveUserOperation(this.s.db, username, { dbName: 'admin', ...options }));\n    }\n    /**\n     * Validate an existing collection\n     *\n     * @param collectionName - The name of the collection to validate.\n     * @param options - Optional settings for the command\n     */\n    async validateCollection(collectionName, options = {}) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new validate_collection_1.ValidateCollectionOperation(this, collectionName, options));\n    }\n    /**\n     * List the available databases\n     *\n     * @param options - Optional settings for the command\n     */\n    async listDatabases(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new list_databases_1.ListDatabasesOperation(this.s.db, options));\n    }\n    /**\n     * Get ReplicaSet status\n     *\n     * @param options - Optional settings for the command\n     */\n    async replSetGetStatus(options) {\n        return this.command({ replSetGetStatus: 1 }, options);\n    }\n}\nexports.Admin = Admin;\n//# sourceMappingURL=admin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveBSONOptions = exports.pluckBSONSerializeOptions = exports.Timestamp = exports.serialize = exports.ObjectId = exports.MinKey = exports.MaxKey = exports.Long = exports.Int32 = exports.Double = exports.deserialize = exports.Decimal128 = exports.DBRef = exports.Code = exports.calculateObjectSize = exports.BSONType = exports.BSONSymbol = exports.BSONRegExp = exports.BSON = exports.Binary = void 0;\nvar bson_1 = require(\"bson\");\nObject.defineProperty(exports, \"Binary\", { enumerable: true, get: function () { return bson_1.Binary; } });\nObject.defineProperty(exports, \"BSON\", { enumerable: true, get: function () { return bson_1.BSON; } });\nObject.defineProperty(exports, \"BSONRegExp\", { enumerable: true, get: function () { return bson_1.BSONRegExp; } });\nObject.defineProperty(exports, \"BSONSymbol\", { enumerable: true, get: function () { return bson_1.BSONSymbol; } });\nObject.defineProperty(exports, \"BSONType\", { enumerable: true, get: function () { return bson_1.BSONType; } });\nObject.defineProperty(exports, \"calculateObjectSize\", { enumerable: true, get: function () { return bson_1.calculateObjectSize; } });\nObject.defineProperty(exports, \"Code\", { enumerable: true, get: function () { return bson_1.Code; } });\nObject.defineProperty(exports, \"DBRef\", { enumerable: true, get: function () { return bson_1.DBRef; } });\nObject.defineProperty(exports, \"Decimal128\", { enumerable: true, get: function () { return bson_1.Decimal128; } });\nObject.defineProperty(exports, \"deserialize\", { enumerable: true, get: function () { return bson_1.deserialize; } });\nObject.defineProperty(exports, \"Double\", { enumerable: true, get: function () { return bson_1.Double; } });\nObject.defineProperty(exports, \"Int32\", { enumerable: true, get: function () { return bson_1.Int32; } });\nObject.defineProperty(exports, \"Long\", { enumerable: true, get: function () { return bson_1.Long; } });\nObject.defineProperty(exports, \"MaxKey\", { enumerable: true, get: function () { return bson_1.MaxKey; } });\nObject.defineProperty(exports, \"MinKey\", { enumerable: true, get: function () { return bson_1.MinKey; } });\nObject.defineProperty(exports, \"ObjectId\", { enumerable: true, get: function () { return bson_1.ObjectId; } });\nObject.defineProperty(exports, \"serialize\", { enumerable: true, get: function () { return bson_1.serialize; } });\nObject.defineProperty(exports, \"Timestamp\", { enumerable: true, get: function () { return bson_1.Timestamp; } });\nfunction pluckBSONSerializeOptions(options) {\n    const { fieldsAsRaw, useBigInt64, promoteValues, promoteBuffers, promoteLongs, serializeFunctions, ignoreUndefined, bsonRegExp, raw, enableUtf8Validation } = options;\n    return {\n        fieldsAsRaw,\n        useBigInt64,\n        promoteValues,\n        promoteBuffers,\n        promoteLongs,\n        serializeFunctions,\n        ignoreUndefined,\n        bsonRegExp,\n        raw,\n        enableUtf8Validation\n    };\n}\nexports.pluckBSONSerializeOptions = pluckBSONSerializeOptions;\n/**\n * Merge the given BSONSerializeOptions, preferring options over the parent's options, and\n * substituting defaults for values not set.\n *\n * @internal\n */\nfunction resolveBSONOptions(options, parent) {\n    const parentOptions = parent?.bsonOptions;\n    return {\n        raw: options?.raw ?? parentOptions?.raw ?? false,\n        useBigInt64: options?.useBigInt64 ?? parentOptions?.useBigInt64 ?? false,\n        promoteLongs: options?.promoteLongs ?? parentOptions?.promoteLongs ?? true,\n        promoteValues: options?.promoteValues ?? parentOptions?.promoteValues ?? true,\n        promoteBuffers: options?.promoteBuffers ?? parentOptions?.promoteBuffers ?? false,\n        ignoreUndefined: options?.ignoreUndefined ?? parentOptions?.ignoreUndefined ?? false,\n        bsonRegExp: options?.bsonRegExp ?? parentOptions?.bsonRegExp ?? false,\n        serializeFunctions: options?.serializeFunctions ?? parentOptions?.serializeFunctions ?? false,\n        fieldsAsRaw: options?.fieldsAsRaw ?? parentOptions?.fieldsAsRaw ?? {},\n        enableUtf8Validation: options?.enableUtf8Validation ?? parentOptions?.enableUtf8Validation ?? true\n    };\n}\nexports.resolveBSONOptions = resolveBSONOptions;\n//# sourceMappingURL=bson.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkOperationBase = exports.FindOperators = exports.MongoBulkWriteError = exports.mergeBatchResults = exports.WriteError = exports.WriteConcernError = exports.BulkWriteResult = exports.Batch = exports.BatchType = void 0;\nconst bson_1 = require(\"../bson\");\nconst error_1 = require(\"../error\");\nconst delete_1 = require(\"../operations/delete\");\nconst execute_operation_1 = require(\"../operations/execute_operation\");\nconst insert_1 = require(\"../operations/insert\");\nconst operation_1 = require(\"../operations/operation\");\nconst update_1 = require(\"../operations/update\");\nconst utils_1 = require(\"../utils\");\nconst write_concern_1 = require(\"../write_concern\");\n/** @internal */\nconst kServerError = Symbol('serverError');\n/** @public */\nexports.BatchType = Object.freeze({\n    INSERT: 1,\n    UPDATE: 2,\n    DELETE: 3\n});\n/**\n * Keeps the state of a unordered batch so we can rewrite the results\n * correctly after command execution\n *\n * @public\n */\nclass Batch {\n    constructor(batchType, originalZeroIndex) {\n        this.originalZeroIndex = originalZeroIndex;\n        this.currentIndex = 0;\n        this.originalIndexes = [];\n        this.batchType = batchType;\n        this.operations = [];\n        this.size = 0;\n        this.sizeBytes = 0;\n    }\n}\nexports.Batch = Batch;\n/**\n * @public\n * The result of a bulk write.\n */\nclass BulkWriteResult {\n    static generateIdMap(ids) {\n        const idMap = {};\n        for (const doc of ids) {\n            idMap[doc.index] = doc._id;\n        }\n        return idMap;\n    }\n    /**\n     * Create a new BulkWriteResult instance\n     * @internal\n     */\n    constructor(bulkResult) {\n        this.result = bulkResult;\n        this.insertedCount = this.result.nInserted ?? 0;\n        this.matchedCount = this.result.nMatched ?? 0;\n        this.modifiedCount = this.result.nModified ?? 0;\n        this.deletedCount = this.result.nRemoved ?? 0;\n        this.upsertedCount = this.result.upserted.length ?? 0;\n        this.upsertedIds = BulkWriteResult.generateIdMap(this.result.upserted);\n        this.insertedIds = BulkWriteResult.generateIdMap(this.result.insertedIds);\n        Object.defineProperty(this, 'result', { value: this.result, enumerable: false });\n    }\n    /** Evaluates to true if the bulk operation correctly executes */\n    get ok() {\n        return this.result.ok;\n    }\n    /** The number of inserted documents */\n    get nInserted() {\n        return this.result.nInserted;\n    }\n    /** Number of upserted documents */\n    get nUpserted() {\n        return this.result.nUpserted;\n    }\n    /** Number of matched documents */\n    get nMatched() {\n        return this.result.nMatched;\n    }\n    /** Number of documents updated physically on disk */\n    get nModified() {\n        return this.result.nModified;\n    }\n    /** Number of removed documents */\n    get nRemoved() {\n        return this.result.nRemoved;\n    }\n    /** Returns an array of all inserted ids */\n    getInsertedIds() {\n        return this.result.insertedIds;\n    }\n    /** Returns an array of all upserted ids */\n    getUpsertedIds() {\n        return this.result.upserted;\n    }\n    /** Returns the upserted id at the given index */\n    getUpsertedIdAt(index) {\n        return this.result.upserted[index];\n    }\n    /** Returns raw internal result */\n    getRawResponse() {\n        return this.result;\n    }\n    /** Returns true if the bulk operation contains a write error */\n    hasWriteErrors() {\n        return this.result.writeErrors.length > 0;\n    }\n    /** Returns the number of write errors off the bulk operation */\n    getWriteErrorCount() {\n        return this.result.writeErrors.length;\n    }\n    /** Returns a specific write error object */\n    getWriteErrorAt(index) {\n        return index < this.result.writeErrors.length ? this.result.writeErrors[index] : undefined;\n    }\n    /** Retrieve all write errors */\n    getWriteErrors() {\n        return this.result.writeErrors;\n    }\n    /** Retrieve the write concern error if one exists */\n    getWriteConcernError() {\n        if (this.result.writeConcernErrors.length === 0) {\n            return;\n        }\n        else if (this.result.writeConcernErrors.length === 1) {\n            // Return the error\n            return this.result.writeConcernErrors[0];\n        }\n        else {\n            // Combine the errors\n            let errmsg = '';\n            for (let i = 0; i < this.result.writeConcernErrors.length; i++) {\n                const err = this.result.writeConcernErrors[i];\n                errmsg = errmsg + err.errmsg;\n                // TODO: Something better\n                if (i === 0)\n                    errmsg = errmsg + ' and ';\n            }\n            return new WriteConcernError({ errmsg, code: error_1.MONGODB_ERROR_CODES.WriteConcernFailed });\n        }\n    }\n    toString() {\n        return `BulkWriteResult(${this.result})`;\n    }\n    isOk() {\n        return this.result.ok === 1;\n    }\n}\nexports.BulkWriteResult = BulkWriteResult;\n/**\n * An error representing a failure by the server to apply the requested write concern to the bulk operation.\n * @public\n * @category Error\n */\nclass WriteConcernError {\n    constructor(error) {\n        this[kServerError] = error;\n    }\n    /** Write concern error code. */\n    get code() {\n        return this[kServerError].code;\n    }\n    /** Write concern error message. */\n    get errmsg() {\n        return this[kServerError].errmsg;\n    }\n    /** Write concern error info. */\n    get errInfo() {\n        return this[kServerError].errInfo;\n    }\n    toJSON() {\n        return this[kServerError];\n    }\n    toString() {\n        return `WriteConcernError(${this.errmsg})`;\n    }\n}\nexports.WriteConcernError = WriteConcernError;\n/**\n * An error that occurred during a BulkWrite on the server.\n * @public\n * @category Error\n */\nclass WriteError {\n    constructor(err) {\n        this.err = err;\n    }\n    /** WriteError code. */\n    get code() {\n        return this.err.code;\n    }\n    /** WriteError original bulk operation index. */\n    get index() {\n        return this.err.index;\n    }\n    /** WriteError message. */\n    get errmsg() {\n        return this.err.errmsg;\n    }\n    /** WriteError details. */\n    get errInfo() {\n        return this.err.errInfo;\n    }\n    /** Returns the underlying operation that caused the error */\n    getOperation() {\n        return this.err.op;\n    }\n    toJSON() {\n        return { code: this.err.code, index: this.err.index, errmsg: this.err.errmsg, op: this.err.op };\n    }\n    toString() {\n        return `WriteError(${JSON.stringify(this.toJSON())})`;\n    }\n}\nexports.WriteError = WriteError;\n/** Merges results into shared data structure */\nfunction mergeBatchResults(batch, bulkResult, err, result) {\n    // If we have an error set the result to be the err object\n    if (err) {\n        result = err;\n    }\n    else if (result && result.result) {\n        result = result.result;\n    }\n    if (result == null) {\n        return;\n    }\n    // Do we have a top level error stop processing and return\n    if (result.ok === 0 && bulkResult.ok === 1) {\n        bulkResult.ok = 0;\n        const writeError = {\n            index: 0,\n            code: result.code || 0,\n            errmsg: result.message,\n            errInfo: result.errInfo,\n            op: batch.operations[0]\n        };\n        bulkResult.writeErrors.push(new WriteError(writeError));\n        return;\n    }\n    else if (result.ok === 0 && bulkResult.ok === 0) {\n        return;\n    }\n    // If we have an insert Batch type\n    if (isInsertBatch(batch) && result.n) {\n        bulkResult.nInserted = bulkResult.nInserted + result.n;\n    }\n    // If we have an insert Batch type\n    if (isDeleteBatch(batch) && result.n) {\n        bulkResult.nRemoved = bulkResult.nRemoved + result.n;\n    }\n    let nUpserted = 0;\n    // We have an array of upserted values, we need to rewrite the indexes\n    if (Array.isArray(result.upserted)) {\n        nUpserted = result.upserted.length;\n        for (let i = 0; i < result.upserted.length; i++) {\n            bulkResult.upserted.push({\n                index: result.upserted[i].index + batch.originalZeroIndex,\n                _id: result.upserted[i]._id\n            });\n        }\n    }\n    else if (result.upserted) {\n        nUpserted = 1;\n        bulkResult.upserted.push({\n            index: batch.originalZeroIndex,\n            _id: result.upserted\n        });\n    }\n    // If we have an update Batch type\n    if (isUpdateBatch(batch) && result.n) {\n        const nModified = result.nModified;\n        bulkResult.nUpserted = bulkResult.nUpserted + nUpserted;\n        bulkResult.nMatched = bulkResult.nMatched + (result.n - nUpserted);\n        if (typeof nModified === 'number') {\n            bulkResult.nModified = bulkResult.nModified + nModified;\n        }\n        else {\n            bulkResult.nModified = 0;\n        }\n    }\n    if (Array.isArray(result.writeErrors)) {\n        for (let i = 0; i < result.writeErrors.length; i++) {\n            const writeError = {\n                index: batch.originalIndexes[result.writeErrors[i].index],\n                code: result.writeErrors[i].code,\n                errmsg: result.writeErrors[i].errmsg,\n                errInfo: result.writeErrors[i].errInfo,\n                op: batch.operations[result.writeErrors[i].index]\n            };\n            bulkResult.writeErrors.push(new WriteError(writeError));\n        }\n    }\n    if (result.writeConcernError) {\n        bulkResult.writeConcernErrors.push(new WriteConcernError(result.writeConcernError));\n    }\n}\nexports.mergeBatchResults = mergeBatchResults;\nfunction executeCommands(bulkOperation, options, callback) {\n    if (bulkOperation.s.batches.length === 0) {\n        return callback(undefined, new BulkWriteResult(bulkOperation.s.bulkResult));\n    }\n    const batch = bulkOperation.s.batches.shift();\n    function resultHandler(err, result) {\n        // Error is a driver related error not a bulk op error, return early\n        if (err && 'message' in err && !(err instanceof error_1.MongoWriteConcernError)) {\n            return callback(new MongoBulkWriteError(err, new BulkWriteResult(bulkOperation.s.bulkResult)));\n        }\n        if (err instanceof error_1.MongoWriteConcernError) {\n            return handleMongoWriteConcernError(batch, bulkOperation.s.bulkResult, err, callback);\n        }\n        // Merge the results together\n        mergeBatchResults(batch, bulkOperation.s.bulkResult, err, result);\n        const writeResult = new BulkWriteResult(bulkOperation.s.bulkResult);\n        if (bulkOperation.handleWriteError(callback, writeResult))\n            return;\n        // Execute the next command in line\n        executeCommands(bulkOperation, options, callback);\n    }\n    const finalOptions = (0, utils_1.resolveOptions)(bulkOperation, {\n        ...options,\n        ordered: bulkOperation.isOrdered\n    });\n    if (finalOptions.bypassDocumentValidation !== true) {\n        delete finalOptions.bypassDocumentValidation;\n    }\n    // Set an operationIf if provided\n    if (bulkOperation.operationId) {\n        resultHandler.operationId = bulkOperation.operationId;\n    }\n    // Is the bypassDocumentValidation options specific\n    if (bulkOperation.s.bypassDocumentValidation === true) {\n        finalOptions.bypassDocumentValidation = true;\n    }\n    // Is the checkKeys option disabled\n    if (bulkOperation.s.checkKeys === false) {\n        finalOptions.checkKeys = false;\n    }\n    if (finalOptions.retryWrites) {\n        if (isUpdateBatch(batch)) {\n            finalOptions.retryWrites = finalOptions.retryWrites && !batch.operations.some(op => op.multi);\n        }\n        if (isDeleteBatch(batch)) {\n            finalOptions.retryWrites =\n                finalOptions.retryWrites && !batch.operations.some(op => op.limit === 0);\n        }\n    }\n    try {\n        if (isInsertBatch(batch)) {\n            (0, execute_operation_1.executeOperation)(bulkOperation.s.collection.s.db.s.client, new insert_1.InsertOperation(bulkOperation.s.namespace, batch.operations, finalOptions), resultHandler);\n        }\n        else if (isUpdateBatch(batch)) {\n            (0, execute_operation_1.executeOperation)(bulkOperation.s.collection.s.db.s.client, new update_1.UpdateOperation(bulkOperation.s.namespace, batch.operations, finalOptions), resultHandler);\n        }\n        else if (isDeleteBatch(batch)) {\n            (0, execute_operation_1.executeOperation)(bulkOperation.s.collection.s.db.s.client, new delete_1.DeleteOperation(bulkOperation.s.namespace, batch.operations, finalOptions), resultHandler);\n        }\n    }\n    catch (err) {\n        // Force top level error\n        err.ok = 0;\n        // Merge top level error and return\n        mergeBatchResults(batch, bulkOperation.s.bulkResult, err, undefined);\n        callback();\n    }\n}\nfunction handleMongoWriteConcernError(batch, bulkResult, err, callback) {\n    mergeBatchResults(batch, bulkResult, undefined, err.result);\n    callback(new MongoBulkWriteError({\n        message: err.result?.writeConcernError.errmsg,\n        code: err.result?.writeConcernError.result\n    }, new BulkWriteResult(bulkResult)));\n}\n/**\n * An error indicating an unsuccessful Bulk Write\n * @public\n * @category Error\n */\nclass MongoBulkWriteError extends error_1.MongoServerError {\n    /** Creates a new MongoBulkWriteError */\n    constructor(error, result) {\n        super(error);\n        this.writeErrors = [];\n        if (error instanceof WriteConcernError)\n            this.err = error;\n        else if (!(error instanceof Error)) {\n            this.message = error.message;\n            this.code = error.code;\n            this.writeErrors = error.writeErrors ?? [];\n        }\n        this.result = result;\n        Object.assign(this, error);\n    }\n    get name() {\n        return 'MongoBulkWriteError';\n    }\n    /** Number of documents inserted. */\n    get insertedCount() {\n        return this.result.insertedCount;\n    }\n    /** Number of documents matched for update. */\n    get matchedCount() {\n        return this.result.matchedCount;\n    }\n    /** Number of documents modified. */\n    get modifiedCount() {\n        return this.result.modifiedCount;\n    }\n    /** Number of documents deleted. */\n    get deletedCount() {\n        return this.result.deletedCount;\n    }\n    /** Number of documents upserted. */\n    get upsertedCount() {\n        return this.result.upsertedCount;\n    }\n    /** Inserted document generated Id's, hash key is the index of the originating operation */\n    get insertedIds() {\n        return this.result.insertedIds;\n    }\n    /** Upserted document generated Id's, hash key is the index of the originating operation */\n    get upsertedIds() {\n        return this.result.upsertedIds;\n    }\n}\nexports.MongoBulkWriteError = MongoBulkWriteError;\n/**\n * A builder object that is returned from {@link BulkOperationBase#find}.\n * Is used to build a write operation that involves a query filter.\n *\n * @public\n */\nclass FindOperators {\n    /**\n     * Creates a new FindOperators object.\n     * @internal\n     */\n    constructor(bulkOperation) {\n        this.bulkOperation = bulkOperation;\n    }\n    /** Add a multiple update operation to the bulk operation */\n    update(updateDocument) {\n        const currentOp = buildCurrentOp(this.bulkOperation);\n        return this.bulkOperation.addToOperationsList(exports.BatchType.UPDATE, (0, update_1.makeUpdateStatement)(currentOp.selector, updateDocument, {\n            ...currentOp,\n            multi: true\n        }));\n    }\n    /** Add a single update operation to the bulk operation */\n    updateOne(updateDocument) {\n        if (!(0, utils_1.hasAtomicOperators)(updateDocument)) {\n            throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n        const currentOp = buildCurrentOp(this.bulkOperation);\n        return this.bulkOperation.addToOperationsList(exports.BatchType.UPDATE, (0, update_1.makeUpdateStatement)(currentOp.selector, updateDocument, { ...currentOp, multi: false }));\n    }\n    /** Add a replace one operation to the bulk operation */\n    replaceOne(replacement) {\n        if ((0, utils_1.hasAtomicOperators)(replacement)) {\n            throw new error_1.MongoInvalidArgumentError('Replacement document must not use atomic operators');\n        }\n        const currentOp = buildCurrentOp(this.bulkOperation);\n        return this.bulkOperation.addToOperationsList(exports.BatchType.UPDATE, (0, update_1.makeUpdateStatement)(currentOp.selector, replacement, { ...currentOp, multi: false }));\n    }\n    /** Add a delete one operation to the bulk operation */\n    deleteOne() {\n        const currentOp = buildCurrentOp(this.bulkOperation);\n        return this.bulkOperation.addToOperationsList(exports.BatchType.DELETE, (0, delete_1.makeDeleteStatement)(currentOp.selector, { ...currentOp, limit: 1 }));\n    }\n    /** Add a delete many operation to the bulk operation */\n    delete() {\n        const currentOp = buildCurrentOp(this.bulkOperation);\n        return this.bulkOperation.addToOperationsList(exports.BatchType.DELETE, (0, delete_1.makeDeleteStatement)(currentOp.selector, { ...currentOp, limit: 0 }));\n    }\n    /** Upsert modifier for update bulk operation, noting that this operation is an upsert. */\n    upsert() {\n        if (!this.bulkOperation.s.currentOp) {\n            this.bulkOperation.s.currentOp = {};\n        }\n        this.bulkOperation.s.currentOp.upsert = true;\n        return this;\n    }\n    /** Specifies the collation for the query condition. */\n    collation(collation) {\n        if (!this.bulkOperation.s.currentOp) {\n            this.bulkOperation.s.currentOp = {};\n        }\n        this.bulkOperation.s.currentOp.collation = collation;\n        return this;\n    }\n    /** Specifies arrayFilters for UpdateOne or UpdateMany bulk operations. */\n    arrayFilters(arrayFilters) {\n        if (!this.bulkOperation.s.currentOp) {\n            this.bulkOperation.s.currentOp = {};\n        }\n        this.bulkOperation.s.currentOp.arrayFilters = arrayFilters;\n        return this;\n    }\n    /** Specifies hint for the bulk operation. */\n    hint(hint) {\n        if (!this.bulkOperation.s.currentOp) {\n            this.bulkOperation.s.currentOp = {};\n        }\n        this.bulkOperation.s.currentOp.hint = hint;\n        return this;\n    }\n}\nexports.FindOperators = FindOperators;\n/**\n * TODO(NODE-4063)\n * BulkWrites merge complexity is implemented in executeCommands\n * This provides a vehicle to treat bulkOperations like any other operation (hence \"shim\")\n * We would like this logic to simply live inside the BulkWriteOperation class\n * @internal\n */\nclass BulkWriteShimOperation extends operation_1.AbstractOperation {\n    constructor(bulkOperation, options) {\n        super(options);\n        this.bulkOperation = bulkOperation;\n    }\n    execute(server, session, callback) {\n        if (this.options.session == null) {\n            // An implicit session could have been created by 'executeOperation'\n            // So if we stick it on finalOptions here, each bulk operation\n            // will use this same session, it'll be passed in the same way\n            // an explicit session would be\n            this.options.session = session;\n        }\n        return executeCommands(this.bulkOperation, this.options, callback);\n    }\n}\n/** @public */\nclass BulkOperationBase {\n    /**\n     * Create a new OrderedBulkOperation or UnorderedBulkOperation instance\n     * @internal\n     */\n    constructor(collection, options, isOrdered) {\n        // determine whether bulkOperation is ordered or unordered\n        this.isOrdered = isOrdered;\n        const topology = (0, utils_1.getTopology)(collection);\n        options = options == null ? {} : options;\n        // TODO Bring from driver information in hello\n        // Get the namespace for the write operations\n        const namespace = collection.s.namespace;\n        // Used to mark operation as executed\n        const executed = false;\n        // Current item\n        const currentOp = undefined;\n        // Set max byte size\n        const hello = topology.lastHello();\n        // If we have autoEncryption on, batch-splitting must be done on 2mb chunks, but single documents\n        // over 2mb are still allowed\n        const usingAutoEncryption = !!(topology.s.options && topology.s.options.autoEncrypter);\n        const maxBsonObjectSize = hello && hello.maxBsonObjectSize ? hello.maxBsonObjectSize : 1024 * 1024 * 16;\n        const maxBatchSizeBytes = usingAutoEncryption ? 1024 * 1024 * 2 : maxBsonObjectSize;\n        const maxWriteBatchSize = hello && hello.maxWriteBatchSize ? hello.maxWriteBatchSize : 1000;\n        // Calculates the largest possible size of an Array key, represented as a BSON string\n        // element. This calculation:\n        //     1 byte for BSON type\n        //     # of bytes = length of (string representation of (maxWriteBatchSize - 1))\n        //   + 1 bytes for null terminator\n        const maxKeySize = (maxWriteBatchSize - 1).toString(10).length + 2;\n        // Final options for retryable writes\n        let finalOptions = Object.assign({}, options);\n        finalOptions = (0, utils_1.applyRetryableWrites)(finalOptions, collection.s.db);\n        // Final results\n        const bulkResult = {\n            ok: 1,\n            writeErrors: [],\n            writeConcernErrors: [],\n            insertedIds: [],\n            nInserted: 0,\n            nUpserted: 0,\n            nMatched: 0,\n            nModified: 0,\n            nRemoved: 0,\n            upserted: []\n        };\n        // Internal state\n        this.s = {\n            // Final result\n            bulkResult,\n            // Current batch state\n            currentBatch: undefined,\n            currentIndex: 0,\n            // ordered specific\n            currentBatchSize: 0,\n            currentBatchSizeBytes: 0,\n            // unordered specific\n            currentInsertBatch: undefined,\n            currentUpdateBatch: undefined,\n            currentRemoveBatch: undefined,\n            batches: [],\n            // Write concern\n            writeConcern: write_concern_1.WriteConcern.fromOptions(options),\n            // Max batch size options\n            maxBsonObjectSize,\n            maxBatchSizeBytes,\n            maxWriteBatchSize,\n            maxKeySize,\n            // Namespace\n            namespace,\n            // Topology\n            topology,\n            // Options\n            options: finalOptions,\n            // BSON options\n            bsonOptions: (0, bson_1.resolveBSONOptions)(options),\n            // Current operation\n            currentOp,\n            // Executed\n            executed,\n            // Collection\n            collection,\n            // Fundamental error\n            err: undefined,\n            // check keys\n            checkKeys: typeof options.checkKeys === 'boolean' ? options.checkKeys : false\n        };\n        // bypass Validation\n        if (options.bypassDocumentValidation === true) {\n            this.s.bypassDocumentValidation = true;\n        }\n    }\n    /**\n     * Add a single insert document to the bulk operation\n     *\n     * @example\n     * ```ts\n     * const bulkOp = collection.initializeOrderedBulkOp();\n     *\n     * // Adds three inserts to the bulkOp.\n     * bulkOp\n     *   .insert({ a: 1 })\n     *   .insert({ b: 2 })\n     *   .insert({ c: 3 });\n     * await bulkOp.execute();\n     * ```\n     */\n    insert(document) {\n        if (document._id == null && !shouldForceServerObjectId(this)) {\n            document._id = new bson_1.ObjectId();\n        }\n        return this.addToOperationsList(exports.BatchType.INSERT, document);\n    }\n    /**\n     * Builds a find operation for an update/updateOne/delete/deleteOne/replaceOne.\n     * Returns a builder object used to complete the definition of the operation.\n     *\n     * @example\n     * ```ts\n     * const bulkOp = collection.initializeOrderedBulkOp();\n     *\n     * // Add an updateOne to the bulkOp\n     * bulkOp.find({ a: 1 }).updateOne({ $set: { b: 2 } });\n     *\n     * // Add an updateMany to the bulkOp\n     * bulkOp.find({ c: 3 }).update({ $set: { d: 4 } });\n     *\n     * // Add an upsert\n     * bulkOp.find({ e: 5 }).upsert().updateOne({ $set: { f: 6 } });\n     *\n     * // Add a deletion\n     * bulkOp.find({ g: 7 }).deleteOne();\n     *\n     * // Add a multi deletion\n     * bulkOp.find({ h: 8 }).delete();\n     *\n     * // Add a replaceOne\n     * bulkOp.find({ i: 9 }).replaceOne({writeConcern: { j: 10 }});\n     *\n     * // Update using a pipeline (requires Mongodb 4.2 or higher)\n     * bulk.find({ k: 11, y: { $exists: true }, z: { $exists: true } }).updateOne([\n     *   { $set: { total: { $sum: [ '$y', '$z' ] } } }\n     * ]);\n     *\n     * // All of the ops will now be executed\n     * await bulkOp.execute();\n     * ```\n     */\n    find(selector) {\n        if (!selector) {\n            throw new error_1.MongoInvalidArgumentError('Bulk find operation must specify a selector');\n        }\n        // Save a current selector\n        this.s.currentOp = {\n            selector: selector\n        };\n        return new FindOperators(this);\n    }\n    /** Specifies a raw operation to perform in the bulk write. */\n    raw(op) {\n        if (op == null || typeof op !== 'object') {\n            throw new error_1.MongoInvalidArgumentError('Operation must be an object with an operation key');\n        }\n        if ('insertOne' in op) {\n            const forceServerObjectId = shouldForceServerObjectId(this);\n            if (op.insertOne && op.insertOne.document == null) {\n                // NOTE: provided for legacy support, but this is a malformed operation\n                if (forceServerObjectId !== true && op.insertOne._id == null) {\n                    op.insertOne._id = new bson_1.ObjectId();\n                }\n                return this.addToOperationsList(exports.BatchType.INSERT, op.insertOne);\n            }\n            if (forceServerObjectId !== true && op.insertOne.document._id == null) {\n                op.insertOne.document._id = new bson_1.ObjectId();\n            }\n            return this.addToOperationsList(exports.BatchType.INSERT, op.insertOne.document);\n        }\n        if ('replaceOne' in op || 'updateOne' in op || 'updateMany' in op) {\n            if ('replaceOne' in op) {\n                if ('q' in op.replaceOne) {\n                    throw new error_1.MongoInvalidArgumentError('Raw operations are not allowed');\n                }\n                const updateStatement = (0, update_1.makeUpdateStatement)(op.replaceOne.filter, op.replaceOne.replacement, { ...op.replaceOne, multi: false });\n                if ((0, utils_1.hasAtomicOperators)(updateStatement.u)) {\n                    throw new error_1.MongoInvalidArgumentError('Replacement document must not use atomic operators');\n                }\n                return this.addToOperationsList(exports.BatchType.UPDATE, updateStatement);\n            }\n            if ('updateOne' in op) {\n                if ('q' in op.updateOne) {\n                    throw new error_1.MongoInvalidArgumentError('Raw operations are not allowed');\n                }\n                const updateStatement = (0, update_1.makeUpdateStatement)(op.updateOne.filter, op.updateOne.update, {\n                    ...op.updateOne,\n                    multi: false\n                });\n                if (!(0, utils_1.hasAtomicOperators)(updateStatement.u)) {\n                    throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n                }\n                return this.addToOperationsList(exports.BatchType.UPDATE, updateStatement);\n            }\n            if ('updateMany' in op) {\n                if ('q' in op.updateMany) {\n                    throw new error_1.MongoInvalidArgumentError('Raw operations are not allowed');\n                }\n                const updateStatement = (0, update_1.makeUpdateStatement)(op.updateMany.filter, op.updateMany.update, {\n                    ...op.updateMany,\n                    multi: true\n                });\n                if (!(0, utils_1.hasAtomicOperators)(updateStatement.u)) {\n                    throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n                }\n                return this.addToOperationsList(exports.BatchType.UPDATE, updateStatement);\n            }\n        }\n        if ('deleteOne' in op) {\n            if ('q' in op.deleteOne) {\n                throw new error_1.MongoInvalidArgumentError('Raw operations are not allowed');\n            }\n            return this.addToOperationsList(exports.BatchType.DELETE, (0, delete_1.makeDeleteStatement)(op.deleteOne.filter, { ...op.deleteOne, limit: 1 }));\n        }\n        if ('deleteMany' in op) {\n            if ('q' in op.deleteMany) {\n                throw new error_1.MongoInvalidArgumentError('Raw operations are not allowed');\n            }\n            return this.addToOperationsList(exports.BatchType.DELETE, (0, delete_1.makeDeleteStatement)(op.deleteMany.filter, { ...op.deleteMany, limit: 0 }));\n        }\n        // otherwise an unknown operation was provided\n        throw new error_1.MongoInvalidArgumentError('bulkWrite only supports insertOne, updateOne, updateMany, deleteOne, deleteMany');\n    }\n    get bsonOptions() {\n        return this.s.bsonOptions;\n    }\n    get writeConcern() {\n        return this.s.writeConcern;\n    }\n    get batches() {\n        const batches = [...this.s.batches];\n        if (this.isOrdered) {\n            if (this.s.currentBatch)\n                batches.push(this.s.currentBatch);\n        }\n        else {\n            if (this.s.currentInsertBatch)\n                batches.push(this.s.currentInsertBatch);\n            if (this.s.currentUpdateBatch)\n                batches.push(this.s.currentUpdateBatch);\n            if (this.s.currentRemoveBatch)\n                batches.push(this.s.currentRemoveBatch);\n        }\n        return batches;\n    }\n    async execute(options = {}) {\n        if (this.s.executed) {\n            throw new error_1.MongoBatchReExecutionError();\n        }\n        const writeConcern = write_concern_1.WriteConcern.fromOptions(options);\n        if (writeConcern) {\n            this.s.writeConcern = writeConcern;\n        }\n        // If we have current batch\n        if (this.isOrdered) {\n            if (this.s.currentBatch)\n                this.s.batches.push(this.s.currentBatch);\n        }\n        else {\n            if (this.s.currentInsertBatch)\n                this.s.batches.push(this.s.currentInsertBatch);\n            if (this.s.currentUpdateBatch)\n                this.s.batches.push(this.s.currentUpdateBatch);\n            if (this.s.currentRemoveBatch)\n                this.s.batches.push(this.s.currentRemoveBatch);\n        }\n        // If we have no operations in the bulk raise an error\n        if (this.s.batches.length === 0) {\n            throw new error_1.MongoInvalidArgumentError('Invalid BulkOperation, Batch cannot be empty');\n        }\n        this.s.executed = true;\n        const finalOptions = { ...this.s.options, ...options };\n        const operation = new BulkWriteShimOperation(this, finalOptions);\n        return (0, execute_operation_1.executeOperation)(this.s.collection.s.db.s.client, operation);\n    }\n    /**\n     * Handles the write error before executing commands\n     * @internal\n     */\n    handleWriteError(callback, writeResult) {\n        if (this.s.bulkResult.writeErrors.length > 0) {\n            const msg = this.s.bulkResult.writeErrors[0].errmsg\n                ? this.s.bulkResult.writeErrors[0].errmsg\n                : 'write operation failed';\n            callback(new MongoBulkWriteError({\n                message: msg,\n                code: this.s.bulkResult.writeErrors[0].code,\n                writeErrors: this.s.bulkResult.writeErrors\n            }, writeResult));\n            return true;\n        }\n        const writeConcernError = writeResult.getWriteConcernError();\n        if (writeConcernError) {\n            callback(new MongoBulkWriteError(writeConcernError, writeResult));\n            return true;\n        }\n        return false;\n    }\n}\nexports.BulkOperationBase = BulkOperationBase;\nObject.defineProperty(BulkOperationBase.prototype, 'length', {\n    enumerable: true,\n    get() {\n        return this.s.currentIndex;\n    }\n});\nfunction shouldForceServerObjectId(bulkOperation) {\n    if (typeof bulkOperation.s.options.forceServerObjectId === 'boolean') {\n        return bulkOperation.s.options.forceServerObjectId;\n    }\n    if (typeof bulkOperation.s.collection.s.db.options?.forceServerObjectId === 'boolean') {\n        return bulkOperation.s.collection.s.db.options?.forceServerObjectId;\n    }\n    return false;\n}\nfunction isInsertBatch(batch) {\n    return batch.batchType === exports.BatchType.INSERT;\n}\nfunction isUpdateBatch(batch) {\n    return batch.batchType === exports.BatchType.UPDATE;\n}\nfunction isDeleteBatch(batch) {\n    return batch.batchType === exports.BatchType.DELETE;\n}\nfunction buildCurrentOp(bulkOp) {\n    let { currentOp } = bulkOp.s;\n    bulkOp.s.currentOp = undefined;\n    if (!currentOp)\n        currentOp = {};\n    return currentOp;\n}\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OrderedBulkOperation = void 0;\nconst BSON = require(\"../bson\");\nconst error_1 = require(\"../error\");\nconst common_1 = require(\"./common\");\n/** @public */\nclass OrderedBulkOperation extends common_1.BulkOperationBase {\n    /** @internal */\n    constructor(collection, options) {\n        super(collection, options, true);\n    }\n    addToOperationsList(batchType, document) {\n        // Get the bsonSize\n        const bsonSize = BSON.calculateObjectSize(document, {\n            checkKeys: false,\n            // Since we don't know what the user selected for BSON options here,\n            // err on the safe side, and check the size with ignoreUndefined: false.\n            ignoreUndefined: false\n        });\n        // Throw error if the doc is bigger than the max BSON size\n        if (bsonSize >= this.s.maxBsonObjectSize)\n            // TODO(NODE-3483): Change this to MongoBSONError\n            throw new error_1.MongoInvalidArgumentError(`Document is larger than the maximum size ${this.s.maxBsonObjectSize}`);\n        // Create a new batch object if we don't have a current one\n        if (this.s.currentBatch == null) {\n            this.s.currentBatch = new common_1.Batch(batchType, this.s.currentIndex);\n        }\n        const maxKeySize = this.s.maxKeySize;\n        // Check if we need to create a new batch\n        if (\n        // New batch if we exceed the max batch op size\n        this.s.currentBatchSize + 1 >= this.s.maxWriteBatchSize ||\n            // New batch if we exceed the maxBatchSizeBytes. Only matters if batch already has a doc,\n            // since we can't sent an empty batch\n            (this.s.currentBatchSize > 0 &&\n                this.s.currentBatchSizeBytes + maxKeySize + bsonSize >= this.s.maxBatchSizeBytes) ||\n            // New batch if the new op does not have the same op type as the current batch\n            this.s.currentBatch.batchType !== batchType) {\n            // Save the batch to the execution stack\n            this.s.batches.push(this.s.currentBatch);\n            // Create a new batch\n            this.s.currentBatch = new common_1.Batch(batchType, this.s.currentIndex);\n            // Reset the current size trackers\n            this.s.currentBatchSize = 0;\n            this.s.currentBatchSizeBytes = 0;\n        }\n        if (batchType === common_1.BatchType.INSERT) {\n            this.s.bulkResult.insertedIds.push({\n                index: this.s.currentIndex,\n                _id: document._id\n            });\n        }\n        // We have an array of documents\n        if (Array.isArray(document)) {\n            throw new error_1.MongoInvalidArgumentError('Operation passed in cannot be an Array');\n        }\n        this.s.currentBatch.originalIndexes.push(this.s.currentIndex);\n        this.s.currentBatch.operations.push(document);\n        this.s.currentBatchSize += 1;\n        this.s.currentBatchSizeBytes += maxKeySize + bsonSize;\n        this.s.currentIndex += 1;\n        return this;\n    }\n}\nexports.OrderedBulkOperation = OrderedBulkOperation;\n//# sourceMappingURL=ordered.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnorderedBulkOperation = void 0;\nconst BSON = require(\"../bson\");\nconst error_1 = require(\"../error\");\nconst common_1 = require(\"./common\");\n/** @public */\nclass UnorderedBulkOperation extends common_1.BulkOperationBase {\n    /** @internal */\n    constructor(collection, options) {\n        super(collection, options, false);\n    }\n    handleWriteError(callback, writeResult) {\n        if (this.s.batches.length) {\n            return false;\n        }\n        return super.handleWriteError(callback, writeResult);\n    }\n    addToOperationsList(batchType, document) {\n        // Get the bsonSize\n        const bsonSize = BSON.calculateObjectSize(document, {\n            checkKeys: false,\n            // Since we don't know what the user selected for BSON options here,\n            // err on the safe side, and check the size with ignoreUndefined: false.\n            ignoreUndefined: false\n        });\n        // Throw error if the doc is bigger than the max BSON size\n        if (bsonSize >= this.s.maxBsonObjectSize) {\n            // TODO(NODE-3483): Change this to MongoBSONError\n            throw new error_1.MongoInvalidArgumentError(`Document is larger than the maximum size ${this.s.maxBsonObjectSize}`);\n        }\n        // Holds the current batch\n        this.s.currentBatch = undefined;\n        // Get the right type of batch\n        if (batchType === common_1.BatchType.INSERT) {\n            this.s.currentBatch = this.s.currentInsertBatch;\n        }\n        else if (batchType === common_1.BatchType.UPDATE) {\n            this.s.currentBatch = this.s.currentUpdateBatch;\n        }\n        else if (batchType === common_1.BatchType.DELETE) {\n            this.s.currentBatch = this.s.currentRemoveBatch;\n        }\n        const maxKeySize = this.s.maxKeySize;\n        // Create a new batch object if we don't have a current one\n        if (this.s.currentBatch == null) {\n            this.s.currentBatch = new common_1.Batch(batchType, this.s.currentIndex);\n        }\n        // Check if we need to create a new batch\n        if (\n        // New batch if we exceed the max batch op size\n        this.s.currentBatch.size + 1 >= this.s.maxWriteBatchSize ||\n            // New batch if we exceed the maxBatchSizeBytes. Only matters if batch already has a doc,\n            // since we can't sent an empty batch\n            (this.s.currentBatch.size > 0 &&\n                this.s.currentBatch.sizeBytes + maxKeySize + bsonSize >= this.s.maxBatchSizeBytes) ||\n            // New batch if the new op does not have the same op type as the current batch\n            this.s.currentBatch.batchType !== batchType) {\n            // Save the batch to the execution stack\n            this.s.batches.push(this.s.currentBatch);\n            // Create a new batch\n            this.s.currentBatch = new common_1.Batch(batchType, this.s.currentIndex);\n        }\n        // We have an array of documents\n        if (Array.isArray(document)) {\n            throw new error_1.MongoInvalidArgumentError('Operation passed in cannot be an Array');\n        }\n        this.s.currentBatch.operations.push(document);\n        this.s.currentBatch.originalIndexes.push(this.s.currentIndex);\n        this.s.currentIndex = this.s.currentIndex + 1;\n        // Save back the current Batch to the right type\n        if (batchType === common_1.BatchType.INSERT) {\n            this.s.currentInsertBatch = this.s.currentBatch;\n            this.s.bulkResult.insertedIds.push({\n                index: this.s.bulkResult.insertedIds.length,\n                _id: document._id\n            });\n        }\n        else if (batchType === common_1.BatchType.UPDATE) {\n            this.s.currentUpdateBatch = this.s.currentBatch;\n        }\n        else if (batchType === common_1.BatchType.DELETE) {\n            this.s.currentRemoveBatch = this.s.currentBatch;\n        }\n        // Update current batch size\n        this.s.currentBatch.size += 1;\n        this.s.currentBatch.sizeBytes += maxKeySize + bsonSize;\n        return this;\n    }\n}\nexports.UnorderedBulkOperation = UnorderedBulkOperation;\n//# sourceMappingURL=unordered.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChangeStream = void 0;\nconst collection_1 = require(\"./collection\");\nconst constants_1 = require(\"./constants\");\nconst change_stream_cursor_1 = require(\"./cursor/change_stream_cursor\");\nconst db_1 = require(\"./db\");\nconst error_1 = require(\"./error\");\nconst mongo_client_1 = require(\"./mongo_client\");\nconst mongo_types_1 = require(\"./mongo_types\");\nconst utils_1 = require(\"./utils\");\n/** @internal */\nconst kCursorStream = Symbol('cursorStream');\n/** @internal */\nconst kClosed = Symbol('closed');\n/** @internal */\nconst kMode = Symbol('mode');\nconst CHANGE_STREAM_OPTIONS = [\n    'resumeAfter',\n    'startAfter',\n    'startAtOperationTime',\n    'fullDocument',\n    'fullDocumentBeforeChange',\n    'showExpandedEvents'\n];\nconst CHANGE_DOMAIN_TYPES = {\n    COLLECTION: Symbol('Collection'),\n    DATABASE: Symbol('Database'),\n    CLUSTER: Symbol('Cluster')\n};\nconst CHANGE_STREAM_EVENTS = [constants_1.RESUME_TOKEN_CHANGED, constants_1.END, constants_1.CLOSE];\nconst NO_RESUME_TOKEN_ERROR = 'A change stream document has been received that lacks a resume token (_id).';\nconst CHANGESTREAM_CLOSED_ERROR = 'ChangeStream is closed';\n/**\n * Creates a new Change Stream instance. Normally created using {@link Collection#watch|Collection.watch()}.\n * @public\n */\nclass ChangeStream extends mongo_types_1.TypedEventEmitter {\n    /**\n     * @internal\n     *\n     * @param parent - The parent object that created this change stream\n     * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents\n     */\n    constructor(parent, pipeline = [], options = {}) {\n        super();\n        this.pipeline = pipeline;\n        this.options = { ...options };\n        delete this.options.writeConcern;\n        if (parent instanceof collection_1.Collection) {\n            this.type = CHANGE_DOMAIN_TYPES.COLLECTION;\n        }\n        else if (parent instanceof db_1.Db) {\n            this.type = CHANGE_DOMAIN_TYPES.DATABASE;\n        }\n        else if (parent instanceof mongo_client_1.MongoClient) {\n            this.type = CHANGE_DOMAIN_TYPES.CLUSTER;\n        }\n        else {\n            throw new error_1.MongoChangeStreamError('Parent provided to ChangeStream constructor must be an instance of Collection, Db, or MongoClient');\n        }\n        this.parent = parent;\n        this.namespace = parent.s.namespace;\n        if (!this.options.readPreference && parent.readPreference) {\n            this.options.readPreference = parent.readPreference;\n        }\n        // Create contained Change Stream cursor\n        this.cursor = this._createChangeStreamCursor(options);\n        this[kClosed] = false;\n        this[kMode] = false;\n        // Listen for any `change` listeners being added to ChangeStream\n        this.on('newListener', eventName => {\n            if (eventName === 'change' && this.cursor && this.listenerCount('change') === 0) {\n                this._streamEvents(this.cursor);\n            }\n        });\n        this.on('removeListener', eventName => {\n            if (eventName === 'change' && this.listenerCount('change') === 0 && this.cursor) {\n                this[kCursorStream]?.removeAllListeners('data');\n            }\n        });\n    }\n    /** @internal */\n    get cursorStream() {\n        return this[kCursorStream];\n    }\n    /** The cached resume token that is used to resume after the most recently returned change. */\n    get resumeToken() {\n        return this.cursor?.resumeToken;\n    }\n    /** Check if there is any document still available in the Change Stream */\n    async hasNext() {\n        this._setIsIterator();\n        // Change streams must resume indefinitely while each resume event succeeds.\n        // This loop continues until either a change event is received or until a resume attempt\n        // fails.\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            try {\n                const hasNext = await this.cursor.hasNext();\n                return hasNext;\n            }\n            catch (error) {\n                try {\n                    await this._processErrorIteratorMode(error);\n                }\n                catch (error) {\n                    try {\n                        await this.close();\n                    }\n                    catch {\n                        // We are not concerned with errors from close()\n                    }\n                    throw error;\n                }\n            }\n        }\n    }\n    /** Get the next available document from the Change Stream. */\n    async next() {\n        this._setIsIterator();\n        // Change streams must resume indefinitely while each resume event succeeds.\n        // This loop continues until either a change event is received or until a resume attempt\n        // fails.\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            try {\n                const change = await this.cursor.next();\n                const processedChange = this._processChange(change ?? null);\n                return processedChange;\n            }\n            catch (error) {\n                try {\n                    await this._processErrorIteratorMode(error);\n                }\n                catch (error) {\n                    try {\n                        await this.close();\n                    }\n                    catch {\n                        // We are not concerned with errors from close()\n                    }\n                    throw error;\n                }\n            }\n        }\n    }\n    /**\n     * Try to get the next available document from the Change Stream's cursor or `null` if an empty batch is returned\n     */\n    async tryNext() {\n        this._setIsIterator();\n        // Change streams must resume indefinitely while each resume event succeeds.\n        // This loop continues until either a change event is received or until a resume attempt\n        // fails.\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            try {\n                const change = await this.cursor.tryNext();\n                return change ?? null;\n            }\n            catch (error) {\n                try {\n                    await this._processErrorIteratorMode(error);\n                }\n                catch (error) {\n                    try {\n                        await this.close();\n                    }\n                    catch {\n                        // We are not concerned with errors from close()\n                    }\n                    throw error;\n                }\n            }\n        }\n    }\n    async *[Symbol.asyncIterator]() {\n        if (this.closed) {\n            return;\n        }\n        try {\n            // Change streams run indefinitely as long as errors are resumable\n            // So the only loop breaking condition is if `next()` throws\n            while (true) {\n                yield await this.next();\n            }\n        }\n        finally {\n            try {\n                await this.close();\n            }\n            catch {\n                // we're not concerned with errors from close()\n            }\n        }\n    }\n    /** Is the cursor closed */\n    get closed() {\n        return this[kClosed] || this.cursor.closed;\n    }\n    /** Close the Change Stream */\n    async close() {\n        this[kClosed] = true;\n        const cursor = this.cursor;\n        try {\n            await cursor.close();\n        }\n        finally {\n            this._endStream();\n        }\n    }\n    /**\n     * Return a modified Readable stream including a possible transform method.\n     *\n     * NOTE: When using a Stream to process change stream events, the stream will\n     * NOT automatically resume in the case a resumable error is encountered.\n     *\n     * @throws MongoChangeStreamError if the underlying cursor or the change stream is closed\n     */\n    stream(options) {\n        if (this.closed) {\n            throw new error_1.MongoChangeStreamError(CHANGESTREAM_CLOSED_ERROR);\n        }\n        this.streamOptions = options;\n        return this.cursor.stream(options);\n    }\n    /** @internal */\n    _setIsEmitter() {\n        if (this[kMode] === 'iterator') {\n            // TODO(NODE-3485): Replace with MongoChangeStreamModeError\n            throw new error_1.MongoAPIError('ChangeStream cannot be used as an EventEmitter after being used as an iterator');\n        }\n        this[kMode] = 'emitter';\n    }\n    /** @internal */\n    _setIsIterator() {\n        if (this[kMode] === 'emitter') {\n            // TODO(NODE-3485): Replace with MongoChangeStreamModeError\n            throw new error_1.MongoAPIError('ChangeStream cannot be used as an iterator after being used as an EventEmitter');\n        }\n        this[kMode] = 'iterator';\n    }\n    /**\n     * Create a new change stream cursor based on self's configuration\n     * @internal\n     */\n    _createChangeStreamCursor(options) {\n        const changeStreamStageOptions = (0, utils_1.filterOptions)(options, CHANGE_STREAM_OPTIONS);\n        if (this.type === CHANGE_DOMAIN_TYPES.CLUSTER) {\n            changeStreamStageOptions.allChangesForCluster = true;\n        }\n        const pipeline = [{ $changeStream: changeStreamStageOptions }, ...this.pipeline];\n        const client = this.type === CHANGE_DOMAIN_TYPES.CLUSTER\n            ? this.parent\n            : this.type === CHANGE_DOMAIN_TYPES.DATABASE\n                ? this.parent.s.client\n                : this.type === CHANGE_DOMAIN_TYPES.COLLECTION\n                    ? this.parent.s.db.s.client\n                    : null;\n        if (client == null) {\n            // This should never happen because of the assertion in the constructor\n            throw new error_1.MongoRuntimeError(`Changestream type should only be one of cluster, database, collection. Found ${this.type.toString()}`);\n        }\n        const changeStreamCursor = new change_stream_cursor_1.ChangeStreamCursor(client, this.namespace, pipeline, options);\n        for (const event of CHANGE_STREAM_EVENTS) {\n            changeStreamCursor.on(event, e => this.emit(event, e));\n        }\n        if (this.listenerCount(ChangeStream.CHANGE) > 0) {\n            this._streamEvents(changeStreamCursor);\n        }\n        return changeStreamCursor;\n    }\n    /** @internal */\n    _closeEmitterModeWithError(error) {\n        this.emit(ChangeStream.ERROR, error);\n        this.close().catch(() => null);\n    }\n    /** @internal */\n    _streamEvents(cursor) {\n        this._setIsEmitter();\n        const stream = this[kCursorStream] ?? cursor.stream();\n        this[kCursorStream] = stream;\n        stream.on('data', change => {\n            try {\n                const processedChange = this._processChange(change);\n                this.emit(ChangeStream.CHANGE, processedChange);\n            }\n            catch (error) {\n                this.emit(ChangeStream.ERROR, error);\n            }\n        });\n        stream.on('error', error => this._processErrorStreamMode(error));\n    }\n    /** @internal */\n    _endStream() {\n        const cursorStream = this[kCursorStream];\n        if (cursorStream) {\n            ['data', 'close', 'end', 'error'].forEach(event => cursorStream.removeAllListeners(event));\n            cursorStream.destroy();\n        }\n        this[kCursorStream] = undefined;\n    }\n    /** @internal */\n    _processChange(change) {\n        if (this[kClosed]) {\n            // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n            throw new error_1.MongoAPIError(CHANGESTREAM_CLOSED_ERROR);\n        }\n        // a null change means the cursor has been notified, implicitly closing the change stream\n        if (change == null) {\n            // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n            throw new error_1.MongoRuntimeError(CHANGESTREAM_CLOSED_ERROR);\n        }\n        if (change && !change._id) {\n            throw new error_1.MongoChangeStreamError(NO_RESUME_TOKEN_ERROR);\n        }\n        // cache the resume token\n        this.cursor.cacheResumeToken(change._id);\n        // wipe the startAtOperationTime if there was one so that there won't be a conflict\n        // between resumeToken and startAtOperationTime if we need to reconnect the cursor\n        this.options.startAtOperationTime = undefined;\n        return change;\n    }\n    /** @internal */\n    _processErrorStreamMode(changeStreamError) {\n        // If the change stream has been closed explicitly, do not process error.\n        if (this[kClosed])\n            return;\n        if ((0, error_1.isResumableError)(changeStreamError, this.cursor.maxWireVersion)) {\n            this._endStream();\n            this.cursor.close().catch(() => null);\n            const topology = (0, utils_1.getTopology)(this.parent);\n            topology.selectServer(this.cursor.readPreference, {}, serverSelectionError => {\n                if (serverSelectionError)\n                    return this._closeEmitterModeWithError(changeStreamError);\n                this.cursor = this._createChangeStreamCursor(this.cursor.resumeOptions);\n            });\n        }\n        else {\n            this._closeEmitterModeWithError(changeStreamError);\n        }\n    }\n    /** @internal */\n    async _processErrorIteratorMode(changeStreamError) {\n        if (this[kClosed]) {\n            // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n            throw new error_1.MongoAPIError(CHANGESTREAM_CLOSED_ERROR);\n        }\n        if (!(0, error_1.isResumableError)(changeStreamError, this.cursor.maxWireVersion)) {\n            try {\n                await this.close();\n            }\n            catch {\n                // ignore errors from close\n            }\n            throw changeStreamError;\n        }\n        await this.cursor.close().catch(() => null);\n        const topology = (0, utils_1.getTopology)(this.parent);\n        try {\n            await topology.selectServerAsync(this.cursor.readPreference, {});\n            this.cursor = this._createChangeStreamCursor(this.cursor.resumeOptions);\n        }\n        catch {\n            // if the topology can't reconnect, close the stream\n            await this.close();\n            throw changeStreamError;\n        }\n    }\n}\nexports.ChangeStream = ChangeStream;\n/** @event */\nChangeStream.RESPONSE = constants_1.RESPONSE;\n/** @event */\nChangeStream.MORE = constants_1.MORE;\n/** @event */\nChangeStream.INIT = constants_1.INIT;\n/** @event */\nChangeStream.CLOSE = constants_1.CLOSE;\n/**\n * Fired for each new matching change in the specified namespace. Attaching a `change`\n * event listener to a Change Stream will switch the stream into flowing mode. Data will\n * then be passed as soon as it is available.\n * @event\n */\nChangeStream.CHANGE = constants_1.CHANGE;\n/** @event */\nChangeStream.END = constants_1.END;\n/** @event */\nChangeStream.ERROR = constants_1.ERROR;\n/**\n * Emitted each time the change stream stores a new resume token.\n * @event\n */\nChangeStream.RESUME_TOKEN_CHANGED = constants_1.RESUME_TOKEN_CHANGED;\n//# sourceMappingURL=change_stream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthProvider = exports.AuthContext = void 0;\nconst error_1 = require(\"../../error\");\n/** Context used during authentication */\nclass AuthContext {\n    constructor(connection, credentials, options) {\n        this.connection = connection;\n        this.credentials = credentials;\n        this.options = options;\n    }\n}\nexports.AuthContext = AuthContext;\nclass AuthProvider {\n    /**\n     * Prepare the handshake document before the initial handshake.\n     *\n     * @param handshakeDoc - The document used for the initial handshake on a connection\n     * @param authContext - Context for authentication flow\n     */\n    prepare(handshakeDoc, authContext, callback) {\n        callback(undefined, handshakeDoc);\n    }\n    /**\n     * Authenticate\n     *\n     * @param context - A shared context for authentication flow\n     * @param callback - The callback to return the result from the authentication\n     */\n    auth(context, callback) {\n        // TODO(NODE-3483): Replace this with MongoMethodOverrideError\n        callback(new error_1.MongoRuntimeError('`auth` method must be overridden by subclass'));\n    }\n}\nexports.AuthProvider = AuthProvider;\n//# sourceMappingURL=auth_provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCname = exports.performGSSAPICanonicalizeHostName = exports.GSSAPI = exports.GSSAPICanonicalizationValue = void 0;\nconst dns = require(\"dns\");\nconst process = require(\"process\");\nconst deps_1 = require(\"../../deps\");\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\n/** @public */\nexports.GSSAPICanonicalizationValue = Object.freeze({\n    on: true,\n    off: false,\n    none: 'none',\n    forward: 'forward',\n    forwardAndReverse: 'forwardAndReverse'\n});\nclass GSSAPI extends auth_provider_1.AuthProvider {\n    auth(authContext, callback) {\n        const { connection, credentials } = authContext;\n        if (credentials == null)\n            return callback(new error_1.MongoMissingCredentialsError('Credentials required for GSSAPI authentication'));\n        const { username } = credentials;\n        function externalCommand(command, cb) {\n            return connection.command((0, utils_1.ns)('$external.$cmd'), command, undefined, cb);\n        }\n        makeKerberosClient(authContext, (err, client) => {\n            if (err)\n                return callback(err);\n            if (client == null)\n                return callback(new error_1.MongoMissingDependencyError('GSSAPI client missing'));\n            client.step('', (err, payload) => {\n                if (err)\n                    return callback(err);\n                externalCommand(saslStart(payload), (err, result) => {\n                    if (err)\n                        return callback(err);\n                    if (result == null)\n                        return callback();\n                    negotiate(client, 10, result.payload, (err, payload) => {\n                        if (err)\n                            return callback(err);\n                        externalCommand(saslContinue(payload, result.conversationId), (err, result) => {\n                            if (err)\n                                return callback(err);\n                            if (result == null)\n                                return callback();\n                            finalize(client, username, result.payload, (err, payload) => {\n                                if (err)\n                                    return callback(err);\n                                externalCommand({\n                                    saslContinue: 1,\n                                    conversationId: result.conversationId,\n                                    payload\n                                }, (err, result) => {\n                                    if (err)\n                                        return callback(err);\n                                    callback(undefined, result);\n                                });\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    }\n}\nexports.GSSAPI = GSSAPI;\nfunction makeKerberosClient(authContext, callback) {\n    const { hostAddress } = authContext.options;\n    const { credentials } = authContext;\n    if (!hostAddress || typeof hostAddress.host !== 'string' || !credentials) {\n        return callback(new error_1.MongoInvalidArgumentError('Connection must have host and port and credentials defined.'));\n    }\n    if ('kModuleError' in deps_1.Kerberos) {\n        return callback(deps_1.Kerberos['kModuleError']);\n    }\n    const { initializeClient } = deps_1.Kerberos;\n    const { username, password } = credentials;\n    const mechanismProperties = credentials.mechanismProperties;\n    const serviceName = mechanismProperties.SERVICE_NAME ?? 'mongodb';\n    performGSSAPICanonicalizeHostName(hostAddress.host, mechanismProperties, (err, host) => {\n        if (err)\n            return callback(err);\n        const initOptions = {};\n        if (password != null) {\n            Object.assign(initOptions, { user: username, password: password });\n        }\n        const spnHost = mechanismProperties.SERVICE_HOST ?? host;\n        let spn = `${serviceName}${process.platform === 'win32' ? '/' : '@'}${spnHost}`;\n        if ('SERVICE_REALM' in mechanismProperties) {\n            spn = `${spn}@${mechanismProperties.SERVICE_REALM}`;\n        }\n        initializeClient(spn, initOptions, (err, client) => {\n            // TODO(NODE-3483)\n            if (err)\n                return callback(new error_1.MongoRuntimeError(err));\n            callback(undefined, client);\n        });\n    });\n}\nfunction saslStart(payload) {\n    return {\n        saslStart: 1,\n        mechanism: 'GSSAPI',\n        payload,\n        autoAuthorize: 1\n    };\n}\nfunction saslContinue(payload, conversationId) {\n    return {\n        saslContinue: 1,\n        conversationId,\n        payload\n    };\n}\nfunction negotiate(client, retries, payload, callback) {\n    client.step(payload, (err, response) => {\n        // Retries exhausted, raise error\n        if (err && retries === 0)\n            return callback(err);\n        // Adjust number of retries and call step again\n        if (err)\n            return negotiate(client, retries - 1, payload, callback);\n        // Return the payload\n        callback(undefined, response || '');\n    });\n}\nfunction finalize(client, user, payload, callback) {\n    // GSS Client Unwrap\n    client.unwrap(payload, (err, response) => {\n        if (err)\n            return callback(err);\n        // Wrap the response\n        client.wrap(response || '', { user }, (err, wrapped) => {\n            if (err)\n                return callback(err);\n            // Return the payload\n            callback(undefined, wrapped);\n        });\n    });\n}\nfunction performGSSAPICanonicalizeHostName(host, mechanismProperties, callback) {\n    const mode = mechanismProperties.CANONICALIZE_HOST_NAME;\n    if (!mode || mode === exports.GSSAPICanonicalizationValue.none) {\n        return callback(undefined, host);\n    }\n    // If forward and reverse or true\n    if (mode === exports.GSSAPICanonicalizationValue.on ||\n        mode === exports.GSSAPICanonicalizationValue.forwardAndReverse) {\n        // Perform the lookup of the ip address.\n        dns.lookup(host, (error, address) => {\n            // No ip found, return the error.\n            if (error)\n                return callback(error);\n            // Perform a reverse ptr lookup on the ip address.\n            dns.resolvePtr(address, (err, results) => {\n                // This can error as ptr records may not exist for all ips. In this case\n                // fallback to a cname lookup as dns.lookup() does not return the\n                // cname.\n                if (err) {\n                    return resolveCname(host, callback);\n                }\n                // If the ptr did not error but had no results, return the host.\n                callback(undefined, results.length > 0 ? results[0] : host);\n            });\n        });\n    }\n    else {\n        // The case for forward is just to resolve the cname as dns.lookup()\n        // will not return it.\n        resolveCname(host, callback);\n    }\n}\nexports.performGSSAPICanonicalizeHostName = performGSSAPICanonicalizeHostName;\nfunction resolveCname(host, callback) {\n    // Attempt to resolve the host name\n    dns.resolveCname(host, (err, r) => {\n        if (err)\n            return callback(undefined, host);\n        // Get the first resolve host id\n        if (r.length > 0) {\n            return callback(undefined, r[0]);\n        }\n        callback(undefined, host);\n    });\n}\nexports.resolveCname = resolveCname;\n//# sourceMappingURL=gssapi.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MongoCredentials = void 0;\n// Resolves the default auth mechanism according to\nconst process = require(\"process\");\nconst error_1 = require(\"../../error\");\nconst gssapi_1 = require(\"./gssapi\");\nconst providers_1 = require(\"./providers\");\n// https://github.com/mongodb/specifications/blob/master/source/auth/auth.rst\nfunction getDefaultAuthMechanism(hello) {\n    if (hello) {\n        // If hello contains saslSupportedMechs, use scram-sha-256\n        // if it is available, else scram-sha-1\n        if (Array.isArray(hello.saslSupportedMechs)) {\n            return hello.saslSupportedMechs.includes(providers_1.AuthMechanism.MONGODB_SCRAM_SHA256)\n                ? providers_1.AuthMechanism.MONGODB_SCRAM_SHA256\n                : providers_1.AuthMechanism.MONGODB_SCRAM_SHA1;\n        }\n        // Fallback to legacy selection method. If wire version >= 3, use scram-sha-1\n        if (hello.maxWireVersion >= 3) {\n            return providers_1.AuthMechanism.MONGODB_SCRAM_SHA1;\n        }\n    }\n    // Default for wireprotocol < 3\n    return providers_1.AuthMechanism.MONGODB_CR;\n}\n/**\n * A representation of the credentials used by MongoDB\n * @public\n */\nclass MongoCredentials {\n    constructor(options) {\n        this.username = options.username;\n        this.password = options.password;\n        this.source = options.source;\n        if (!this.source && options.db) {\n            this.source = options.db;\n        }\n        this.mechanism = options.mechanism || providers_1.AuthMechanism.MONGODB_DEFAULT;\n        this.mechanismProperties = options.mechanismProperties || {};\n        if (this.mechanism.match(/MONGODB-AWS/i)) {\n            if (!this.username && process.env.AWS_ACCESS_KEY_ID) {\n                this.username = process.env.AWS_ACCESS_KEY_ID;\n            }\n            if (!this.password && process.env.AWS_SECRET_ACCESS_KEY) {\n                this.password = process.env.AWS_SECRET_ACCESS_KEY;\n            }\n            if (this.mechanismProperties.AWS_SESSION_TOKEN == null &&\n                process.env.AWS_SESSION_TOKEN != null) {\n                this.mechanismProperties = {\n                    ...this.mechanismProperties,\n                    AWS_SESSION_TOKEN: process.env.AWS_SESSION_TOKEN\n                };\n            }\n        }\n        Object.freeze(this.mechanismProperties);\n        Object.freeze(this);\n    }\n    /** Determines if two MongoCredentials objects are equivalent */\n    equals(other) {\n        return (this.mechanism === other.mechanism &&\n            this.username === other.username &&\n            this.password === other.password &&\n            this.source === other.source);\n    }\n    /**\n     * If the authentication mechanism is set to \"default\", resolves the authMechanism\n     * based on the server version and server supported sasl mechanisms.\n     *\n     * @param hello - A hello response from the server\n     */\n    resolveAuthMechanism(hello) {\n        // If the mechanism is not \"default\", then it does not need to be resolved\n        if (this.mechanism.match(/DEFAULT/i)) {\n            return new MongoCredentials({\n                username: this.username,\n                password: this.password,\n                source: this.source,\n                mechanism: getDefaultAuthMechanism(hello),\n                mechanismProperties: this.mechanismProperties\n            });\n        }\n        return this;\n    }\n    validate() {\n        if ((this.mechanism === providers_1.AuthMechanism.MONGODB_GSSAPI ||\n            this.mechanism === providers_1.AuthMechanism.MONGODB_CR ||\n            this.mechanism === providers_1.AuthMechanism.MONGODB_PLAIN ||\n            this.mechanism === providers_1.AuthMechanism.MONGODB_SCRAM_SHA1 ||\n            this.mechanism === providers_1.AuthMechanism.MONGODB_SCRAM_SHA256) &&\n            !this.username) {\n            throw new error_1.MongoMissingCredentialsError(`Username required for mechanism '${this.mechanism}'`);\n        }\n        if (this.mechanism === providers_1.AuthMechanism.MONGODB_OIDC) {\n            if (this.username && this.mechanismProperties.PROVIDER_NAME) {\n                throw new error_1.MongoInvalidArgumentError(`username and PROVIDER_NAME may not be used together for mechanism '${this.mechanism}'.`);\n            }\n            if (this.mechanismProperties.PROVIDER_NAME &&\n                this.mechanismProperties.PROVIDER_NAME !== 'aws') {\n                throw new error_1.MongoInvalidArgumentError(`Currently only a PROVIDER_NAME of 'aws' is supported for mechanism '${this.mechanism}'.`);\n            }\n            if (this.mechanismProperties.REFRESH_TOKEN_CALLBACK &&\n                !this.mechanismProperties.REQUEST_TOKEN_CALLBACK) {\n                throw new error_1.MongoInvalidArgumentError(`A REQUEST_TOKEN_CALLBACK must be provided when using a REFRESH_TOKEN_CALLBACK for mechanism '${this.mechanism}'`);\n            }\n            if (!this.mechanismProperties.PROVIDER_NAME &&\n                !this.mechanismProperties.REQUEST_TOKEN_CALLBACK) {\n                throw new error_1.MongoInvalidArgumentError(`Either a PROVIDER_NAME or a REQUEST_TOKEN_CALLBACK must be specified for mechanism '${this.mechanism}'.`);\n            }\n        }\n        if (providers_1.AUTH_MECHS_AUTH_SRC_EXTERNAL.has(this.mechanism)) {\n            if (this.source != null && this.source !== '$external') {\n                // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n                throw new error_1.MongoAPIError(`Invalid source '${this.source}' for mechanism '${this.mechanism}' specified.`);\n            }\n        }\n        if (this.mechanism === providers_1.AuthMechanism.MONGODB_PLAIN && this.source == null) {\n            // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n            throw new error_1.MongoAPIError('PLAIN Authentication Mechanism needs an auth source');\n        }\n        if (this.mechanism === providers_1.AuthMechanism.MONGODB_X509 && this.password != null) {\n            if (this.password === '') {\n                Reflect.set(this, 'password', undefined);\n                return;\n            }\n            // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n            throw new error_1.MongoAPIError(`Password not allowed for mechanism MONGODB-X509`);\n        }\n        const canonicalization = this.mechanismProperties.CANONICALIZE_HOST_NAME ?? false;\n        if (!Object.values(gssapi_1.GSSAPICanonicalizationValue).includes(canonicalization)) {\n            throw new error_1.MongoAPIError(`Invalid CANONICALIZE_HOST_NAME value: ${canonicalization}`);\n        }\n    }\n    static merge(creds, options) {\n        return new MongoCredentials({\n            username: options.username ?? creds?.username ?? '',\n            password: options.password ?? creds?.password ?? '',\n            mechanism: options.mechanism ?? creds?.mechanism ?? providers_1.AuthMechanism.MONGODB_DEFAULT,\n            mechanismProperties: options.mechanismProperties ?? creds?.mechanismProperties ?? {},\n            source: options.source ?? options.db ?? creds?.source ?? 'admin'\n        });\n    }\n}\nexports.MongoCredentials = MongoCredentials;\n//# sourceMappingURL=mongo_credentials.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MongoCR = void 0;\nconst crypto = require(\"crypto\");\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nclass MongoCR extends auth_provider_1.AuthProvider {\n    auth(authContext, callback) {\n        const { connection, credentials } = authContext;\n        if (!credentials) {\n            return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n        }\n        const username = credentials.username;\n        const password = credentials.password;\n        const source = credentials.source;\n        connection.command((0, utils_1.ns)(`${source}.$cmd`), { getnonce: 1 }, undefined, (err, r) => {\n            let nonce = null;\n            let key = null;\n            // Get nonce\n            if (err == null) {\n                nonce = r.nonce;\n                // Use node md5 generator\n                let md5 = crypto.createHash('md5');\n                // Generate keys used for authentication\n                md5.update(`${username}:mongo:${password}`, 'utf8');\n                const hash_password = md5.digest('hex');\n                // Final key\n                md5 = crypto.createHash('md5');\n                md5.update(nonce + username + hash_password, 'utf8');\n                key = md5.digest('hex');\n            }\n            const authenticateCommand = {\n                authenticate: 1,\n                user: username,\n                nonce,\n                key\n            };\n            connection.command((0, utils_1.ns)(`${source}.$cmd`), authenticateCommand, undefined, callback);\n        });\n    }\n}\nexports.MongoCR = MongoCR;\n//# sourceMappingURL=mongocr.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MongoDBAWS = void 0;\nconst crypto = require(\"crypto\");\nconst http = require(\"http\");\nconst process = require(\"process\");\nconst url = require(\"url\");\nconst BSON = require(\"../../bson\");\nconst deps_1 = require(\"../../deps\");\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nconst mongo_credentials_1 = require(\"./mongo_credentials\");\nconst providers_1 = require(\"./providers\");\nconst ASCII_N = 110;\nconst AWS_RELATIVE_URI = 'http://169.254.170.2';\nconst AWS_EC2_URI = 'http://169.254.169.254';\nconst AWS_EC2_PATH = '/latest/meta-data/iam/security-credentials';\nconst bsonOptions = {\n    useBigInt64: false,\n    promoteLongs: true,\n    promoteValues: true,\n    promoteBuffers: false,\n    bsonRegExp: false\n};\nclass MongoDBAWS extends auth_provider_1.AuthProvider {\n    auth(authContext, callback) {\n        const { connection, credentials } = authContext;\n        if (!credentials) {\n            return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n        }\n        if ('kModuleError' in deps_1.aws4) {\n            return callback(deps_1.aws4['kModuleError']);\n        }\n        const { sign } = deps_1.aws4;\n        if ((0, utils_1.maxWireVersion)(connection) < 9) {\n            callback(new error_1.MongoCompatibilityError('MONGODB-AWS authentication requires MongoDB version 4.4 or later'));\n            return;\n        }\n        if (!credentials.username) {\n            makeTempCredentials(credentials, (err, tempCredentials) => {\n                if (err || !tempCredentials)\n                    return callback(err);\n                authContext.credentials = tempCredentials;\n                this.auth(authContext, callback);\n            });\n            return;\n        }\n        const accessKeyId = credentials.username;\n        const secretAccessKey = credentials.password;\n        const sessionToken = credentials.mechanismProperties.AWS_SESSION_TOKEN;\n        // If all three defined, include sessionToken, else include username and pass, else no credentials\n        const awsCredentials = accessKeyId && secretAccessKey && sessionToken\n            ? { accessKeyId, secretAccessKey, sessionToken }\n            : accessKeyId && secretAccessKey\n                ? { accessKeyId, secretAccessKey }\n                : undefined;\n        const db = credentials.source;\n        crypto.randomBytes(32, (err, nonce) => {\n            if (err) {\n                callback(err);\n                return;\n            }\n            const saslStart = {\n                saslStart: 1,\n                mechanism: 'MONGODB-AWS',\n                payload: BSON.serialize({ r: nonce, p: ASCII_N }, bsonOptions)\n            };\n            connection.command((0, utils_1.ns)(`${db}.$cmd`), saslStart, undefined, (err, res) => {\n                if (err)\n                    return callback(err);\n                const serverResponse = BSON.deserialize(res.payload.buffer, bsonOptions);\n                const host = serverResponse.h;\n                const serverNonce = serverResponse.s.buffer;\n                if (serverNonce.length !== 64) {\n                    callback(\n                    // TODO(NODE-3483)\n                    new error_1.MongoRuntimeError(`Invalid server nonce length ${serverNonce.length}, expected 64`));\n                    return;\n                }\n                if (!utils_1.ByteUtils.equals(serverNonce.subarray(0, nonce.byteLength), nonce)) {\n                    // throw because the serverNonce's leading 32 bytes must equal the client nonce's 32 bytes\n                    // https://github.com/mongodb/specifications/blob/875446db44aade414011731840831f38a6c668df/source/auth/auth.rst#id11\n                    // TODO(NODE-3483)\n                    callback(new error_1.MongoRuntimeError('Server nonce does not begin with client nonce'));\n                    return;\n                }\n                if (host.length < 1 || host.length > 255 || host.indexOf('..') !== -1) {\n                    // TODO(NODE-3483)\n                    callback(new error_1.MongoRuntimeError(`Server returned an invalid host: \"${host}\"`));\n                    return;\n                }\n                const body = 'Action=GetCallerIdentity&Version=2011-06-15';\n                const options = sign({\n                    method: 'POST',\n                    host,\n                    region: deriveRegion(serverResponse.h),\n                    service: 'sts',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                        'Content-Length': body.length,\n                        'X-MongoDB-Server-Nonce': utils_1.ByteUtils.toBase64(serverNonce),\n                        'X-MongoDB-GS2-CB-Flag': 'n'\n                    },\n                    path: '/',\n                    body\n                }, awsCredentials);\n                const payload = {\n                    a: options.headers.Authorization,\n                    d: options.headers['X-Amz-Date']\n                };\n                if (sessionToken) {\n                    payload.t = sessionToken;\n                }\n                const saslContinue = {\n                    saslContinue: 1,\n                    conversationId: 1,\n                    payload: BSON.serialize(payload, bsonOptions)\n                };\n                connection.command((0, utils_1.ns)(`${db}.$cmd`), saslContinue, undefined, callback);\n            });\n        });\n    }\n}\nexports.MongoDBAWS = MongoDBAWS;\nfunction makeTempCredentials(credentials, callback) {\n    function done(creds) {\n        if (!creds.AccessKeyId || !creds.SecretAccessKey || !creds.Token) {\n            callback(new error_1.MongoMissingCredentialsError('Could not obtain temporary MONGODB-AWS credentials'));\n            return;\n        }\n        callback(undefined, new mongo_credentials_1.MongoCredentials({\n            username: creds.AccessKeyId,\n            password: creds.SecretAccessKey,\n            source: credentials.source,\n            mechanism: providers_1.AuthMechanism.MONGODB_AWS,\n            mechanismProperties: {\n                AWS_SESSION_TOKEN: creds.Token\n            }\n        }));\n    }\n    const credentialProvider = (0, deps_1.getAwsCredentialProvider)();\n    // Check if the AWS credential provider from the SDK is present. If not,\n    // use the old method.\n    if ('kModuleError' in credentialProvider) {\n        // If the environment variable AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\n        // is set then drivers MUST assume that it was set by an AWS ECS agent\n        if (process.env.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI) {\n            request(`${AWS_RELATIVE_URI}${process.env.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}`, undefined, (err, res) => {\n                if (err)\n                    return callback(err);\n                done(res);\n            });\n            return;\n        }\n        // Otherwise assume we are on an EC2 instance\n        // get a token\n        request(`${AWS_EC2_URI}/latest/api/token`, { method: 'PUT', json: false, headers: { 'X-aws-ec2-metadata-token-ttl-seconds': 30 } }, (err, token) => {\n            if (err)\n                return callback(err);\n            // get role name\n            request(`${AWS_EC2_URI}/${AWS_EC2_PATH}`, { json: false, headers: { 'X-aws-ec2-metadata-token': token } }, (err, roleName) => {\n                if (err)\n                    return callback(err);\n                // get temp credentials\n                request(`${AWS_EC2_URI}/${AWS_EC2_PATH}/${roleName}`, { headers: { 'X-aws-ec2-metadata-token': token } }, (err, creds) => {\n                    if (err)\n                        return callback(err);\n                    done(creds);\n                });\n            });\n        });\n    }\n    else {\n        /*\n         * Creates a credential provider that will attempt to find credentials from the\n         * following sources (listed in order of precedence):\n         *\n         * - Environment variables exposed via process.env\n         * - SSO credentials from token cache\n         * - Web identity token credentials\n         * - Shared credentials and config ini files\n         * - The EC2/ECS Instance Metadata Service\n         */\n        const { fromNodeProviderChain } = credentialProvider;\n        const provider = fromNodeProviderChain();\n        provider()\n            .then((creds) => {\n            done({\n                AccessKeyId: creds.accessKeyId,\n                SecretAccessKey: creds.secretAccessKey,\n                Token: creds.sessionToken,\n                Expiration: creds.expiration\n            });\n        })\n            .catch((error) => {\n            callback(new error_1.MongoAWSError(error.message));\n        });\n    }\n}\nfunction deriveRegion(host) {\n    const parts = host.split('.');\n    if (parts.length === 1 || parts[1] === 'amazonaws') {\n        return 'us-east-1';\n    }\n    return parts[1];\n}\nfunction request(uri, _options, callback) {\n    const options = Object.assign({\n        method: 'GET',\n        timeout: 10000,\n        json: true\n    }, url.parse(uri), _options);\n    const req = http.request(options, res => {\n        res.setEncoding('utf8');\n        let data = '';\n        res.on('data', d => (data += d));\n        res.on('end', () => {\n            if (options.json === false) {\n                callback(undefined, data);\n                return;\n            }\n            try {\n                const parsed = JSON.parse(data);\n                callback(undefined, parsed);\n            }\n            catch (err) {\n                // TODO(NODE-3483)\n                callback(new error_1.MongoRuntimeError(`Invalid JSON response: \"${data}\"`));\n            }\n        });\n    });\n    req.on('timeout', () => {\n        req.destroy(new error_1.MongoAWSError(`AWS request to ${uri} timed out after ${options.timeout} ms`));\n    });\n    req.on('error', err => callback(err));\n    req.end();\n}\n//# sourceMappingURL=mongodb_aws.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MongoDBOIDC = exports.OIDC_WORKFLOWS = void 0;\nconst error_1 = require(\"../../error\");\nconst auth_provider_1 = require(\"./auth_provider\");\nconst aws_service_workflow_1 = require(\"./mongodb_oidc/aws_service_workflow\");\nconst callback_workflow_1 = require(\"./mongodb_oidc/callback_workflow\");\n/** @internal */\nexports.OIDC_WORKFLOWS = new Map();\nexports.OIDC_WORKFLOWS.set('callback', new callback_workflow_1.CallbackWorkflow());\nexports.OIDC_WORKFLOWS.set('aws', new aws_service_workflow_1.AwsServiceWorkflow());\n/**\n * OIDC auth provider.\n */\nclass MongoDBOIDC extends auth_provider_1.AuthProvider {\n    /**\n     * Instantiate the auth provider.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Authenticate using OIDC\n     */\n    auth(authContext, callback) {\n        const { connection, credentials, response } = authContext;\n        if (response?.speculativeAuthenticate) {\n            return callback();\n        }\n        if (!credentials) {\n            return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n        }\n        getWorkflow(credentials, (error, workflow) => {\n            if (error) {\n                return callback(error);\n            }\n            if (!workflow) {\n                return callback(new error_1.MongoRuntimeError(`Could not load workflow for device ${credentials.mechanismProperties.PROVIDER_NAME}`));\n            }\n            workflow.execute(connection, credentials).then(result => {\n                return callback(undefined, result);\n            }, error => {\n                callback(error);\n            });\n        });\n    }\n    /**\n     * Add the speculative auth for the initial handshake.\n     */\n    prepare(handshakeDoc, authContext, callback) {\n        const { credentials } = authContext;\n        if (!credentials) {\n            return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n        }\n        getWorkflow(credentials, (error, workflow) => {\n            if (error) {\n                return callback(error);\n            }\n            if (!workflow) {\n                return callback(new error_1.MongoRuntimeError(`Could not load workflow for provider ${credentials.mechanismProperties.PROVIDER_NAME}`));\n            }\n            workflow.speculativeAuth().then(result => {\n                return callback(undefined, { ...handshakeDoc, ...result });\n            }, error => {\n                callback(error);\n            });\n        });\n    }\n}\nexports.MongoDBOIDC = MongoDBOIDC;\n/**\n * Gets either a device workflow or callback workflow.\n */\nfunction getWorkflow(credentials, callback) {\n    const providerName = credentials.mechanismProperties.PROVIDER_NAME;\n    const workflow = exports.OIDC_WORKFLOWS.get(providerName || 'callback');\n    if (!workflow) {\n        return callback(new error_1.MongoInvalidArgumentError(`Could not load workflow for provider ${credentials.mechanismProperties.PROVIDER_NAME}`));\n    }\n    callback(undefined, workflow);\n}\n//# sourceMappingURL=mongodb_oidc.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsServiceWorkflow = void 0;\nconst promises_1 = require(\"fs/promises\");\nconst process = require(\"process\");\nconst error_1 = require(\"../../../error\");\nconst service_workflow_1 = require(\"./service_workflow\");\n/**\n * Device workflow implementation for AWS.\n *\n * @internal\n */\nclass AwsServiceWorkflow extends service_workflow_1.ServiceWorkflow {\n    constructor() {\n        super();\n    }\n    /**\n     * Get the token from the environment.\n     */\n    async getToken() {\n        const tokenFile = process.env.AWS_WEB_IDENTITY_TOKEN_FILE;\n        if (!tokenFile) {\n            throw new error_1.MongoAWSError('AWS_WEB_IDENTITY_TOKEN_FILE must be set in the environment.');\n        }\n        return (0, promises_1.readFile)(tokenFile, 'utf8');\n    }\n}\nexports.AwsServiceWorkflow = AwsServiceWorkflow;\n//# sourceMappingURL=aws_service_workflow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallbackWorkflow = void 0;\nconst bson_1 = require(\"bson\");\nconst error_1 = require(\"../../../error\");\nconst utils_1 = require(\"../../../utils\");\nconst providers_1 = require(\"../providers\");\nconst token_entry_cache_1 = require(\"./token_entry_cache\");\n/* 5 minutes in milliseconds */\nconst TIMEOUT_MS = 300000;\n/**\n * OIDC implementation of a callback based workflow.\n * @internal\n */\nclass CallbackWorkflow {\n    /**\n     * Instantiate the workflow\n     */\n    constructor() {\n        this.cache = new token_entry_cache_1.TokenEntryCache();\n    }\n    /**\n     * Get the document to add for speculative authentication. Is empty when\n     * callbacks are in play.\n     */\n    speculativeAuth() {\n        return Promise.resolve({});\n    }\n    /**\n     * Execute the workflow.\n     *\n     * Steps:\n     * - If an entry is in the cache\n     *   - If it is not expired\n     *     - Skip step one and use the entry to execute step two.\n     *   - If it is expired\n     *     - If the refresh callback exists\n     *       - remove expired entry from cache\n     *       - call the refresh callback.\n     *       - put the new entry in the cache.\n     *       - execute step two.\n     *     - If the refresh callback does not exist.\n     *       - remove expired entry from cache\n     *       - call the request callback.\n     *       - put the new entry in the cache.\n     *       - execute step two.\n     * - If no entry is in the cache.\n     *   - execute step one.\n     *   - call the refresh callback.\n     *   - put the new entry in the cache.\n     *   - execute step two.\n     */\n    async execute(connection, credentials) {\n        const request = credentials.mechanismProperties.REQUEST_TOKEN_CALLBACK;\n        const refresh = credentials.mechanismProperties.REFRESH_TOKEN_CALLBACK;\n        const entry = this.cache.getEntry(connection.address, credentials.username, request || null, refresh || null);\n        if (entry) {\n            // Check if the entry is not expired.\n            if (entry.isValid()) {\n                // Skip step one and execute the step two saslContinue.\n                try {\n                    const result = await finishAuth(entry.tokenResult, undefined, connection, credentials);\n                    return result;\n                }\n                catch (error) {\n                    // If authentication errors when using a cached token we remove it from\n                    // the cache.\n                    this.cache.deleteEntry(connection.address, credentials.username || '', request || null, refresh || null);\n                    throw error;\n                }\n            }\n            else {\n                // Remove the expired entry from the cache.\n                this.cache.deleteEntry(connection.address, credentials.username || '', request || null, refresh || null);\n                // Execute a refresh of the token and finish auth.\n                return this.refreshAndFinish(connection, credentials, entry.serverResult, entry.tokenResult);\n            }\n        }\n        else {\n            // No entry means to start with the step one saslStart.\n            const result = await connection.commandAsync((0, utils_1.ns)(credentials.source), startCommandDocument(credentials), undefined);\n            const stepOne = bson_1.BSON.deserialize(result.payload.buffer);\n            // Call the request callback and finish auth.\n            return this.requestAndFinish(connection, credentials, stepOne, result.conversationId);\n        }\n    }\n    /**\n     * Execute the refresh callback if it exists, otherwise the request callback, then\n     * finish the authentication.\n     */\n    async refreshAndFinish(connection, credentials, stepOneResult, tokenResult, conversationId) {\n        const request = credentials.mechanismProperties.REQUEST_TOKEN_CALLBACK;\n        const refresh = credentials.mechanismProperties.REFRESH_TOKEN_CALLBACK;\n        // If a refresh callback exists, use it. Otherwise use the request callback.\n        if (refresh) {\n            const result = await refresh(credentials.username, stepOneResult, tokenResult, TIMEOUT_MS);\n            // Validate the result.\n            if (!result || !result.accessToken) {\n                throw new error_1.MongoMissingCredentialsError('REFRESH_TOKEN_CALLBACK must return a valid object with an accessToken');\n            }\n            // Cache a new entry and continue with the saslContinue.\n            this.cache.addEntry(connection.address, credentials.username || '', request || null, refresh, result, stepOneResult);\n            return finishAuth(result, conversationId, connection, credentials);\n        }\n        else {\n            // Fallback to using the request callback.\n            return this.requestAndFinish(connection, credentials, stepOneResult, conversationId);\n        }\n    }\n    /**\n     * Execute the request callback and finish authentication.\n     */\n    async requestAndFinish(connection, credentials, stepOneResult, conversationId) {\n        // Call the request callback.\n        const request = credentials.mechanismProperties.REQUEST_TOKEN_CALLBACK;\n        const refresh = credentials.mechanismProperties.REFRESH_TOKEN_CALLBACK;\n        // Always clear expired entries from the cache on each finish as cleanup.\n        this.cache.deleteExpiredEntries();\n        if (!request) {\n            // Request callback must be present.\n            throw new error_1.MongoInvalidArgumentError('Auth mechanism property REQUEST_TOKEN_CALLBACK is required.');\n        }\n        const tokenResult = await request(credentials.username, stepOneResult, TIMEOUT_MS);\n        // Validate the result.\n        if (!tokenResult || !tokenResult.accessToken) {\n            throw new error_1.MongoMissingCredentialsError('REQUEST_TOKEN_CALLBACK must return a valid object with an accessToken');\n        }\n        // Cache a new entry and continue with the saslContinue.\n        this.cache.addEntry(connection.address, credentials.username || '', request, refresh || null, tokenResult, stepOneResult);\n        return finishAuth(tokenResult, conversationId, connection, credentials);\n    }\n}\nexports.CallbackWorkflow = CallbackWorkflow;\n/**\n * Cache the result of the user supplied callback and execute the\n * step two saslContinue.\n */\nasync function finishAuth(result, conversationId, connection, credentials) {\n    // Execute the step two saslContinue.\n    return connection.commandAsync((0, utils_1.ns)(credentials.source), continueCommandDocument(result.accessToken, conversationId), undefined);\n}\n/**\n * Generate the saslStart command document.\n */\nfunction startCommandDocument(credentials) {\n    const payload = {};\n    if (credentials.username) {\n        payload.n = credentials.username;\n    }\n    return {\n        saslStart: 1,\n        autoAuthorize: 1,\n        mechanism: providers_1.AuthMechanism.MONGODB_OIDC,\n        payload: new bson_1.Binary(bson_1.BSON.serialize(payload))\n    };\n}\n/**\n * Generate the saslContinue command document.\n */\nfunction continueCommandDocument(token, conversationId) {\n    if (conversationId) {\n        return {\n            saslContinue: 1,\n            conversationId: conversationId,\n            payload: new bson_1.Binary(bson_1.BSON.serialize({ jwt: token }))\n        };\n    }\n    // saslContinue requires a conversationId in the command to be valid so in this\n    // case the server allows \"step two\" to actually be a saslStart with the token\n    // as the jwt since the use of the cached value has no correlating conversating\n    // on the particular connection.\n    return {\n        saslStart: 1,\n        mechanism: providers_1.AuthMechanism.MONGODB_OIDC,\n        payload: new bson_1.Binary(bson_1.BSON.serialize({ jwt: token }))\n    };\n}\n//# sourceMappingURL=callback_workflow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.commandDocument = exports.ServiceWorkflow = void 0;\nconst bson_1 = require(\"bson\");\nconst utils_1 = require(\"../../../utils\");\nconst providers_1 = require(\"../providers\");\n/**\n * Common behaviour for OIDC device workflows.\n * @internal\n */\nclass ServiceWorkflow {\n    /**\n     * Execute the workflow. Looks for AWS_WEB_IDENTITY_TOKEN_FILE in the environment\n     * and then attempts to read the token from that path.\n     */\n    async execute(connection, credentials) {\n        const token = await this.getToken();\n        const command = commandDocument(token);\n        return connection.commandAsync((0, utils_1.ns)(credentials.source), command, undefined);\n    }\n    /**\n     * Get the document to add for speculative authentication.\n     */\n    async speculativeAuth() {\n        const token = await this.getToken();\n        return { speculativeAuthenticate: commandDocument(token) };\n    }\n}\nexports.ServiceWorkflow = ServiceWorkflow;\n/**\n * Create the saslStart command document.\n */\nfunction commandDocument(token) {\n    return {\n        saslStart: 1,\n        mechanism: providers_1.AuthMechanism.MONGODB_OIDC,\n        payload: bson_1.BSON.serialize({ jwt: token })\n    };\n}\nexports.commandDocument = commandDocument;\n//# sourceMappingURL=service_workflow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenEntryCache = exports.TokenEntry = void 0;\n/* 5 minutes in milliseonds */\nconst EXPIRATION_BUFFER_MS = 300000;\n/* Default expiration is now for when no expiration provided */\nconst DEFAULT_EXPIRATION_SECS = 0;\n/* Counter for function \"hashes\".*/\nlet FN_HASH_COUNTER = 0;\n/* No function present function */\nconst NO_FUNCTION = () => {\n    return Promise.resolve({ accessToken: 'test' });\n};\n/* The map of function hashes */\nconst FN_HASHES = new WeakMap();\n/* Put the no function hash in the map. */\nFN_HASHES.set(NO_FUNCTION, FN_HASH_COUNTER);\n/** @internal */\nclass TokenEntry {\n    /**\n     * Instantiate the entry.\n     */\n    constructor(tokenResult, serverResult, expiration) {\n        this.tokenResult = tokenResult;\n        this.serverResult = serverResult;\n        this.expiration = expiration;\n    }\n    /**\n     * The entry is still valid if the expiration is more than\n     * 5 minutes from the expiration time.\n     */\n    isValid() {\n        return this.expiration - Date.now() > EXPIRATION_BUFFER_MS;\n    }\n}\nexports.TokenEntry = TokenEntry;\n/**\n * Cache of OIDC token entries.\n * @internal\n */\nclass TokenEntryCache {\n    constructor() {\n        this.entries = new Map();\n    }\n    /**\n     * Set an entry in the token cache.\n     */\n    addEntry(address, username, requestFn, refreshFn, tokenResult, serverResult) {\n        const entry = new TokenEntry(tokenResult, serverResult, expirationTime(tokenResult.expiresInSeconds));\n        this.entries.set(cacheKey(address, username, requestFn, refreshFn), entry);\n        return entry;\n    }\n    /**\n     * Clear the cache.\n     */\n    clear() {\n        this.entries.clear();\n    }\n    /**\n     * Delete an entry from the cache.\n     */\n    deleteEntry(address, username, requestFn, refreshFn) {\n        this.entries.delete(cacheKey(address, username, requestFn, refreshFn));\n    }\n    /**\n     * Get an entry from the cache.\n     */\n    getEntry(address, username, requestFn, refreshFn) {\n        return this.entries.get(cacheKey(address, username, requestFn, refreshFn));\n    }\n    /**\n     * Delete all expired entries from the cache.\n     */\n    deleteExpiredEntries() {\n        for (const [key, entry] of this.entries) {\n            if (!entry.isValid()) {\n                this.entries.delete(key);\n            }\n        }\n    }\n}\nexports.TokenEntryCache = TokenEntryCache;\n/**\n * Get an expiration time in milliseconds past epoch. Defaults to immediate.\n */\nfunction expirationTime(expiresInSeconds) {\n    return Date.now() + (expiresInSeconds ?? DEFAULT_EXPIRATION_SECS) * 1000;\n}\n/**\n * Create a cache key from the address and username.\n */\nfunction cacheKey(address, username, requestFn, refreshFn) {\n    return `${address}-${username}-${hashFunctions(requestFn, refreshFn)}`;\n}\n/**\n * Get the hash string for the request and refresh functions.\n */\nfunction hashFunctions(requestFn, refreshFn) {\n    let requestHash = FN_HASHES.get(requestFn || NO_FUNCTION);\n    let refreshHash = FN_HASHES.get(refreshFn || NO_FUNCTION);\n    if (!requestHash && requestFn) {\n        // Create a new one for the function and put it in the map.\n        FN_HASH_COUNTER++;\n        requestHash = FN_HASH_COUNTER;\n        FN_HASHES.set(requestFn, FN_HASH_COUNTER);\n    }\n    if (!refreshHash && refreshFn) {\n        // Create a new one for the function and put it in the map.\n        FN_HASH_COUNTER++;\n        refreshHash = FN_HASH_COUNTER;\n        FN_HASHES.set(refreshFn, FN_HASH_COUNTER);\n    }\n    return `${requestHash}-${refreshHash}`;\n}\n//# sourceMappingURL=token_entry_cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plain = void 0;\nconst buffer_1 = require(\"buffer\");\nconst bson_1 = require(\"../../bson\");\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nclass Plain extends auth_provider_1.AuthProvider {\n    auth(authContext, callback) {\n        const { connection, credentials } = authContext;\n        if (!credentials) {\n            return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n        }\n        const username = credentials.username;\n        const password = credentials.password;\n        const payload = new bson_1.Binary(buffer_1.Buffer.from(`\\x00${username}\\x00${password}`));\n        const command = {\n            saslStart: 1,\n            mechanism: 'PLAIN',\n            payload: payload,\n            autoAuthorize: 1\n        };\n        connection.command((0, utils_1.ns)('$external.$cmd'), command, undefined, callback);\n    }\n}\nexports.Plain = Plain;\n//# sourceMappingURL=plain.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AUTH_MECHS_AUTH_SRC_EXTERNAL = exports.AuthMechanism = void 0;\n/** @public */\nexports.AuthMechanism = Object.freeze({\n    MONGODB_AWS: 'MONGODB-AWS',\n    MONGODB_CR: 'MONGODB-CR',\n    MONGODB_DEFAULT: 'DEFAULT',\n    MONGODB_GSSAPI: 'GSSAPI',\n    MONGODB_PLAIN: 'PLAIN',\n    MONGODB_SCRAM_SHA1: 'SCRAM-SHA-1',\n    MONGODB_SCRAM_SHA256: 'SCRAM-SHA-256',\n    MONGODB_X509: 'MONGODB-X509',\n    MONGODB_OIDC: 'MONGODB-OIDC'\n});\n/** @internal */\nexports.AUTH_MECHS_AUTH_SRC_EXTERNAL = new Set([\n    exports.AuthMechanism.MONGODB_GSSAPI,\n    exports.AuthMechanism.MONGODB_AWS,\n    exports.AuthMechanism.MONGODB_OIDC,\n    exports.AuthMechanism.MONGODB_X509\n]);\n//# sourceMappingURL=providers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScramSHA256 = exports.ScramSHA1 = void 0;\nconst buffer_1 = require(\"buffer\");\nconst crypto = require(\"crypto\");\nconst bson_1 = require(\"../../bson\");\nconst deps_1 = require(\"../../deps\");\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nconst providers_1 = require(\"./providers\");\nclass ScramSHA extends auth_provider_1.AuthProvider {\n    constructor(cryptoMethod) {\n        super();\n        this.cryptoMethod = cryptoMethod || 'sha1';\n    }\n    prepare(handshakeDoc, authContext, callback) {\n        const cryptoMethod = this.cryptoMethod;\n        const credentials = authContext.credentials;\n        if (!credentials) {\n            return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n        }\n        if (cryptoMethod === 'sha256' && deps_1.saslprep == null) {\n            (0, utils_1.emitWarning)('Warning: no saslprep library specified. Passwords will not be sanitized');\n        }\n        crypto.randomBytes(24, (err, nonce) => {\n            if (err) {\n                return callback(err);\n            }\n            // store the nonce for later use\n            Object.assign(authContext, { nonce });\n            const request = Object.assign({}, handshakeDoc, {\n                speculativeAuthenticate: Object.assign(makeFirstMessage(cryptoMethod, credentials, nonce), {\n                    db: credentials.source\n                })\n            });\n            callback(undefined, request);\n        });\n    }\n    auth(authContext, callback) {\n        const response = authContext.response;\n        if (response && response.speculativeAuthenticate) {\n            continueScramConversation(this.cryptoMethod, response.speculativeAuthenticate, authContext, callback);\n            return;\n        }\n        executeScram(this.cryptoMethod, authContext, callback);\n    }\n}\nfunction cleanUsername(username) {\n    return username.replace('=', '=3D').replace(',', '=2C');\n}\nfunction clientFirstMessageBare(username, nonce) {\n    // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n    // Since the username is not sasl-prep-d, we need to do this here.\n    return buffer_1.Buffer.concat([\n        buffer_1.Buffer.from('n=', 'utf8'),\n        buffer_1.Buffer.from(username, 'utf8'),\n        buffer_1.Buffer.from(',r=', 'utf8'),\n        buffer_1.Buffer.from(nonce.toString('base64'), 'utf8')\n    ]);\n}\nfunction makeFirstMessage(cryptoMethod, credentials, nonce) {\n    const username = cleanUsername(credentials.username);\n    const mechanism = cryptoMethod === 'sha1' ? providers_1.AuthMechanism.MONGODB_SCRAM_SHA1 : providers_1.AuthMechanism.MONGODB_SCRAM_SHA256;\n    // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n    // Since the username is not sasl-prep-d, we need to do this here.\n    return {\n        saslStart: 1,\n        mechanism,\n        payload: new bson_1.Binary(buffer_1.Buffer.concat([buffer_1.Buffer.from('n,,', 'utf8'), clientFirstMessageBare(username, nonce)])),\n        autoAuthorize: 1,\n        options: { skipEmptyExchange: true }\n    };\n}\nfunction executeScram(cryptoMethod, authContext, callback) {\n    const { connection, credentials } = authContext;\n    if (!credentials) {\n        return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    if (!authContext.nonce) {\n        return callback(new error_1.MongoInvalidArgumentError('AuthContext must contain a valid nonce property'));\n    }\n    const nonce = authContext.nonce;\n    const db = credentials.source;\n    const saslStartCmd = makeFirstMessage(cryptoMethod, credentials, nonce);\n    connection.command((0, utils_1.ns)(`${db}.$cmd`), saslStartCmd, undefined, (_err, result) => {\n        const err = resolveError(_err, result);\n        if (err) {\n            return callback(err);\n        }\n        continueScramConversation(cryptoMethod, result, authContext, callback);\n    });\n}\nfunction continueScramConversation(cryptoMethod, response, authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    if (!credentials) {\n        return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    if (!authContext.nonce) {\n        return callback(new error_1.MongoInvalidArgumentError('Unable to continue SCRAM without valid nonce'));\n    }\n    const nonce = authContext.nonce;\n    const db = credentials.source;\n    const username = cleanUsername(credentials.username);\n    const password = credentials.password;\n    let processedPassword;\n    if (cryptoMethod === 'sha256') {\n        processedPassword = 'kModuleError' in deps_1.saslprep ? password : (0, deps_1.saslprep)(password);\n    }\n    else {\n        try {\n            processedPassword = passwordDigest(username, password);\n        }\n        catch (e) {\n            return callback(e);\n        }\n    }\n    const payload = buffer_1.Buffer.isBuffer(response.payload)\n        ? new bson_1.Binary(response.payload)\n        : response.payload;\n    const dict = parsePayload(payload.value());\n    const iterations = parseInt(dict.i, 10);\n    if (iterations && iterations < 4096) {\n        callback(\n        // TODO(NODE-3483)\n        new error_1.MongoRuntimeError(`Server returned an invalid iteration count ${iterations}`), false);\n        return;\n    }\n    const salt = dict.s;\n    const rnonce = dict.r;\n    if (rnonce.startsWith('nonce')) {\n        // TODO(NODE-3483)\n        callback(new error_1.MongoRuntimeError(`Server returned an invalid nonce: ${rnonce}`), false);\n        return;\n    }\n    // Set up start of proof\n    const withoutProof = `c=biws,r=${rnonce}`;\n    const saltedPassword = HI(processedPassword, buffer_1.Buffer.from(salt, 'base64'), iterations, cryptoMethod);\n    const clientKey = HMAC(cryptoMethod, saltedPassword, 'Client Key');\n    const serverKey = HMAC(cryptoMethod, saltedPassword, 'Server Key');\n    const storedKey = H(cryptoMethod, clientKey);\n    const authMessage = [clientFirstMessageBare(username, nonce), payload.value(), withoutProof].join(',');\n    const clientSignature = HMAC(cryptoMethod, storedKey, authMessage);\n    const clientProof = `p=${xor(clientKey, clientSignature)}`;\n    const clientFinal = [withoutProof, clientProof].join(',');\n    const serverSignature = HMAC(cryptoMethod, serverKey, authMessage);\n    const saslContinueCmd = {\n        saslContinue: 1,\n        conversationId: response.conversationId,\n        payload: new bson_1.Binary(buffer_1.Buffer.from(clientFinal))\n    };\n    connection.command((0, utils_1.ns)(`${db}.$cmd`), saslContinueCmd, undefined, (_err, r) => {\n        const err = resolveError(_err, r);\n        if (err) {\n            return callback(err);\n        }\n        const parsedResponse = parsePayload(r.payload.value());\n        if (!compareDigest(buffer_1.Buffer.from(parsedResponse.v, 'base64'), serverSignature)) {\n            callback(new error_1.MongoRuntimeError('Server returned an invalid signature'));\n            return;\n        }\n        if (!r || r.done !== false) {\n            return callback(err, r);\n        }\n        const retrySaslContinueCmd = {\n            saslContinue: 1,\n            conversationId: r.conversationId,\n            payload: buffer_1.Buffer.alloc(0)\n        };\n        connection.command((0, utils_1.ns)(`${db}.$cmd`), retrySaslContinueCmd, undefined, callback);\n    });\n}\nfunction parsePayload(payload) {\n    const dict = {};\n    const parts = payload.split(',');\n    for (let i = 0; i < parts.length; i++) {\n        const valueParts = parts[i].split('=');\n        dict[valueParts[0]] = valueParts[1];\n    }\n    return dict;\n}\nfunction passwordDigest(username, password) {\n    if (typeof username !== 'string') {\n        throw new error_1.MongoInvalidArgumentError('Username must be a string');\n    }\n    if (typeof password !== 'string') {\n        throw new error_1.MongoInvalidArgumentError('Password must be a string');\n    }\n    if (password.length === 0) {\n        throw new error_1.MongoInvalidArgumentError('Password cannot be empty');\n    }\n    let md5;\n    try {\n        md5 = crypto.createHash('md5');\n    }\n    catch (err) {\n        if (crypto.getFips()) {\n            // This error is (slightly) more helpful than what comes from OpenSSL directly, e.g.\n            // 'Error: error:060800C8:digital envelope routines:EVP_DigestInit_ex:disabled for FIPS'\n            throw new Error('Auth mechanism SCRAM-SHA-1 is not supported in FIPS mode');\n        }\n        throw err;\n    }\n    md5.update(`${username}:mongo:${password}`, 'utf8');\n    return md5.digest('hex');\n}\n// XOR two buffers\nfunction xor(a, b) {\n    if (!buffer_1.Buffer.isBuffer(a)) {\n        a = buffer_1.Buffer.from(a);\n    }\n    if (!buffer_1.Buffer.isBuffer(b)) {\n        b = buffer_1.Buffer.from(b);\n    }\n    const length = Math.max(a.length, b.length);\n    const res = [];\n    for (let i = 0; i < length; i += 1) {\n        res.push(a[i] ^ b[i]);\n    }\n    return buffer_1.Buffer.from(res).toString('base64');\n}\nfunction H(method, text) {\n    return crypto.createHash(method).update(text).digest();\n}\nfunction HMAC(method, key, text) {\n    return crypto.createHmac(method, key).update(text).digest();\n}\nlet _hiCache = {};\nlet _hiCacheCount = 0;\nfunction _hiCachePurge() {\n    _hiCache = {};\n    _hiCacheCount = 0;\n}\nconst hiLengthMap = {\n    sha256: 32,\n    sha1: 20\n};\nfunction HI(data, salt, iterations, cryptoMethod) {\n    // omit the work if already generated\n    const key = [data, salt.toString('base64'), iterations].join('_');\n    if (_hiCache[key] != null) {\n        return _hiCache[key];\n    }\n    // generate the salt\n    const saltedData = crypto.pbkdf2Sync(data, salt, iterations, hiLengthMap[cryptoMethod], cryptoMethod);\n    // cache a copy to speed up the next lookup, but prevent unbounded cache growth\n    if (_hiCacheCount >= 200) {\n        _hiCachePurge();\n    }\n    _hiCache[key] = saltedData;\n    _hiCacheCount += 1;\n    return saltedData;\n}\nfunction compareDigest(lhs, rhs) {\n    if (lhs.length !== rhs.length) {\n        return false;\n    }\n    if (typeof crypto.timingSafeEqual === 'function') {\n        return crypto.timingSafeEqual(lhs, rhs);\n    }\n    let result = 0;\n    for (let i = 0; i < lhs.length; i++) {\n        result |= lhs[i] ^ rhs[i];\n    }\n    return result === 0;\n}\nfunction resolveError(err, result) {\n    if (err)\n        return err;\n    if (result) {\n        if (result.$err || result.errmsg)\n            return new error_1.MongoServerError(result);\n    }\n    return;\n}\nclass ScramSHA1 extends ScramSHA {\n    constructor() {\n        super('sha1');\n    }\n}\nexports.ScramSHA1 = ScramSHA1;\nclass ScramSHA256 extends ScramSHA {\n    constructor() {\n        super('sha256');\n    }\n}\nexports.ScramSHA256 = ScramSHA256;\n//# sourceMappingURL=scram.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.X509 = void 0;\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nclass X509 extends auth_provider_1.AuthProvider {\n    prepare(handshakeDoc, authContext, callback) {\n        const { credentials } = authContext;\n        if (!credentials) {\n            return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n        }\n        Object.assign(handshakeDoc, {\n            speculativeAuthenticate: x509AuthenticateCommand(credentials)\n        });\n        callback(undefined, handshakeDoc);\n    }\n    auth(authContext, callback) {\n        const connection = authContext.connection;\n        const credentials = authContext.credentials;\n        if (!credentials) {\n            return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n        }\n        const response = authContext.response;\n        if (response && response.speculativeAuthenticate) {\n            return callback();\n        }\n        connection.command((0, utils_1.ns)('$external.$cmd'), x509AuthenticateCommand(credentials), undefined, callback);\n    }\n}\nexports.X509 = X509;\nfunction x509AuthenticateCommand(credentials) {\n    const command = { authenticate: 1, mechanism: 'MONGODB-X509' };\n    if (credentials.username) {\n        command.user = credentials.username;\n    }\n    return command;\n}\n//# sourceMappingURL=x509.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SENSITIVE_COMMANDS = exports.CommandFailedEvent = exports.CommandSucceededEvent = exports.CommandStartedEvent = void 0;\nconst constants_1 = require(\"../constants\");\nconst utils_1 = require(\"../utils\");\nconst commands_1 = require(\"./commands\");\n/**\n * An event indicating the start of a given\n * @public\n * @category Event\n */\nclass CommandStartedEvent {\n    /**\n     * Create a started event\n     *\n     * @internal\n     * @param pool - the pool that originated the command\n     * @param command - the command\n     */\n    constructor(connection, command) {\n        const cmd = extractCommand(command);\n        const commandName = extractCommandName(cmd);\n        const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n        // TODO: remove in major revision, this is not spec behavior\n        if (exports.SENSITIVE_COMMANDS.has(commandName)) {\n            this.commandObj = {};\n            this.commandObj[commandName] = true;\n        }\n        this.address = address;\n        this.connectionId = connectionId;\n        this.serviceId = serviceId;\n        this.requestId = command.requestId;\n        this.databaseName = databaseName(command);\n        this.commandName = commandName;\n        this.command = maybeRedact(commandName, cmd, cmd);\n    }\n    /* @internal */\n    get hasServiceId() {\n        return !!this.serviceId;\n    }\n}\nexports.CommandStartedEvent = CommandStartedEvent;\n/**\n * An event indicating the success of a given command\n * @public\n * @category Event\n */\nclass CommandSucceededEvent {\n    /**\n     * Create a succeeded event\n     *\n     * @internal\n     * @param pool - the pool that originated the command\n     * @param command - the command\n     * @param reply - the reply for this command from the server\n     * @param started - a high resolution tuple timestamp of when the command was first sent, to calculate duration\n     */\n    constructor(connection, command, reply, started) {\n        const cmd = extractCommand(command);\n        const commandName = extractCommandName(cmd);\n        const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n        this.address = address;\n        this.connectionId = connectionId;\n        this.serviceId = serviceId;\n        this.requestId = command.requestId;\n        this.commandName = commandName;\n        this.duration = (0, utils_1.calculateDurationInMs)(started);\n        this.reply = maybeRedact(commandName, cmd, extractReply(command, reply));\n    }\n    /* @internal */\n    get hasServiceId() {\n        return !!this.serviceId;\n    }\n}\nexports.CommandSucceededEvent = CommandSucceededEvent;\n/**\n * An event indicating the failure of a given command\n * @public\n * @category Event\n */\nclass CommandFailedEvent {\n    /**\n     * Create a failure event\n     *\n     * @internal\n     * @param pool - the pool that originated the command\n     * @param command - the command\n     * @param error - the generated error or a server error response\n     * @param started - a high resolution tuple timestamp of when the command was first sent, to calculate duration\n     */\n    constructor(connection, command, error, started) {\n        const cmd = extractCommand(command);\n        const commandName = extractCommandName(cmd);\n        const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n        this.address = address;\n        this.connectionId = connectionId;\n        this.serviceId = serviceId;\n        this.requestId = command.requestId;\n        this.commandName = commandName;\n        this.duration = (0, utils_1.calculateDurationInMs)(started);\n        this.failure = maybeRedact(commandName, cmd, error);\n    }\n    /* @internal */\n    get hasServiceId() {\n        return !!this.serviceId;\n    }\n}\nexports.CommandFailedEvent = CommandFailedEvent;\n/**\n * Commands that we want to redact because of the sensitive nature of their contents\n * @internal\n */\nexports.SENSITIVE_COMMANDS = new Set([\n    'authenticate',\n    'saslStart',\n    'saslContinue',\n    'getnonce',\n    'createUser',\n    'updateUser',\n    'copydbgetnonce',\n    'copydbsaslstart',\n    'copydb'\n]);\nconst HELLO_COMMANDS = new Set(['hello', constants_1.LEGACY_HELLO_COMMAND, constants_1.LEGACY_HELLO_COMMAND_CAMEL_CASE]);\n// helper methods\nconst extractCommandName = (commandDoc) => Object.keys(commandDoc)[0];\nconst namespace = (command) => command.ns;\nconst databaseName = (command) => command.ns.split('.')[0];\nconst collectionName = (command) => command.ns.split('.')[1];\nconst maybeRedact = (commandName, commandDoc, result) => exports.SENSITIVE_COMMANDS.has(commandName) ||\n    (HELLO_COMMANDS.has(commandName) && commandDoc.speculativeAuthenticate)\n    ? {}\n    : result;\nconst LEGACY_FIND_QUERY_MAP = {\n    $query: 'filter',\n    $orderby: 'sort',\n    $hint: 'hint',\n    $comment: 'comment',\n    $maxScan: 'maxScan',\n    $max: 'max',\n    $min: 'min',\n    $returnKey: 'returnKey',\n    $showDiskLoc: 'showRecordId',\n    $maxTimeMS: 'maxTimeMS',\n    $snapshot: 'snapshot'\n};\nconst LEGACY_FIND_OPTIONS_MAP = {\n    numberToSkip: 'skip',\n    numberToReturn: 'batchSize',\n    returnFieldSelector: 'projection'\n};\nconst OP_QUERY_KEYS = [\n    'tailable',\n    'oplogReplay',\n    'noCursorTimeout',\n    'awaitData',\n    'partial',\n    'exhaust'\n];\n/** Extract the actual command from the query, possibly up-converting if it's a legacy format */\nfunction extractCommand(command) {\n    if (command instanceof commands_1.Msg) {\n        return (0, utils_1.deepCopy)(command.command);\n    }\n    if (command.query?.$query) {\n        let result;\n        if (command.ns === 'admin.$cmd') {\n            // up-convert legacy command\n            result = Object.assign({}, command.query.$query);\n        }\n        else {\n            // up-convert legacy find command\n            result = { find: collectionName(command) };\n            Object.keys(LEGACY_FIND_QUERY_MAP).forEach(key => {\n                if (command.query[key] != null) {\n                    result[LEGACY_FIND_QUERY_MAP[key]] = (0, utils_1.deepCopy)(command.query[key]);\n                }\n            });\n        }\n        Object.keys(LEGACY_FIND_OPTIONS_MAP).forEach(key => {\n            const legacyKey = key;\n            if (command[legacyKey] != null) {\n                result[LEGACY_FIND_OPTIONS_MAP[legacyKey]] = (0, utils_1.deepCopy)(command[legacyKey]);\n            }\n        });\n        OP_QUERY_KEYS.forEach(key => {\n            if (command[key]) {\n                result[key] = command[key];\n            }\n        });\n        if (command.pre32Limit != null) {\n            result.limit = command.pre32Limit;\n        }\n        if (command.query.$explain) {\n            return { explain: result };\n        }\n        return result;\n    }\n    const clonedQuery = {};\n    const clonedCommand = {};\n    if (command.query) {\n        for (const k in command.query) {\n            clonedQuery[k] = (0, utils_1.deepCopy)(command.query[k]);\n        }\n        clonedCommand.query = clonedQuery;\n    }\n    for (const k in command) {\n        if (k === 'query')\n            continue;\n        clonedCommand[k] = (0, utils_1.deepCopy)(command[k]);\n    }\n    return command.query ? clonedQuery : clonedCommand;\n}\nfunction extractReply(command, reply) {\n    if (!reply) {\n        return reply;\n    }\n    if (command instanceof commands_1.Msg) {\n        return (0, utils_1.deepCopy)(reply.result ? reply.result : reply);\n    }\n    // is this a legacy find command?\n    if (command.query && command.query.$query != null) {\n        return {\n            ok: 1,\n            cursor: {\n                id: (0, utils_1.deepCopy)(reply.cursorId),\n                ns: namespace(command),\n                firstBatch: (0, utils_1.deepCopy)(reply.documents)\n            }\n        };\n    }\n    return (0, utils_1.deepCopy)(reply.result ? reply.result : reply);\n}\nfunction extractConnectionDetails(connection) {\n    let connectionId;\n    if ('id' in connection) {\n        connectionId = connection.id;\n    }\n    return {\n        address: connection.address,\n        serviceId: connection.serviceId,\n        connectionId\n    };\n}\n//# sourceMappingURL=command_monitoring_events.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinMsg = exports.Msg = exports.Response = exports.Query = void 0;\nconst buffer_1 = require(\"buffer\");\nconst BSON = require(\"../bson\");\nconst error_1 = require(\"../error\");\nconst read_preference_1 = require(\"../read_preference\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"./wire_protocol/constants\");\n// Incrementing request id\nlet _requestId = 0;\n// Query flags\nconst OPTS_TAILABLE_CURSOR = 2;\nconst OPTS_SECONDARY = 4;\nconst OPTS_OPLOG_REPLAY = 8;\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\nconst OPTS_AWAIT_DATA = 32;\nconst OPTS_EXHAUST = 64;\nconst OPTS_PARTIAL = 128;\n// Response flags\nconst CURSOR_NOT_FOUND = 1;\nconst QUERY_FAILURE = 2;\nconst SHARD_CONFIG_STALE = 4;\nconst AWAIT_CAPABLE = 8;\n/**************************************************************\n * QUERY\n **************************************************************/\n/** @internal */\nclass Query {\n    constructor(ns, query, options) {\n        // Basic options needed to be passed in\n        // TODO(NODE-3483): Replace with MongoCommandError\n        if (ns == null)\n            throw new error_1.MongoRuntimeError('Namespace must be specified for query');\n        // TODO(NODE-3483): Replace with MongoCommandError\n        if (query == null)\n            throw new error_1.MongoRuntimeError('A query document must be specified for query');\n        // Validate that we are not passing 0x00 in the collection name\n        if (ns.indexOf('\\x00') !== -1) {\n            // TODO(NODE-3483): Use MongoNamespace static method\n            throw new error_1.MongoRuntimeError('Namespace cannot contain a null character');\n        }\n        // Basic options\n        this.ns = ns;\n        this.query = query;\n        // Additional options\n        this.numberToSkip = options.numberToSkip || 0;\n        this.numberToReturn = options.numberToReturn || 0;\n        this.returnFieldSelector = options.returnFieldSelector || undefined;\n        this.requestId = Query.getRequestId();\n        // special case for pre-3.2 find commands, delete ASAP\n        this.pre32Limit = options.pre32Limit;\n        // Serialization option\n        this.serializeFunctions =\n            typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n        this.ignoreUndefined =\n            typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n        this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n        this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n        this.batchSize = this.numberToReturn;\n        // Flags\n        this.tailable = false;\n        this.secondaryOk = typeof options.secondaryOk === 'boolean' ? options.secondaryOk : false;\n        this.oplogReplay = false;\n        this.noCursorTimeout = false;\n        this.awaitData = false;\n        this.exhaust = false;\n        this.partial = false;\n    }\n    /** Assign next request Id. */\n    incRequestId() {\n        this.requestId = _requestId++;\n    }\n    /** Peek next request Id. */\n    nextRequestId() {\n        return _requestId + 1;\n    }\n    /** Increment then return next request Id. */\n    static getRequestId() {\n        return ++_requestId;\n    }\n    // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n    toBin() {\n        const buffers = [];\n        let projection = null;\n        // Set up the flags\n        let flags = 0;\n        if (this.tailable) {\n            flags |= OPTS_TAILABLE_CURSOR;\n        }\n        if (this.secondaryOk) {\n            flags |= OPTS_SECONDARY;\n        }\n        if (this.oplogReplay) {\n            flags |= OPTS_OPLOG_REPLAY;\n        }\n        if (this.noCursorTimeout) {\n            flags |= OPTS_NO_CURSOR_TIMEOUT;\n        }\n        if (this.awaitData) {\n            flags |= OPTS_AWAIT_DATA;\n        }\n        if (this.exhaust) {\n            flags |= OPTS_EXHAUST;\n        }\n        if (this.partial) {\n            flags |= OPTS_PARTIAL;\n        }\n        // If batchSize is different to this.numberToReturn\n        if (this.batchSize !== this.numberToReturn)\n            this.numberToReturn = this.batchSize;\n        // Allocate write protocol header buffer\n        const header = buffer_1.Buffer.alloc(4 * 4 + // Header\n            4 + // Flags\n            buffer_1.Buffer.byteLength(this.ns) +\n            1 + // namespace\n            4 + // numberToSkip\n            4 // numberToReturn\n        );\n        // Add header to buffers\n        buffers.push(header);\n        // Serialize the query\n        const query = BSON.serialize(this.query, {\n            checkKeys: this.checkKeys,\n            serializeFunctions: this.serializeFunctions,\n            ignoreUndefined: this.ignoreUndefined\n        });\n        // Add query document\n        buffers.push(query);\n        if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n            // Serialize the projection document\n            projection = BSON.serialize(this.returnFieldSelector, {\n                checkKeys: this.checkKeys,\n                serializeFunctions: this.serializeFunctions,\n                ignoreUndefined: this.ignoreUndefined\n            });\n            // Add projection document\n            buffers.push(projection);\n        }\n        // Total message size\n        const totalLength = header.length + query.length + (projection ? projection.length : 0);\n        // Set up the index\n        let index = 4;\n        // Write total document length\n        header[3] = (totalLength >> 24) & 0xff;\n        header[2] = (totalLength >> 16) & 0xff;\n        header[1] = (totalLength >> 8) & 0xff;\n        header[0] = totalLength & 0xff;\n        // Write header information requestId\n        header[index + 3] = (this.requestId >> 24) & 0xff;\n        header[index + 2] = (this.requestId >> 16) & 0xff;\n        header[index + 1] = (this.requestId >> 8) & 0xff;\n        header[index] = this.requestId & 0xff;\n        index = index + 4;\n        // Write header information responseTo\n        header[index + 3] = (0 >> 24) & 0xff;\n        header[index + 2] = (0 >> 16) & 0xff;\n        header[index + 1] = (0 >> 8) & 0xff;\n        header[index] = 0 & 0xff;\n        index = index + 4;\n        // Write header information OP_QUERY\n        header[index + 3] = (constants_1.OP_QUERY >> 24) & 0xff;\n        header[index + 2] = (constants_1.OP_QUERY >> 16) & 0xff;\n        header[index + 1] = (constants_1.OP_QUERY >> 8) & 0xff;\n        header[index] = constants_1.OP_QUERY & 0xff;\n        index = index + 4;\n        // Write header information flags\n        header[index + 3] = (flags >> 24) & 0xff;\n        header[index + 2] = (flags >> 16) & 0xff;\n        header[index + 1] = (flags >> 8) & 0xff;\n        header[index] = flags & 0xff;\n        index = index + 4;\n        // Write collection name\n        index = index + header.write(this.ns, index, 'utf8') + 1;\n        header[index - 1] = 0;\n        // Write header information flags numberToSkip\n        header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n        header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n        header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n        header[index] = this.numberToSkip & 0xff;\n        index = index + 4;\n        // Write header information flags numberToReturn\n        header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n        header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n        header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n        header[index] = this.numberToReturn & 0xff;\n        index = index + 4;\n        // Return the buffers\n        return buffers;\n    }\n}\nexports.Query = Query;\n/** @internal */\nclass Response {\n    constructor(message, msgHeader, msgBody, opts) {\n        this.documents = new Array(0);\n        this.parsed = false;\n        this.raw = message;\n        this.data = msgBody;\n        this.opts = opts ?? {\n            useBigInt64: false,\n            promoteLongs: true,\n            promoteValues: true,\n            promoteBuffers: false,\n            bsonRegExp: false\n        };\n        // Read the message header\n        this.length = msgHeader.length;\n        this.requestId = msgHeader.requestId;\n        this.responseTo = msgHeader.responseTo;\n        this.opCode = msgHeader.opCode;\n        this.fromCompressed = msgHeader.fromCompressed;\n        // Flag values\n        this.useBigInt64 = typeof this.opts.useBigInt64 === 'boolean' ? this.opts.useBigInt64 : false;\n        this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n        this.promoteValues =\n            typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n        this.promoteBuffers =\n            typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n        this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n    }\n    isParsed() {\n        return this.parsed;\n    }\n    parse(options) {\n        // Don't parse again if not needed\n        if (this.parsed)\n            return;\n        options = options ?? {};\n        // Allow the return of raw documents instead of parsing\n        const raw = options.raw || false;\n        const documentsReturnedIn = options.documentsReturnedIn || null;\n        const useBigInt64 = options.useBigInt64 ?? this.opts.useBigInt64;\n        const promoteLongs = options.promoteLongs ?? this.opts.promoteLongs;\n        const promoteValues = options.promoteValues ?? this.opts.promoteValues;\n        const promoteBuffers = options.promoteBuffers ?? this.opts.promoteBuffers;\n        const bsonRegExp = options.bsonRegExp ?? this.opts.bsonRegExp;\n        let bsonSize;\n        // Set up the options\n        const _options = {\n            useBigInt64,\n            promoteLongs,\n            promoteValues,\n            promoteBuffers,\n            bsonRegExp\n        };\n        // Position within OP_REPLY at which documents start\n        // (See https://www.mongodb.com/docs/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n        this.index = 20;\n        // Read the message body\n        this.responseFlags = this.data.readInt32LE(0);\n        this.cursorId = new BSON.Long(this.data.readInt32LE(4), this.data.readInt32LE(8));\n        this.startingFrom = this.data.readInt32LE(12);\n        this.numberReturned = this.data.readInt32LE(16);\n        // Preallocate document array\n        this.documents = new Array(this.numberReturned);\n        this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n        this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n        this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n        this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n        // Parse Body\n        for (let i = 0; i < this.numberReturned; i++) {\n            bsonSize =\n                this.data[this.index] |\n                    (this.data[this.index + 1] << 8) |\n                    (this.data[this.index + 2] << 16) |\n                    (this.data[this.index + 3] << 24);\n            // If we have raw results specified slice the return document\n            if (raw) {\n                this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n            }\n            else {\n                this.documents[i] = BSON.deserialize(this.data.slice(this.index, this.index + bsonSize), _options);\n            }\n            // Adjust the index\n            this.index = this.index + bsonSize;\n        }\n        if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n            const fieldsAsRaw = {};\n            fieldsAsRaw[documentsReturnedIn] = true;\n            _options.fieldsAsRaw = fieldsAsRaw;\n            const doc = BSON.deserialize(this.documents[0], _options);\n            this.documents = [doc];\n        }\n        // Set parsed\n        this.parsed = true;\n    }\n}\nexports.Response = Response;\n// Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n// Msg Flags\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n/** @internal */\nclass Msg {\n    constructor(ns, command, options) {\n        // Basic options needed to be passed in\n        if (command == null)\n            throw new error_1.MongoInvalidArgumentError('Query document must be specified for query');\n        // Basic options\n        this.ns = ns;\n        this.command = command;\n        this.command.$db = (0, utils_1.databaseNamespace)(ns);\n        if (options.readPreference && options.readPreference.mode !== read_preference_1.ReadPreference.PRIMARY) {\n            this.command.$readPreference = options.readPreference.toJSON();\n        }\n        // Ensure empty options\n        this.options = options ?? {};\n        // Additional options\n        this.requestId = options.requestId ? options.requestId : Msg.getRequestId();\n        // Serialization option\n        this.serializeFunctions =\n            typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n        this.ignoreUndefined =\n            typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n        this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n        this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n        // flags\n        this.checksumPresent = false;\n        this.moreToCome = options.moreToCome || false;\n        this.exhaustAllowed =\n            typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n    }\n    toBin() {\n        const buffers = [];\n        let flags = 0;\n        if (this.checksumPresent) {\n            flags |= OPTS_CHECKSUM_PRESENT;\n        }\n        if (this.moreToCome) {\n            flags |= OPTS_MORE_TO_COME;\n        }\n        if (this.exhaustAllowed) {\n            flags |= OPTS_EXHAUST_ALLOWED;\n        }\n        const header = buffer_1.Buffer.alloc(4 * 4 + // Header\n            4 // Flags\n        );\n        buffers.push(header);\n        let totalLength = header.length;\n        const command = this.command;\n        totalLength += this.makeDocumentSegment(buffers, command);\n        header.writeInt32LE(totalLength, 0); // messageLength\n        header.writeInt32LE(this.requestId, 4); // requestID\n        header.writeInt32LE(0, 8); // responseTo\n        header.writeInt32LE(constants_1.OP_MSG, 12); // opCode\n        header.writeUInt32LE(flags, 16); // flags\n        return buffers;\n    }\n    makeDocumentSegment(buffers, document) {\n        const payloadTypeBuffer = buffer_1.Buffer.alloc(1);\n        payloadTypeBuffer[0] = 0;\n        const documentBuffer = this.serializeBson(document);\n        buffers.push(payloadTypeBuffer);\n        buffers.push(documentBuffer);\n        return payloadTypeBuffer.length + documentBuffer.length;\n    }\n    serializeBson(document) {\n        return BSON.serialize(document, {\n            checkKeys: this.checkKeys,\n            serializeFunctions: this.serializeFunctions,\n            ignoreUndefined: this.ignoreUndefined\n        });\n    }\n    static getRequestId() {\n        _requestId = (_requestId + 1) & 0x7fffffff;\n        return _requestId;\n    }\n}\nexports.Msg = Msg;\n/** @internal */\nclass BinMsg {\n    constructor(message, msgHeader, msgBody, opts) {\n        this.parsed = false;\n        this.raw = message;\n        this.data = msgBody;\n        this.opts = opts ?? {\n            useBigInt64: false,\n            promoteLongs: true,\n            promoteValues: true,\n            promoteBuffers: false,\n            bsonRegExp: false\n        };\n        // Read the message header\n        this.length = msgHeader.length;\n        this.requestId = msgHeader.requestId;\n        this.responseTo = msgHeader.responseTo;\n        this.opCode = msgHeader.opCode;\n        this.fromCompressed = msgHeader.fromCompressed;\n        // Read response flags\n        this.responseFlags = msgBody.readInt32LE(0);\n        this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n        this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n        this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n        this.useBigInt64 = typeof this.opts.useBigInt64 === 'boolean' ? this.opts.useBigInt64 : false;\n        this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n        this.promoteValues =\n            typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n        this.promoteBuffers =\n            typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n        this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n        this.documents = [];\n    }\n    isParsed() {\n        return this.parsed;\n    }\n    parse(options) {\n        // Don't parse again if not needed\n        if (this.parsed)\n            return;\n        options = options ?? {};\n        this.index = 4;\n        // Allow the return of raw documents instead of parsing\n        const raw = options.raw || false;\n        const documentsReturnedIn = options.documentsReturnedIn || null;\n        const useBigInt64 = options.useBigInt64 ?? this.opts.useBigInt64;\n        const promoteLongs = options.promoteLongs ?? this.opts.promoteLongs;\n        const promoteValues = options.promoteValues ?? this.opts.promoteValues;\n        const promoteBuffers = options.promoteBuffers ?? this.opts.promoteBuffers;\n        const bsonRegExp = options.bsonRegExp ?? this.opts.bsonRegExp;\n        const validation = this.parseBsonSerializationOptions(options);\n        // Set up the options\n        const bsonOptions = {\n            useBigInt64,\n            promoteLongs,\n            promoteValues,\n            promoteBuffers,\n            bsonRegExp,\n            validation\n            // Due to the strictness of the BSON libraries validation option we need this cast\n        };\n        while (this.index < this.data.length) {\n            const payloadType = this.data.readUInt8(this.index++);\n            if (payloadType === 0) {\n                const bsonSize = this.data.readUInt32LE(this.index);\n                const bin = this.data.slice(this.index, this.index + bsonSize);\n                this.documents.push(raw ? bin : BSON.deserialize(bin, bsonOptions));\n                this.index += bsonSize;\n            }\n            else if (payloadType === 1) {\n                // It was decided that no driver makes use of payload type 1\n                // TODO(NODE-3483): Replace with MongoDeprecationError\n                throw new error_1.MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n            }\n        }\n        if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n            const fieldsAsRaw = {};\n            fieldsAsRaw[documentsReturnedIn] = true;\n            bsonOptions.fieldsAsRaw = fieldsAsRaw;\n            const doc = BSON.deserialize(this.documents[0], bsonOptions);\n            this.documents = [doc];\n        }\n        this.parsed = true;\n    }\n    parseBsonSerializationOptions({ enableUtf8Validation }) {\n        if (enableUtf8Validation === false) {\n            return { utf8: false };\n        }\n        return { utf8: { writeErrors: false } };\n    }\n}\nexports.BinMsg = BinMsg;\n//# sourceMappingURL=commands.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LEGAL_TCP_SOCKET_OPTIONS = exports.LEGAL_TLS_SOCKET_OPTIONS = exports.prepareHandshakeDocument = exports.connect = void 0;\nconst net = require(\"net\");\nconst process = require(\"process\");\nconst tls = require(\"tls\");\nconst bson_1 = require(\"../bson\");\nconst constants_1 = require(\"../constants\");\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst auth_provider_1 = require(\"./auth/auth_provider\");\nconst gssapi_1 = require(\"./auth/gssapi\");\nconst mongocr_1 = require(\"./auth/mongocr\");\nconst mongodb_aws_1 = require(\"./auth/mongodb_aws\");\nconst mongodb_oidc_1 = require(\"./auth/mongodb_oidc\");\nconst plain_1 = require(\"./auth/plain\");\nconst providers_1 = require(\"./auth/providers\");\nconst scram_1 = require(\"./auth/scram\");\nconst x509_1 = require(\"./auth/x509\");\nconst connection_1 = require(\"./connection\");\nconst constants_2 = require(\"./wire_protocol/constants\");\nconst AUTH_PROVIDERS = new Map([\n    [providers_1.AuthMechanism.MONGODB_AWS, new mongodb_aws_1.MongoDBAWS()],\n    [providers_1.AuthMechanism.MONGODB_CR, new mongocr_1.MongoCR()],\n    [providers_1.AuthMechanism.MONGODB_GSSAPI, new gssapi_1.GSSAPI()],\n    [providers_1.AuthMechanism.MONGODB_OIDC, new mongodb_oidc_1.MongoDBOIDC()],\n    [providers_1.AuthMechanism.MONGODB_PLAIN, new plain_1.Plain()],\n    [providers_1.AuthMechanism.MONGODB_SCRAM_SHA1, new scram_1.ScramSHA1()],\n    [providers_1.AuthMechanism.MONGODB_SCRAM_SHA256, new scram_1.ScramSHA256()],\n    [providers_1.AuthMechanism.MONGODB_X509, new x509_1.X509()]\n]);\nfunction connect(options, callback) {\n    makeConnection({ ...options, existingSocket: undefined }, (err, socket) => {\n        if (err || !socket) {\n            return callback(err);\n        }\n        let ConnectionType = options.connectionType ?? connection_1.Connection;\n        if (options.autoEncrypter) {\n            ConnectionType = connection_1.CryptoConnection;\n        }\n        performInitialHandshake(new ConnectionType(socket, options), options, callback);\n    });\n}\nexports.connect = connect;\nfunction checkSupportedServer(hello, options) {\n    const serverVersionHighEnough = hello &&\n        (typeof hello.maxWireVersion === 'number' || hello.maxWireVersion instanceof bson_1.Int32) &&\n        hello.maxWireVersion >= constants_2.MIN_SUPPORTED_WIRE_VERSION;\n    const serverVersionLowEnough = hello &&\n        (typeof hello.minWireVersion === 'number' || hello.minWireVersion instanceof bson_1.Int32) &&\n        hello.minWireVersion <= constants_2.MAX_SUPPORTED_WIRE_VERSION;\n    if (serverVersionHighEnough) {\n        if (serverVersionLowEnough) {\n            return null;\n        }\n        const message = `Server at ${options.hostAddress} reports minimum wire version ${JSON.stringify(hello.minWireVersion)}, but this version of the Node.js Driver requires at most ${constants_2.MAX_SUPPORTED_WIRE_VERSION} (MongoDB ${constants_2.MAX_SUPPORTED_SERVER_VERSION})`;\n        return new error_1.MongoCompatibilityError(message);\n    }\n    const message = `Server at ${options.hostAddress} reports maximum wire version ${JSON.stringify(hello.maxWireVersion) ?? 0}, but this version of the Node.js Driver requires at least ${constants_2.MIN_SUPPORTED_WIRE_VERSION} (MongoDB ${constants_2.MIN_SUPPORTED_SERVER_VERSION})`;\n    return new error_1.MongoCompatibilityError(message);\n}\nfunction performInitialHandshake(conn, options, _callback) {\n    const callback = function (err, ret) {\n        if (err && conn) {\n            conn.destroy({ force: false });\n        }\n        _callback(err, ret);\n    };\n    const credentials = options.credentials;\n    if (credentials) {\n        if (!(credentials.mechanism === providers_1.AuthMechanism.MONGODB_DEFAULT) &&\n            !AUTH_PROVIDERS.get(credentials.mechanism)) {\n            callback(new error_1.MongoInvalidArgumentError(`AuthMechanism '${credentials.mechanism}' not supported`));\n            return;\n        }\n    }\n    const authContext = new auth_provider_1.AuthContext(conn, credentials, options);\n    prepareHandshakeDocument(authContext, (err, handshakeDoc) => {\n        if (err || !handshakeDoc) {\n            return callback(err);\n        }\n        const handshakeOptions = Object.assign({}, options);\n        if (typeof options.connectTimeoutMS === 'number') {\n            // The handshake technically is a monitoring check, so its socket timeout should be connectTimeoutMS\n            handshakeOptions.socketTimeoutMS = options.connectTimeoutMS;\n        }\n        const start = new Date().getTime();\n        conn.command((0, utils_1.ns)('admin.$cmd'), handshakeDoc, handshakeOptions, (err, response) => {\n            if (err) {\n                callback(err);\n                return;\n            }\n            if (response?.ok === 0) {\n                callback(new error_1.MongoServerError(response));\n                return;\n            }\n            if (!('isWritablePrimary' in response)) {\n                // Provide hello-style response document.\n                response.isWritablePrimary = response[constants_1.LEGACY_HELLO_COMMAND];\n            }\n            if (response.helloOk) {\n                conn.helloOk = true;\n            }\n            const supportedServerErr = checkSupportedServer(response, options);\n            if (supportedServerErr) {\n                callback(supportedServerErr);\n                return;\n            }\n            if (options.loadBalanced) {\n                if (!response.serviceId) {\n                    return callback(new error_1.MongoCompatibilityError('Driver attempted to initialize in load balancing mode, ' +\n                        'but the server does not support this mode.'));\n                }\n            }\n            // NOTE: This is metadata attached to the connection while porting away from\n            //       handshake being done in the `Server` class. Likely, it should be\n            //       relocated, or at very least restructured.\n            conn.hello = response;\n            conn.lastHelloMS = new Date().getTime() - start;\n            if (!response.arbiterOnly && credentials) {\n                // store the response on auth context\n                authContext.response = response;\n                const resolvedCredentials = credentials.resolveAuthMechanism(response);\n                const provider = AUTH_PROVIDERS.get(resolvedCredentials.mechanism);\n                if (!provider) {\n                    return callback(new error_1.MongoInvalidArgumentError(`No AuthProvider for ${resolvedCredentials.mechanism} defined.`));\n                }\n                provider.auth(authContext, err => {\n                    if (err) {\n                        if (err instanceof error_1.MongoError) {\n                            err.addErrorLabel(error_1.MongoErrorLabel.HandshakeError);\n                            if ((0, error_1.needsRetryableWriteLabel)(err, response.maxWireVersion)) {\n                                err.addErrorLabel(error_1.MongoErrorLabel.RetryableWriteError);\n                            }\n                        }\n                        return callback(err);\n                    }\n                    callback(undefined, conn);\n                });\n                return;\n            }\n            callback(undefined, conn);\n        });\n    });\n}\n/**\n * @internal\n *\n * This function is only exposed for testing purposes.\n */\nfunction prepareHandshakeDocument(authContext, callback) {\n    const options = authContext.options;\n    const compressors = options.compressors ? options.compressors : [];\n    const { serverApi } = authContext.connection;\n    const handshakeDoc = {\n        [serverApi?.version ? 'hello' : constants_1.LEGACY_HELLO_COMMAND]: 1,\n        helloOk: true,\n        client: options.metadata || (0, utils_1.makeClientMetadata)(options),\n        compression: compressors\n    };\n    if (options.loadBalanced === true) {\n        handshakeDoc.loadBalanced = true;\n    }\n    const credentials = authContext.credentials;\n    if (credentials) {\n        if (credentials.mechanism === providers_1.AuthMechanism.MONGODB_DEFAULT && credentials.username) {\n            handshakeDoc.saslSupportedMechs = `${credentials.source}.${credentials.username}`;\n            const provider = AUTH_PROVIDERS.get(providers_1.AuthMechanism.MONGODB_SCRAM_SHA256);\n            if (!provider) {\n                // This auth mechanism is always present.\n                return callback(new error_1.MongoInvalidArgumentError(`No AuthProvider for ${providers_1.AuthMechanism.MONGODB_SCRAM_SHA256} defined.`));\n            }\n            return provider.prepare(handshakeDoc, authContext, callback);\n        }\n        const provider = AUTH_PROVIDERS.get(credentials.mechanism);\n        if (!provider) {\n            return callback(new error_1.MongoInvalidArgumentError(`No AuthProvider for ${credentials.mechanism} defined.`));\n        }\n        return provider.prepare(handshakeDoc, authContext, callback);\n    }\n    callback(undefined, handshakeDoc);\n}\nexports.prepareHandshakeDocument = prepareHandshakeDocument;\n/** @public */\nexports.LEGAL_TLS_SOCKET_OPTIONS = [\n    'ALPNProtocols',\n    'ca',\n    'cert',\n    'checkServerIdentity',\n    'ciphers',\n    'crl',\n    'ecdhCurve',\n    'key',\n    'minDHSize',\n    'passphrase',\n    'pfx',\n    'rejectUnauthorized',\n    'secureContext',\n    'secureProtocol',\n    'servername',\n    'session'\n];\n/** @public */\nexports.LEGAL_TCP_SOCKET_OPTIONS = [\n    'family',\n    'hints',\n    'localAddress',\n    'localPort',\n    'lookup'\n];\nfunction parseConnectOptions(options) {\n    const hostAddress = options.hostAddress;\n    if (!hostAddress)\n        throw new error_1.MongoInvalidArgumentError('Option \"hostAddress\" is required');\n    const result = {};\n    for (const name of exports.LEGAL_TCP_SOCKET_OPTIONS) {\n        if (options[name] != null) {\n            result[name] = options[name];\n        }\n    }\n    if (typeof hostAddress.socketPath === 'string') {\n        result.path = hostAddress.socketPath;\n        return result;\n    }\n    else if (typeof hostAddress.host === 'string') {\n        result.host = hostAddress.host;\n        result.port = hostAddress.port;\n        return result;\n    }\n    else {\n        // This should never happen since we set up HostAddresses\n        // But if we don't throw here the socket could hang until timeout\n        // TODO(NODE-3483)\n        throw new error_1.MongoRuntimeError(`Unexpected HostAddress ${JSON.stringify(hostAddress)}`);\n    }\n}\nfunction parseSslOptions(options) {\n    const result = parseConnectOptions(options);\n    // Merge in valid SSL options\n    for (const name of exports.LEGAL_TLS_SOCKET_OPTIONS) {\n        if (options[name] != null) {\n            result[name] = options[name];\n        }\n    }\n    if (options.existingSocket) {\n        result.socket = options.existingSocket;\n    }\n    // Set default sni servername to be the same as host\n    if (result.servername == null && result.host && !net.isIP(result.host)) {\n        result.servername = result.host;\n    }\n    return result;\n}\nconst SOCKET_ERROR_EVENT_LIST = ['error', 'close', 'timeout', 'parseError'];\nconst SOCKET_ERROR_EVENTS = new Set(SOCKET_ERROR_EVENT_LIST);\nfunction makeConnection(options, _callback) {\n    const useTLS = options.tls ?? false;\n    const keepAlive = options.keepAlive ?? true;\n    const socketTimeoutMS = options.socketTimeoutMS ?? Reflect.get(options, 'socketTimeout') ?? 0;\n    const noDelay = options.noDelay ?? true;\n    const connectTimeoutMS = options.connectTimeoutMS ?? 30000;\n    const rejectUnauthorized = options.rejectUnauthorized ?? true;\n    const keepAliveInitialDelay = ((options.keepAliveInitialDelay ?? 120000) > socketTimeoutMS\n        ? Math.round(socketTimeoutMS / 2)\n        : options.keepAliveInitialDelay) ?? 120000;\n    const existingSocket = options.existingSocket;\n    let socket;\n    const callback = function (err, ret) {\n        if (err && socket) {\n            socket.destroy();\n        }\n        _callback(err, ret);\n    };\n    if (options.proxyHost != null) {\n        // Currently, only Socks5 is supported.\n        return makeSocks5Connection({\n            ...options,\n            connectTimeoutMS // Should always be present for Socks5\n        }, callback);\n    }\n    if (useTLS) {\n        const tlsSocket = tls.connect(parseSslOptions(options));\n        if (typeof tlsSocket.disableRenegotiation === 'function') {\n            tlsSocket.disableRenegotiation();\n        }\n        socket = tlsSocket;\n    }\n    else if (existingSocket) {\n        // In the TLS case, parseSslOptions() sets options.socket to existingSocket,\n        // so we only need to handle the non-TLS case here (where existingSocket\n        // gives us all we need out of the box).\n        socket = existingSocket;\n    }\n    else {\n        socket = net.createConnection(parseConnectOptions(options));\n    }\n    socket.setKeepAlive(keepAlive, keepAliveInitialDelay);\n    socket.setTimeout(connectTimeoutMS);\n    socket.setNoDelay(noDelay);\n    const connectEvent = useTLS ? 'secureConnect' : 'connect';\n    let cancellationHandler;\n    function errorHandler(eventName) {\n        return (err) => {\n            SOCKET_ERROR_EVENTS.forEach(event => socket.removeAllListeners(event));\n            if (cancellationHandler && options.cancellationToken) {\n                options.cancellationToken.removeListener('cancel', cancellationHandler);\n            }\n            socket.removeListener(connectEvent, connectHandler);\n            callback(connectionFailureError(eventName, err));\n        };\n    }\n    function connectHandler() {\n        SOCKET_ERROR_EVENTS.forEach(event => socket.removeAllListeners(event));\n        if (cancellationHandler && options.cancellationToken) {\n            options.cancellationToken.removeListener('cancel', cancellationHandler);\n        }\n        if ('authorizationError' in socket) {\n            if (socket.authorizationError && rejectUnauthorized) {\n                return callback(socket.authorizationError);\n            }\n        }\n        socket.setTimeout(0);\n        callback(undefined, socket);\n    }\n    SOCKET_ERROR_EVENTS.forEach(event => socket.once(event, errorHandler(event)));\n    if (options.cancellationToken) {\n        cancellationHandler = errorHandler('cancel');\n        options.cancellationToken.once('cancel', cancellationHandler);\n    }\n    if (existingSocket) {\n        process.nextTick(connectHandler);\n    }\n    else {\n        socket.once(connectEvent, connectHandler);\n    }\n}\nfunction makeSocks5Connection(options, callback) {\n    const hostAddress = utils_1.HostAddress.fromHostPort(options.proxyHost ?? '', // proxyHost is guaranteed to set here\n    options.proxyPort ?? 1080);\n    // First, connect to the proxy server itself:\n    makeConnection({\n        ...options,\n        hostAddress,\n        tls: false,\n        proxyHost: undefined\n    }, (err, rawSocket) => {\n        if (err) {\n            return callback(err);\n        }\n        const destination = parseConnectOptions(options);\n        if (typeof destination.host !== 'string' || typeof destination.port !== 'number') {\n            return callback(new error_1.MongoInvalidArgumentError('Can only make Socks5 connections to TCP hosts'));\n        }\n        let socks = null;\n        try {\n            socks = require('socks');\n        }\n        catch {\n            // ignore for webpack\n        }\n        if (socks == null) {\n            throw new error_1.MongoMissingDependencyError('you asked for socks, got cold feet?');\n        }\n        // Then, establish the Socks5 proxy connection:\n        socks.SocksClient.createConnection({\n            existing_socket: rawSocket,\n            timeout: options.connectTimeoutMS,\n            command: 'connect',\n            destination: {\n                host: destination.host,\n                port: destination.port\n            },\n            proxy: {\n                // host and port are ignored because we pass existing_socket\n                host: 'iLoveJavaScript',\n                port: 0,\n                type: 5,\n                userId: options.proxyUsername || undefined,\n                password: options.proxyPassword || undefined\n            }\n        }).then(({ socket }) => {\n            // Finally, now treat the resulting duplex stream as the\n            // socket over which we send and receive wire protocol messages:\n            makeConnection({\n                ...options,\n                existingSocket: socket,\n                proxyHost: undefined\n            }, callback);\n        }, error => callback(connectionFailureError('error', error)));\n    });\n}\nfunction connectionFailureError(type, err) {\n    switch (type) {\n        case 'error':\n            return new error_1.MongoNetworkError(err);\n        case 'timeout':\n            return new error_1.MongoNetworkTimeoutError('connection timed out');\n        case 'close':\n            return new error_1.MongoNetworkError('connection closed');\n        case 'cancel':\n            return new error_1.MongoNetworkError('connection establishment was cancelled');\n        default:\n            return new error_1.MongoNetworkError('unknown network error');\n    }\n}\n//# sourceMappingURL=connect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasSessionSupport = exports.CryptoConnection = exports.Connection = void 0;\nconst process = require(\"process\");\nconst timers_1 = require(\"timers\");\nconst util_1 = require(\"util\");\nconst constants_1 = require(\"../constants\");\nconst error_1 = require(\"../error\");\nconst mongo_types_1 = require(\"../mongo_types\");\nconst sessions_1 = require(\"../sessions\");\nconst utils_1 = require(\"../utils\");\nconst command_monitoring_events_1 = require(\"./command_monitoring_events\");\nconst commands_1 = require(\"./commands\");\nconst message_stream_1 = require(\"./message_stream\");\nconst stream_description_1 = require(\"./stream_description\");\nconst shared_1 = require(\"./wire_protocol/shared\");\n/** @internal */\nconst kStream = Symbol('stream');\n/** @internal */\nconst kQueue = Symbol('queue');\n/** @internal */\nconst kMessageStream = Symbol('messageStream');\n/** @internal */\nconst kGeneration = Symbol('generation');\n/** @internal */\nconst kLastUseTime = Symbol('lastUseTime');\n/** @internal */\nconst kClusterTime = Symbol('clusterTime');\n/** @internal */\nconst kDescription = Symbol('description');\n/** @internal */\nconst kHello = Symbol('hello');\n/** @internal */\nconst kAutoEncrypter = Symbol('autoEncrypter');\n/** @internal */\nconst kDelayedTimeoutId = Symbol('delayedTimeoutId');\nconst INVALID_QUEUE_SIZE = 'Connection internal queue contains more than 1 operation description';\n/** @internal */\nclass Connection extends mongo_types_1.TypedEventEmitter {\n    constructor(stream, options) {\n        super();\n        this.commandAsync = (0, util_1.promisify)((ns, cmd, options, callback) => this.command(ns, cmd, options, callback));\n        this.id = options.id;\n        this.address = streamIdentifier(stream, options);\n        this.socketTimeoutMS = options.socketTimeoutMS ?? 0;\n        this.monitorCommands = options.monitorCommands;\n        this.serverApi = options.serverApi;\n        this.closed = false;\n        this[kHello] = null;\n        this[kClusterTime] = null;\n        this[kDescription] = new stream_description_1.StreamDescription(this.address, options);\n        this[kGeneration] = options.generation;\n        this[kLastUseTime] = (0, utils_1.now)();\n        // setup parser stream and message handling\n        this[kQueue] = new Map();\n        this[kMessageStream] = new message_stream_1.MessageStream({\n            ...options,\n            maxBsonMessageSize: this.hello?.maxBsonMessageSize\n        });\n        this[kStream] = stream;\n        this[kDelayedTimeoutId] = null;\n        this[kMessageStream].on('message', message => this.onMessage(message));\n        this[kMessageStream].on('error', error => this.onError(error));\n        this[kStream].on('close', () => this.onClose());\n        this[kStream].on('timeout', () => this.onTimeout());\n        this[kStream].on('error', () => {\n            /* ignore errors, listen to `close` instead */\n        });\n        // hook the message stream up to the passed in stream\n        this[kStream].pipe(this[kMessageStream]);\n        this[kMessageStream].pipe(this[kStream]);\n    }\n    get description() {\n        return this[kDescription];\n    }\n    get hello() {\n        return this[kHello];\n    }\n    // the `connect` method stores the result of the handshake hello on the connection\n    set hello(response) {\n        this[kDescription].receiveResponse(response);\n        this[kDescription] = Object.freeze(this[kDescription]);\n        // TODO: remove this, and only use the `StreamDescription` in the future\n        this[kHello] = response;\n    }\n    // Set the whether the message stream is for a monitoring connection.\n    set isMonitoringConnection(value) {\n        this[kMessageStream].isMonitoringConnection = value;\n    }\n    get isMonitoringConnection() {\n        return this[kMessageStream].isMonitoringConnection;\n    }\n    get serviceId() {\n        return this.hello?.serviceId;\n    }\n    get loadBalanced() {\n        return this.description.loadBalanced;\n    }\n    get generation() {\n        return this[kGeneration] || 0;\n    }\n    set generation(generation) {\n        this[kGeneration] = generation;\n    }\n    get idleTime() {\n        return (0, utils_1.calculateDurationInMs)(this[kLastUseTime]);\n    }\n    get clusterTime() {\n        return this[kClusterTime];\n    }\n    get stream() {\n        return this[kStream];\n    }\n    markAvailable() {\n        this[kLastUseTime] = (0, utils_1.now)();\n    }\n    onError(error) {\n        this.cleanup(true, error);\n    }\n    onClose() {\n        const message = `connection ${this.id} to ${this.address} closed`;\n        this.cleanup(true, new error_1.MongoNetworkError(message));\n    }\n    onTimeout() {\n        this[kDelayedTimeoutId] = (0, timers_1.setTimeout)(() => {\n            const message = `connection ${this.id} to ${this.address} timed out`;\n            const beforeHandshake = this.hello == null;\n            this.cleanup(true, new error_1.MongoNetworkTimeoutError(message, { beforeHandshake }));\n        }, 1).unref(); // No need for this timer to hold the event loop open\n    }\n    onMessage(message) {\n        const delayedTimeoutId = this[kDelayedTimeoutId];\n        if (delayedTimeoutId != null) {\n            (0, timers_1.clearTimeout)(delayedTimeoutId);\n            this[kDelayedTimeoutId] = null;\n        }\n        const socketTimeoutMS = this[kStream].timeout ?? 0;\n        this[kStream].setTimeout(0);\n        // always emit the message, in case we are streaming\n        this.emit('message', message);\n        let operationDescription = this[kQueue].get(message.responseTo);\n        if (!operationDescription && this.isMonitoringConnection) {\n            // This is how we recover when the initial hello's requestId is not\n            // the responseTo when hello responses have been skipped:\n            // First check if the map is of invalid size\n            if (this[kQueue].size > 1) {\n                this.cleanup(true, new error_1.MongoRuntimeError(INVALID_QUEUE_SIZE));\n            }\n            else {\n                // Get the first orphaned operation description.\n                const entry = this[kQueue].entries().next();\n                if (entry.value != null) {\n                    const [requestId, orphaned] = entry.value;\n                    // If the orphaned operation description exists then set it.\n                    operationDescription = orphaned;\n                    // Remove the entry with the bad request id from the queue.\n                    this[kQueue].delete(requestId);\n                }\n            }\n        }\n        if (!operationDescription) {\n            return;\n        }\n        const callback = operationDescription.cb;\n        // SERVER-45775: For exhaust responses we should be able to use the same requestId to\n        // track response, however the server currently synthetically produces remote requests\n        // making the `responseTo` change on each response\n        this[kQueue].delete(message.responseTo);\n        if ('moreToCome' in message && message.moreToCome) {\n            // If the operation description check above does find an orphaned\n            // description and sets the operationDescription then this line will put one\n            // back in the queue with the correct requestId and will resolve not being able\n            // to find the next one via the responseTo of the next streaming hello.\n            this[kQueue].set(message.requestId, operationDescription);\n            this[kStream].setTimeout(socketTimeoutMS);\n        }\n        try {\n            // Pass in the entire description because it has BSON parsing options\n            message.parse(operationDescription);\n        }\n        catch (err) {\n            // If this error is generated by our own code, it will already have the correct class applied\n            // if it is not, then it is coming from a catastrophic data parse failure or the BSON library\n            // in either case, it should not be wrapped\n            callback(err);\n            return;\n        }\n        if (message.documents[0]) {\n            const document = message.documents[0];\n            const session = operationDescription.session;\n            if (session) {\n                (0, sessions_1.updateSessionFromResponse)(session, document);\n            }\n            if (document.$clusterTime) {\n                this[kClusterTime] = document.$clusterTime;\n                this.emit(Connection.CLUSTER_TIME_RECEIVED, document.$clusterTime);\n            }\n            if (operationDescription.command) {\n                if (document.writeConcernError) {\n                    callback(new error_1.MongoWriteConcernError(document.writeConcernError, document), document);\n                    return;\n                }\n                if (document.ok === 0 || document.$err || document.errmsg || document.code) {\n                    callback(new error_1.MongoServerError(document));\n                    return;\n                }\n            }\n            else {\n                // Pre 3.2 support\n                if (document.ok === 0 || document.$err || document.errmsg) {\n                    callback(new error_1.MongoServerError(document));\n                    return;\n                }\n            }\n        }\n        callback(undefined, message.documents[0]);\n    }\n    destroy(options, callback) {\n        if (this.closed) {\n            process.nextTick(() => callback?.());\n            return;\n        }\n        if (typeof callback === 'function') {\n            this.once('close', () => process.nextTick(() => callback()));\n        }\n        // load balanced mode requires that these listeners remain on the connection\n        // after cleanup on timeouts, errors or close so we remove them before calling\n        // cleanup.\n        this.removeAllListeners(Connection.PINNED);\n        this.removeAllListeners(Connection.UNPINNED);\n        const message = `connection ${this.id} to ${this.address} closed`;\n        this.cleanup(options.force, new error_1.MongoNetworkError(message));\n    }\n    /**\n     * A method that cleans up the connection.  When `force` is true, this method\n     * forcibly destroys the socket.\n     *\n     * If an error is provided, any in-flight operations will be closed with the error.\n     *\n     * This method does nothing if the connection is already closed.\n     */\n    cleanup(force, error) {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        const completeCleanup = () => {\n            for (const op of this[kQueue].values()) {\n                op.cb(error);\n            }\n            this[kQueue].clear();\n            this.emit(Connection.CLOSE);\n        };\n        this[kStream].removeAllListeners();\n        this[kMessageStream].removeAllListeners();\n        this[kMessageStream].destroy();\n        if (force) {\n            this[kStream].destroy();\n            completeCleanup();\n            return;\n        }\n        if (!this[kStream].writableEnded) {\n            this[kStream].end(() => {\n                this[kStream].destroy();\n                completeCleanup();\n            });\n        }\n        else {\n            completeCleanup();\n        }\n    }\n    command(ns, cmd, options, callback) {\n        const readPreference = (0, shared_1.getReadPreference)(cmd, options);\n        const shouldUseOpMsg = supportsOpMsg(this);\n        const session = options?.session;\n        let clusterTime = this.clusterTime;\n        let finalCmd = Object.assign({}, cmd);\n        if (this.serverApi) {\n            const { version, strict, deprecationErrors } = this.serverApi;\n            finalCmd.apiVersion = version;\n            if (strict != null)\n                finalCmd.apiStrict = strict;\n            if (deprecationErrors != null)\n                finalCmd.apiDeprecationErrors = deprecationErrors;\n        }\n        if (hasSessionSupport(this) && session) {\n            if (session.clusterTime &&\n                clusterTime &&\n                session.clusterTime.clusterTime.greaterThan(clusterTime.clusterTime)) {\n                clusterTime = session.clusterTime;\n            }\n            const err = (0, sessions_1.applySession)(session, finalCmd, options);\n            if (err) {\n                return callback(err);\n            }\n        }\n        else if (session?.explicit) {\n            return callback(new error_1.MongoCompatibilityError('Current topology does not support sessions'));\n        }\n        // if we have a known cluster time, gossip it\n        if (clusterTime) {\n            finalCmd.$clusterTime = clusterTime;\n        }\n        if ((0, shared_1.isSharded)(this) && !shouldUseOpMsg && readPreference && readPreference.mode !== 'primary') {\n            finalCmd = {\n                $query: finalCmd,\n                $readPreference: readPreference.toJSON()\n            };\n        }\n        const commandOptions = Object.assign({\n            command: true,\n            numberToSkip: 0,\n            numberToReturn: -1,\n            checkKeys: false,\n            // This value is not overridable\n            secondaryOk: readPreference.secondaryOk()\n        }, options);\n        const cmdNs = `${ns.db}.$cmd`;\n        const message = shouldUseOpMsg\n            ? new commands_1.Msg(cmdNs, finalCmd, commandOptions)\n            : new commands_1.Query(cmdNs, finalCmd, commandOptions);\n        try {\n            write(this, message, commandOptions, callback);\n        }\n        catch (err) {\n            callback(err);\n        }\n    }\n}\nexports.Connection = Connection;\n/** @event */\nConnection.COMMAND_STARTED = constants_1.COMMAND_STARTED;\n/** @event */\nConnection.COMMAND_SUCCEEDED = constants_1.COMMAND_SUCCEEDED;\n/** @event */\nConnection.COMMAND_FAILED = constants_1.COMMAND_FAILED;\n/** @event */\nConnection.CLUSTER_TIME_RECEIVED = constants_1.CLUSTER_TIME_RECEIVED;\n/** @event */\nConnection.CLOSE = constants_1.CLOSE;\n/** @event */\nConnection.MESSAGE = constants_1.MESSAGE;\n/** @event */\nConnection.PINNED = constants_1.PINNED;\n/** @event */\nConnection.UNPINNED = constants_1.UNPINNED;\n/** @internal */\nclass CryptoConnection extends Connection {\n    constructor(stream, options) {\n        super(stream, options);\n        this[kAutoEncrypter] = options.autoEncrypter;\n    }\n    /** @internal @override */\n    command(ns, cmd, options, callback) {\n        const autoEncrypter = this[kAutoEncrypter];\n        if (!autoEncrypter) {\n            return callback(new error_1.MongoMissingDependencyError('No AutoEncrypter available for encryption'));\n        }\n        const serverWireVersion = (0, utils_1.maxWireVersion)(this);\n        if (serverWireVersion === 0) {\n            // This means the initial handshake hasn't happened yet\n            return super.command(ns, cmd, options, callback);\n        }\n        if (serverWireVersion < 8) {\n            callback(new error_1.MongoCompatibilityError('Auto-encryption requires a minimum MongoDB version of 4.2'));\n            return;\n        }\n        // Save sort or indexKeys based on the command being run\n        // the encrypt API serializes our JS objects to BSON to pass to the native code layer\n        // and then deserializes the encrypted result, the protocol level components\n        // of the command (ex. sort) are then converted to JS objects potentially losing\n        // import key order information. These fields are never encrypted so we can save the values\n        // from before the encryption and replace them after encryption has been performed\n        const sort = cmd.find || cmd.findAndModify ? cmd.sort : null;\n        const indexKeys = cmd.createIndexes\n            ? cmd.indexes.map((index) => index.key)\n            : null;\n        autoEncrypter.encrypt(ns.toString(), cmd, options, (err, encrypted) => {\n            if (err || encrypted == null) {\n                callback(err, null);\n                return;\n            }\n            // Replace the saved values\n            if (sort != null && (cmd.find || cmd.findAndModify)) {\n                encrypted.sort = sort;\n            }\n            if (indexKeys != null && cmd.createIndexes) {\n                for (const [offset, index] of indexKeys.entries()) {\n                    encrypted.indexes[offset].key = index;\n                }\n            }\n            super.command(ns, encrypted, options, (err, response) => {\n                if (err || response == null) {\n                    callback(err, response);\n                    return;\n                }\n                autoEncrypter.decrypt(response, options, callback);\n            });\n        });\n    }\n}\nexports.CryptoConnection = CryptoConnection;\n/** @internal */\nfunction hasSessionSupport(conn) {\n    const description = conn.description;\n    return description.logicalSessionTimeoutMinutes != null;\n}\nexports.hasSessionSupport = hasSessionSupport;\nfunction supportsOpMsg(conn) {\n    const description = conn.description;\n    if (description == null) {\n        return false;\n    }\n    return (0, utils_1.maxWireVersion)(conn) >= 6 && !description.__nodejs_mock_server__;\n}\nfunction streamIdentifier(stream, options) {\n    if (options.proxyHost) {\n        // If proxy options are specified, the properties of `stream` itself\n        // will not accurately reflect what endpoint this is connected to.\n        return options.hostAddress.toString();\n    }\n    const { remoteAddress, remotePort } = stream;\n    if (typeof remoteAddress === 'string' && typeof remotePort === 'number') {\n        return utils_1.HostAddress.fromHostPort(remoteAddress, remotePort).toString();\n    }\n    return (0, utils_1.uuidV4)().toString('hex');\n}\nfunction write(conn, command, options, callback) {\n    options = options ?? {};\n    const operationDescription = {\n        requestId: command.requestId,\n        cb: callback,\n        session: options.session,\n        noResponse: typeof options.noResponse === 'boolean' ? options.noResponse : false,\n        documentsReturnedIn: options.documentsReturnedIn,\n        command: !!options.command,\n        // for BSON parsing\n        useBigInt64: typeof options.useBigInt64 === 'boolean' ? options.useBigInt64 : false,\n        promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n        promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n        promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n        bsonRegExp: typeof options.bsonRegExp === 'boolean' ? options.bsonRegExp : false,\n        enableUtf8Validation: typeof options.enableUtf8Validation === 'boolean' ? options.enableUtf8Validation : true,\n        raw: typeof options.raw === 'boolean' ? options.raw : false,\n        started: 0\n    };\n    if (conn[kDescription] && conn[kDescription].compressor) {\n        operationDescription.agreedCompressor = conn[kDescription].compressor;\n        if (conn[kDescription].zlibCompressionLevel) {\n            operationDescription.zlibCompressionLevel = conn[kDescription].zlibCompressionLevel;\n        }\n    }\n    if (typeof options.socketTimeoutMS === 'number') {\n        conn[kStream].setTimeout(options.socketTimeoutMS);\n    }\n    else if (conn.socketTimeoutMS !== 0) {\n        conn[kStream].setTimeout(conn.socketTimeoutMS);\n    }\n    // if command monitoring is enabled we need to modify the callback here\n    if (conn.monitorCommands) {\n        conn.emit(Connection.COMMAND_STARTED, new command_monitoring_events_1.CommandStartedEvent(conn, command));\n        operationDescription.started = (0, utils_1.now)();\n        operationDescription.cb = (err, reply) => {\n            // Command monitoring spec states that if ok is 1, then we must always emit\n            // a command succeeded event, even if there's an error. Write concern errors\n            // will have an ok: 1 in their reply.\n            if (err && reply?.ok !== 1) {\n                conn.emit(Connection.COMMAND_FAILED, new command_monitoring_events_1.CommandFailedEvent(conn, command, err, operationDescription.started));\n            }\n            else {\n                if (reply && (reply.ok === 0 || reply.$err)) {\n                    conn.emit(Connection.COMMAND_FAILED, new command_monitoring_events_1.CommandFailedEvent(conn, command, reply, operationDescription.started));\n                }\n                else {\n                    conn.emit(Connection.COMMAND_SUCCEEDED, new command_monitoring_events_1.CommandSucceededEvent(conn, command, reply, operationDescription.started));\n                }\n            }\n            if (typeof callback === 'function') {\n                // Since we're passing through the reply with the write concern error now, we\n                // need it not to be provided to the original callback in this case so\n                // retryability does not get tricked into thinking the command actually\n                // succeeded.\n                callback(err, err instanceof error_1.MongoWriteConcernError ? undefined : reply);\n            }\n        };\n    }\n    if (!operationDescription.noResponse) {\n        conn[kQueue].set(operationDescription.requestId, operationDescription);\n    }\n    try {\n        conn[kMessageStream].writeCommand(command, operationDescription);\n    }\n    catch (e) {\n        if (!operationDescription.noResponse) {\n            conn[kQueue].delete(operationDescription.requestId);\n            operationDescription.cb(e);\n            return;\n        }\n    }\n    if (operationDescription.noResponse) {\n        operationDescription.cb();\n    }\n}\n//# sourceMappingURL=connection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionPool = exports.PoolState = void 0;\nconst process = require(\"process\");\nconst timers_1 = require(\"timers\");\nconst constants_1 = require(\"../constants\");\nconst error_1 = require(\"../error\");\nconst mongo_types_1 = require(\"../mongo_types\");\nconst utils_1 = require(\"../utils\");\nconst connect_1 = require(\"./connect\");\nconst connection_1 = require(\"./connection\");\nconst connection_pool_events_1 = require(\"./connection_pool_events\");\nconst errors_1 = require(\"./errors\");\nconst metrics_1 = require(\"./metrics\");\n/** @internal */\nconst kServer = Symbol('server');\n/** @internal */\nconst kConnections = Symbol('connections');\n/** @internal */\nconst kPending = Symbol('pending');\n/** @internal */\nconst kCheckedOut = Symbol('checkedOut');\n/** @internal */\nconst kMinPoolSizeTimer = Symbol('minPoolSizeTimer');\n/** @internal */\nconst kGeneration = Symbol('generation');\n/** @internal */\nconst kServiceGenerations = Symbol('serviceGenerations');\n/** @internal */\nconst kConnectionCounter = Symbol('connectionCounter');\n/** @internal */\nconst kCancellationToken = Symbol('cancellationToken');\n/** @internal */\nconst kWaitQueue = Symbol('waitQueue');\n/** @internal */\nconst kCancelled = Symbol('cancelled');\n/** @internal */\nconst kMetrics = Symbol('metrics');\n/** @internal */\nconst kProcessingWaitQueue = Symbol('processingWaitQueue');\n/** @internal */\nconst kPoolState = Symbol('poolState');\n/** @internal */\nexports.PoolState = Object.freeze({\n    paused: 'paused',\n    ready: 'ready',\n    closed: 'closed'\n});\n/**\n * A pool of connections which dynamically resizes, and emit events related to pool activity\n * @internal\n */\nclass ConnectionPool extends mongo_types_1.TypedEventEmitter {\n    constructor(server, options) {\n        super();\n        this.options = Object.freeze({\n            ...options,\n            connectionType: connection_1.Connection,\n            maxPoolSize: options.maxPoolSize ?? 100,\n            minPoolSize: options.minPoolSize ?? 0,\n            maxConnecting: options.maxConnecting ?? 2,\n            maxIdleTimeMS: options.maxIdleTimeMS ?? 0,\n            waitQueueTimeoutMS: options.waitQueueTimeoutMS ?? 0,\n            minPoolSizeCheckFrequencyMS: options.minPoolSizeCheckFrequencyMS ?? 100,\n            autoEncrypter: options.autoEncrypter,\n            metadata: options.metadata\n        });\n        if (this.options.minPoolSize > this.options.maxPoolSize) {\n            throw new error_1.MongoInvalidArgumentError('Connection pool minimum size must not be greater than maximum pool size');\n        }\n        this[kPoolState] = exports.PoolState.paused;\n        this[kServer] = server;\n        this[kConnections] = new utils_1.List();\n        this[kPending] = 0;\n        this[kCheckedOut] = new Set();\n        this[kMinPoolSizeTimer] = undefined;\n        this[kGeneration] = 0;\n        this[kServiceGenerations] = new Map();\n        this[kConnectionCounter] = (0, utils_1.makeCounter)(1);\n        this[kCancellationToken] = new mongo_types_1.CancellationToken();\n        this[kCancellationToken].setMaxListeners(Infinity);\n        this[kWaitQueue] = new utils_1.List();\n        this[kMetrics] = new metrics_1.ConnectionPoolMetrics();\n        this[kProcessingWaitQueue] = false;\n        process.nextTick(() => {\n            this.emit(ConnectionPool.CONNECTION_POOL_CREATED, new connection_pool_events_1.ConnectionPoolCreatedEvent(this));\n        });\n    }\n    /** The address of the endpoint the pool is connected to */\n    get address() {\n        return this.options.hostAddress.toString();\n    }\n    /**\n     * Check if the pool has been closed\n     *\n     * TODO(NODE-3263): We can remove this property once shell no longer needs it\n     */\n    get closed() {\n        return this[kPoolState] === exports.PoolState.closed;\n    }\n    /** An integer representing the SDAM generation of the pool */\n    get generation() {\n        return this[kGeneration];\n    }\n    /** An integer expressing how many total connections (available + pending + in use) the pool currently has */\n    get totalConnectionCount() {\n        return (this.availableConnectionCount + this.pendingConnectionCount + this.currentCheckedOutCount);\n    }\n    /** An integer expressing how many connections are currently available in the pool. */\n    get availableConnectionCount() {\n        return this[kConnections].length;\n    }\n    get pendingConnectionCount() {\n        return this[kPending];\n    }\n    get currentCheckedOutCount() {\n        return this[kCheckedOut].size;\n    }\n    get waitQueueSize() {\n        return this[kWaitQueue].length;\n    }\n    get loadBalanced() {\n        return this.options.loadBalanced;\n    }\n    get serviceGenerations() {\n        return this[kServiceGenerations];\n    }\n    get serverError() {\n        return this[kServer].description.error;\n    }\n    /**\n     * This is exposed ONLY for use in mongosh, to enable\n     * killing all connections if a user quits the shell with\n     * operations in progress.\n     *\n     * This property may be removed as a part of NODE-3263.\n     */\n    get checkedOutConnections() {\n        return this[kCheckedOut];\n    }\n    /**\n     * Get the metrics information for the pool when a wait queue timeout occurs.\n     */\n    waitQueueErrorMetrics() {\n        return this[kMetrics].info(this.options.maxPoolSize);\n    }\n    /**\n     * Set the pool state to \"ready\"\n     */\n    ready() {\n        if (this[kPoolState] !== exports.PoolState.paused) {\n            return;\n        }\n        this[kPoolState] = exports.PoolState.ready;\n        this.emit(ConnectionPool.CONNECTION_POOL_READY, new connection_pool_events_1.ConnectionPoolReadyEvent(this));\n        (0, timers_1.clearTimeout)(this[kMinPoolSizeTimer]);\n        this.ensureMinPoolSize();\n    }\n    /**\n     * Check a connection out of this pool. The connection will continue to be tracked, but no reference to it\n     * will be held by the pool. This means that if a connection is checked out it MUST be checked back in or\n     * explicitly destroyed by the new owner.\n     */\n    checkOut(callback) {\n        this.emit(ConnectionPool.CONNECTION_CHECK_OUT_STARTED, new connection_pool_events_1.ConnectionCheckOutStartedEvent(this));\n        const waitQueueMember = { callback };\n        const waitQueueTimeoutMS = this.options.waitQueueTimeoutMS;\n        if (waitQueueTimeoutMS) {\n            waitQueueMember.timer = (0, timers_1.setTimeout)(() => {\n                waitQueueMember[kCancelled] = true;\n                waitQueueMember.timer = undefined;\n                this.emit(ConnectionPool.CONNECTION_CHECK_OUT_FAILED, new connection_pool_events_1.ConnectionCheckOutFailedEvent(this, 'timeout'));\n                waitQueueMember.callback(new errors_1.WaitQueueTimeoutError(this.loadBalanced\n                    ? this.waitQueueErrorMetrics()\n                    : 'Timed out while checking out a connection from connection pool', this.address));\n            }, waitQueueTimeoutMS);\n        }\n        this[kWaitQueue].push(waitQueueMember);\n        process.nextTick(() => this.processWaitQueue());\n    }\n    /**\n     * Check a connection into the pool.\n     *\n     * @param connection - The connection to check in\n     */\n    checkIn(connection) {\n        if (!this[kCheckedOut].has(connection)) {\n            return;\n        }\n        const poolClosed = this.closed;\n        const stale = this.connectionIsStale(connection);\n        const willDestroy = !!(poolClosed || stale || connection.closed);\n        if (!willDestroy) {\n            connection.markAvailable();\n            this[kConnections].unshift(connection);\n        }\n        this[kCheckedOut].delete(connection);\n        this.emit(ConnectionPool.CONNECTION_CHECKED_IN, new connection_pool_events_1.ConnectionCheckedInEvent(this, connection));\n        if (willDestroy) {\n            const reason = connection.closed ? 'error' : poolClosed ? 'poolClosed' : 'stale';\n            this.destroyConnection(connection, reason);\n        }\n        process.nextTick(() => this.processWaitQueue());\n    }\n    /**\n     * Clear the pool\n     *\n     * Pool reset is handled by incrementing the pool's generation count. Any existing connection of a\n     * previous generation will eventually be pruned during subsequent checkouts.\n     */\n    clear(options = {}) {\n        if (this.closed) {\n            return;\n        }\n        // handle load balanced case\n        if (this.loadBalanced) {\n            const { serviceId } = options;\n            if (!serviceId) {\n                throw new error_1.MongoRuntimeError('ConnectionPool.clear() called in load balanced mode with no serviceId.');\n            }\n            const sid = serviceId.toHexString();\n            const generation = this.serviceGenerations.get(sid);\n            // Only need to worry if the generation exists, since it should\n            // always be there but typescript needs the check.\n            if (generation == null) {\n                throw new error_1.MongoRuntimeError('Service generations are required in load balancer mode.');\n            }\n            else {\n                // Increment the generation for the service id.\n                this.serviceGenerations.set(sid, generation + 1);\n            }\n            this.emit(ConnectionPool.CONNECTION_POOL_CLEARED, new connection_pool_events_1.ConnectionPoolClearedEvent(this, { serviceId }));\n            return;\n        }\n        // handle non load-balanced case\n        const interruptInUseConnections = options.interruptInUseConnections ?? false;\n        const oldGeneration = this[kGeneration];\n        this[kGeneration] += 1;\n        const alreadyPaused = this[kPoolState] === exports.PoolState.paused;\n        this[kPoolState] = exports.PoolState.paused;\n        this.clearMinPoolSizeTimer();\n        if (!alreadyPaused) {\n            this.emit(ConnectionPool.CONNECTION_POOL_CLEARED, new connection_pool_events_1.ConnectionPoolClearedEvent(this, { interruptInUseConnections }));\n        }\n        if (interruptInUseConnections) {\n            process.nextTick(() => this.interruptInUseConnections(oldGeneration));\n        }\n        this.processWaitQueue();\n    }\n    /**\n     * Closes all stale in-use connections in the pool with a resumable PoolClearedOnNetworkError.\n     *\n     * Only connections where `connection.generation <= minGeneration` are killed.\n     */\n    interruptInUseConnections(minGeneration) {\n        for (const connection of this[kCheckedOut]) {\n            if (connection.generation <= minGeneration) {\n                this.checkIn(connection);\n                connection.onError(new errors_1.PoolClearedOnNetworkError(this));\n            }\n        }\n    }\n    close(_options, _cb) {\n        let options = _options;\n        const callback = (_cb ?? _options);\n        if (typeof options === 'function') {\n            options = {};\n        }\n        options = Object.assign({ force: false }, options);\n        if (this.closed) {\n            return callback();\n        }\n        // immediately cancel any in-flight connections\n        this[kCancellationToken].emit('cancel');\n        // end the connection counter\n        if (typeof this[kConnectionCounter].return === 'function') {\n            this[kConnectionCounter].return(undefined);\n        }\n        this[kPoolState] = exports.PoolState.closed;\n        this.clearMinPoolSizeTimer();\n        this.processWaitQueue();\n        (0, utils_1.eachAsync)(this[kConnections].toArray(), (conn, cb) => {\n            this.emit(ConnectionPool.CONNECTION_CLOSED, new connection_pool_events_1.ConnectionClosedEvent(this, conn, 'poolClosed'));\n            conn.destroy({ force: !!options.force }, cb);\n        }, err => {\n            this[kConnections].clear();\n            this.emit(ConnectionPool.CONNECTION_POOL_CLOSED, new connection_pool_events_1.ConnectionPoolClosedEvent(this));\n            callback(err);\n        });\n    }\n    /**\n     * Runs a lambda with an implicitly checked out connection, checking that connection back in when the lambda\n     * has completed by calling back.\n     *\n     * NOTE: please note the required signature of `fn`\n     *\n     * @remarks When in load balancer mode, connections can be pinned to cursors or transactions.\n     *   In these cases we pass the connection in to this method to ensure it is used and a new\n     *   connection is not checked out.\n     *\n     * @param conn - A pinned connection for use in load balancing mode.\n     * @param fn - A function which operates on a managed connection\n     * @param callback - The original callback\n     */\n    withConnection(conn, fn, callback) {\n        if (conn) {\n            // use the provided connection, and do _not_ check it in after execution\n            fn(undefined, conn, (fnErr, result) => {\n                if (typeof callback === 'function') {\n                    if (fnErr) {\n                        callback(fnErr);\n                    }\n                    else {\n                        callback(undefined, result);\n                    }\n                }\n            });\n            return;\n        }\n        this.checkOut((err, conn) => {\n            // don't callback with `err` here, we might want to act upon it inside `fn`\n            fn(err, conn, (fnErr, result) => {\n                if (typeof callback === 'function') {\n                    if (fnErr) {\n                        callback(fnErr);\n                    }\n                    else {\n                        callback(undefined, result);\n                    }\n                }\n                if (conn) {\n                    this.checkIn(conn);\n                }\n            });\n        });\n    }\n    /** Clear the min pool size timer */\n    clearMinPoolSizeTimer() {\n        const minPoolSizeTimer = this[kMinPoolSizeTimer];\n        if (minPoolSizeTimer) {\n            (0, timers_1.clearTimeout)(minPoolSizeTimer);\n        }\n    }\n    destroyConnection(connection, reason) {\n        this.emit(ConnectionPool.CONNECTION_CLOSED, new connection_pool_events_1.ConnectionClosedEvent(this, connection, reason));\n        // destroy the connection\n        process.nextTick(() => connection.destroy({ force: false }));\n    }\n    connectionIsStale(connection) {\n        const serviceId = connection.serviceId;\n        if (this.loadBalanced && serviceId) {\n            const sid = serviceId.toHexString();\n            const generation = this.serviceGenerations.get(sid);\n            return connection.generation !== generation;\n        }\n        return connection.generation !== this[kGeneration];\n    }\n    connectionIsIdle(connection) {\n        return !!(this.options.maxIdleTimeMS && connection.idleTime > this.options.maxIdleTimeMS);\n    }\n    /**\n     * Destroys a connection if the connection is perished.\n     *\n     * @returns `true` if the connection was destroyed, `false` otherwise.\n     */\n    destroyConnectionIfPerished(connection) {\n        const isStale = this.connectionIsStale(connection);\n        const isIdle = this.connectionIsIdle(connection);\n        if (!isStale && !isIdle && !connection.closed) {\n            return false;\n        }\n        const reason = connection.closed ? 'error' : isStale ? 'stale' : 'idle';\n        this.destroyConnection(connection, reason);\n        return true;\n    }\n    createConnection(callback) {\n        const connectOptions = {\n            ...this.options,\n            id: this[kConnectionCounter].next().value,\n            generation: this[kGeneration],\n            cancellationToken: this[kCancellationToken]\n        };\n        this[kPending]++;\n        // This is our version of a \"virtual\" no-I/O connection as the spec requires\n        this.emit(ConnectionPool.CONNECTION_CREATED, new connection_pool_events_1.ConnectionCreatedEvent(this, { id: connectOptions.id }));\n        (0, connect_1.connect)(connectOptions, (err, connection) => {\n            if (err || !connection) {\n                this[kPending]--;\n                this.emit(ConnectionPool.CONNECTION_CLOSED, new connection_pool_events_1.ConnectionClosedEvent(this, { id: connectOptions.id, serviceId: undefined }, 'error'));\n                if (err instanceof error_1.MongoNetworkError || err instanceof error_1.MongoServerError) {\n                    err.connectionGeneration = connectOptions.generation;\n                }\n                callback(err ?? new error_1.MongoRuntimeError('Connection creation failed without error'));\n                return;\n            }\n            // The pool might have closed since we started trying to create a connection\n            if (this[kPoolState] !== exports.PoolState.ready) {\n                this[kPending]--;\n                connection.destroy({ force: true });\n                callback(this.closed ? new errors_1.PoolClosedError(this) : new errors_1.PoolClearedError(this));\n                return;\n            }\n            // forward all events from the connection to the pool\n            for (const event of [...constants_1.APM_EVENTS, connection_1.Connection.CLUSTER_TIME_RECEIVED]) {\n                connection.on(event, (e) => this.emit(event, e));\n            }\n            if (this.loadBalanced) {\n                connection.on(connection_1.Connection.PINNED, pinType => this[kMetrics].markPinned(pinType));\n                connection.on(connection_1.Connection.UNPINNED, pinType => this[kMetrics].markUnpinned(pinType));\n                const serviceId = connection.serviceId;\n                if (serviceId) {\n                    let generation;\n                    const sid = serviceId.toHexString();\n                    if ((generation = this.serviceGenerations.get(sid))) {\n                        connection.generation = generation;\n                    }\n                    else {\n                        this.serviceGenerations.set(sid, 0);\n                        connection.generation = 0;\n                    }\n                }\n            }\n            connection.markAvailable();\n            this.emit(ConnectionPool.CONNECTION_READY, new connection_pool_events_1.ConnectionReadyEvent(this, connection));\n            this[kPending]--;\n            callback(undefined, connection);\n            return;\n        });\n    }\n    ensureMinPoolSize() {\n        const minPoolSize = this.options.minPoolSize;\n        if (this[kPoolState] !== exports.PoolState.ready || minPoolSize === 0) {\n            return;\n        }\n        this[kConnections].prune(connection => this.destroyConnectionIfPerished(connection));\n        if (this.totalConnectionCount < minPoolSize &&\n            this.pendingConnectionCount < this.options.maxConnecting) {\n            // NOTE: ensureMinPoolSize should not try to get all the pending\n            // connection permits because that potentially delays the availability of\n            // the connection to a checkout request\n            this.createConnection((err, connection) => {\n                if (err) {\n                    this[kServer].handleError(err);\n                }\n                if (!err && connection) {\n                    this[kConnections].push(connection);\n                    process.nextTick(() => this.processWaitQueue());\n                }\n                if (this[kPoolState] === exports.PoolState.ready) {\n                    (0, timers_1.clearTimeout)(this[kMinPoolSizeTimer]);\n                    this[kMinPoolSizeTimer] = (0, timers_1.setTimeout)(() => this.ensureMinPoolSize(), this.options.minPoolSizeCheckFrequencyMS);\n                }\n            });\n        }\n        else {\n            (0, timers_1.clearTimeout)(this[kMinPoolSizeTimer]);\n            this[kMinPoolSizeTimer] = (0, timers_1.setTimeout)(() => this.ensureMinPoolSize(), this.options.minPoolSizeCheckFrequencyMS);\n        }\n    }\n    processWaitQueue() {\n        if (this[kProcessingWaitQueue]) {\n            return;\n        }\n        this[kProcessingWaitQueue] = true;\n        while (this.waitQueueSize) {\n            const waitQueueMember = this[kWaitQueue].first();\n            if (!waitQueueMember) {\n                this[kWaitQueue].shift();\n                continue;\n            }\n            if (waitQueueMember[kCancelled]) {\n                this[kWaitQueue].shift();\n                continue;\n            }\n            if (this[kPoolState] !== exports.PoolState.ready) {\n                const reason = this.closed ? 'poolClosed' : 'connectionError';\n                const error = this.closed ? new errors_1.PoolClosedError(this) : new errors_1.PoolClearedError(this);\n                this.emit(ConnectionPool.CONNECTION_CHECK_OUT_FAILED, new connection_pool_events_1.ConnectionCheckOutFailedEvent(this, reason));\n                if (waitQueueMember.timer) {\n                    (0, timers_1.clearTimeout)(waitQueueMember.timer);\n                }\n                this[kWaitQueue].shift();\n                waitQueueMember.callback(error);\n                continue;\n            }\n            if (!this.availableConnectionCount) {\n                break;\n            }\n            const connection = this[kConnections].shift();\n            if (!connection) {\n                break;\n            }\n            if (!this.destroyConnectionIfPerished(connection)) {\n                this[kCheckedOut].add(connection);\n                this.emit(ConnectionPool.CONNECTION_CHECKED_OUT, new connection_pool_events_1.ConnectionCheckedOutEvent(this, connection));\n                if (waitQueueMember.timer) {\n                    (0, timers_1.clearTimeout)(waitQueueMember.timer);\n                }\n                this[kWaitQueue].shift();\n                waitQueueMember.callback(undefined, connection);\n            }\n        }\n        const { maxPoolSize, maxConnecting } = this.options;\n        while (this.waitQueueSize > 0 &&\n            this.pendingConnectionCount < maxConnecting &&\n            (maxPoolSize === 0 || this.totalConnectionCount < maxPoolSize)) {\n            const waitQueueMember = this[kWaitQueue].shift();\n            if (!waitQueueMember || waitQueueMember[kCancelled]) {\n                continue;\n            }\n            this.createConnection((err, connection) => {\n                if (waitQueueMember[kCancelled]) {\n                    if (!err && connection) {\n                        this[kConnections].push(connection);\n                    }\n                }\n                else {\n                    if (err) {\n                        this.emit(ConnectionPool.CONNECTION_CHECK_OUT_FAILED, new connection_pool_events_1.ConnectionCheckOutFailedEvent(this, 'connectionError'));\n                    }\n                    else if (connection) {\n                        this[kCheckedOut].add(connection);\n                        this.emit(ConnectionPool.CONNECTION_CHECKED_OUT, new connection_pool_events_1.ConnectionCheckedOutEvent(this, connection));\n                    }\n                    if (waitQueueMember.timer) {\n                        (0, timers_1.clearTimeout)(waitQueueMember.timer);\n                    }\n                    waitQueueMember.callback(err, connection);\n                }\n                process.nextTick(() => this.processWaitQueue());\n            });\n        }\n        this[kProcessingWaitQueue] = false;\n    }\n}\nexports.ConnectionPool = ConnectionPool;\n/**\n * Emitted when the connection pool is created.\n * @event\n */\nConnectionPool.CONNECTION_POOL_CREATED = constants_1.CONNECTION_POOL_CREATED;\n/**\n * Emitted once when the connection pool is closed\n * @event\n */\nConnectionPool.CONNECTION_POOL_CLOSED = constants_1.CONNECTION_POOL_CLOSED;\n/**\n * Emitted each time the connection pool is cleared and it's generation incremented\n * @event\n */\nConnectionPool.CONNECTION_POOL_CLEARED = constants_1.CONNECTION_POOL_CLEARED;\n/**\n * Emitted each time the connection pool is marked ready\n * @event\n */\nConnectionPool.CONNECTION_POOL_READY = constants_1.CONNECTION_POOL_READY;\n/**\n * Emitted when a connection is created.\n * @event\n */\nConnectionPool.CONNECTION_CREATED = constants_1.CONNECTION_CREATED;\n/**\n * Emitted when a connection becomes established, and is ready to use\n * @event\n */\nConnectionPool.CONNECTION_READY = constants_1.CONNECTION_READY;\n/**\n * Emitted when a connection is closed\n * @event\n */\nConnectionPool.CONNECTION_CLOSED = constants_1.CONNECTION_CLOSED;\n/**\n * Emitted when an attempt to check out a connection begins\n * @event\n */\nConnectionPool.CONNECTION_CHECK_OUT_STARTED = constants_1.CONNECTION_CHECK_OUT_STARTED;\n/**\n * Emitted when an attempt to check out a connection fails\n * @event\n */\nConnectionPool.CONNECTION_CHECK_OUT_FAILED = constants_1.CONNECTION_CHECK_OUT_FAILED;\n/**\n * Emitted each time a connection is successfully checked out of the connection pool\n * @event\n */\nConnectionPool.CONNECTION_CHECKED_OUT = constants_1.CONNECTION_CHECKED_OUT;\n/**\n * Emitted each time a connection is successfully checked into the connection pool\n * @event\n */\nConnectionPool.CONNECTION_CHECKED_IN = constants_1.CONNECTION_CHECKED_IN;\n//# sourceMappingURL=connection_pool.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionPoolClearedEvent = exports.ConnectionCheckedInEvent = exports.ConnectionCheckedOutEvent = exports.ConnectionCheckOutFailedEvent = exports.ConnectionCheckOutStartedEvent = exports.ConnectionClosedEvent = exports.ConnectionReadyEvent = exports.ConnectionCreatedEvent = exports.ConnectionPoolClosedEvent = exports.ConnectionPoolReadyEvent = exports.ConnectionPoolCreatedEvent = exports.ConnectionPoolMonitoringEvent = void 0;\n/**\n * The base export class for all monitoring events published from the connection pool\n * @public\n * @category Event\n */\nclass ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        this.time = new Date();\n        this.address = pool.address;\n    }\n}\nexports.ConnectionPoolMonitoringEvent = ConnectionPoolMonitoringEvent;\n/**\n * An event published when a connection pool is created\n * @public\n * @category Event\n */\nclass ConnectionPoolCreatedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        super(pool);\n        this.options = pool.options;\n    }\n}\nexports.ConnectionPoolCreatedEvent = ConnectionPoolCreatedEvent;\n/**\n * An event published when a connection pool is ready\n * @public\n * @category Event\n */\nclass ConnectionPoolReadyEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        super(pool);\n    }\n}\nexports.ConnectionPoolReadyEvent = ConnectionPoolReadyEvent;\n/**\n * An event published when a connection pool is closed\n * @public\n * @category Event\n */\nclass ConnectionPoolClosedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        super(pool);\n    }\n}\nexports.ConnectionPoolClosedEvent = ConnectionPoolClosedEvent;\n/**\n * An event published when a connection pool creates a new connection\n * @public\n * @category Event\n */\nclass ConnectionCreatedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionCreatedEvent = ConnectionCreatedEvent;\n/**\n * An event published when a connection is ready for use\n * @public\n * @category Event\n */\nclass ConnectionReadyEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionReadyEvent = ConnectionReadyEvent;\n/**\n * An event published when a connection is closed\n * @public\n * @category Event\n */\nclass ConnectionClosedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection, reason) {\n        super(pool);\n        this.connectionId = connection.id;\n        this.reason = reason || 'unknown';\n        this.serviceId = connection.serviceId;\n    }\n}\nexports.ConnectionClosedEvent = ConnectionClosedEvent;\n/**\n * An event published when a request to check a connection out begins\n * @public\n * @category Event\n */\nclass ConnectionCheckOutStartedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        super(pool);\n    }\n}\nexports.ConnectionCheckOutStartedEvent = ConnectionCheckOutStartedEvent;\n/**\n * An event published when a request to check a connection out fails\n * @public\n * @category Event\n */\nclass ConnectionCheckOutFailedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, reason) {\n        super(pool);\n        this.reason = reason;\n    }\n}\nexports.ConnectionCheckOutFailedEvent = ConnectionCheckOutFailedEvent;\n/**\n * An event published when a connection is checked out of the connection pool\n * @public\n * @category Event\n */\nclass ConnectionCheckedOutEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionCheckedOutEvent = ConnectionCheckedOutEvent;\n/**\n * An event published when a connection is checked into the connection pool\n * @public\n * @category Event\n */\nclass ConnectionCheckedInEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionCheckedInEvent = ConnectionCheckedInEvent;\n/**\n * An event published when a connection pool is cleared\n * @public\n * @category Event\n */\nclass ConnectionPoolClearedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, options = {}) {\n        super(pool);\n        this.serviceId = options.serviceId;\n        this.interruptInUseConnections = options.interruptInUseConnections;\n    }\n}\nexports.ConnectionPoolClearedEvent = ConnectionPoolClearedEvent;\n//# sourceMappingURL=connection_pool_events.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WaitQueueTimeoutError = exports.PoolClearedOnNetworkError = exports.PoolClearedError = exports.PoolClosedError = void 0;\nconst error_1 = require(\"../error\");\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\nclass PoolClosedError extends error_1.MongoDriverError {\n    constructor(pool) {\n        super('Attempted to check out a connection from closed connection pool');\n        this.address = pool.address;\n    }\n    get name() {\n        return 'MongoPoolClosedError';\n    }\n}\nexports.PoolClosedError = PoolClosedError;\n/**\n * An error indicating a connection pool is currently paused\n * @category Error\n */\nclass PoolClearedError extends error_1.MongoNetworkError {\n    constructor(pool, message) {\n        const errorMessage = message\n            ? message\n            : `Connection pool for ${pool.address} was cleared because another operation failed with: \"${pool.serverError?.message}\"`;\n        super(errorMessage);\n        this.address = pool.address;\n        this.addErrorLabel(error_1.MongoErrorLabel.RetryableWriteError);\n    }\n    get name() {\n        return 'MongoPoolClearedError';\n    }\n}\nexports.PoolClearedError = PoolClearedError;\n/**\n * An error indicating that a connection pool has been cleared after the monitor for that server timed out.\n * @category Error\n */\nclass PoolClearedOnNetworkError extends PoolClearedError {\n    constructor(pool) {\n        super(pool, `Connection to ${pool.address} interrupted due to server monitor timeout`);\n    }\n    get name() {\n        return 'PoolClearedOnNetworkError';\n    }\n}\nexports.PoolClearedOnNetworkError = PoolClearedOnNetworkError;\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\nclass WaitQueueTimeoutError extends error_1.MongoDriverError {\n    constructor(message, address) {\n        super(message);\n        this.address = address;\n    }\n    get name() {\n        return 'MongoWaitQueueTimeoutError';\n    }\n}\nexports.WaitQueueTimeoutError = WaitQueueTimeoutError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageStream = void 0;\nconst buffer_1 = require(\"buffer\");\nconst stream_1 = require(\"stream\");\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst commands_1 = require(\"./commands\");\nconst compression_1 = require(\"./wire_protocol/compression\");\nconst constants_1 = require(\"./wire_protocol/constants\");\nconst MESSAGE_HEADER_SIZE = 16;\nconst COMPRESSION_DETAILS_SIZE = 9; // originalOpcode + uncompressedSize, compressorID\nconst kDefaultMaxBsonMessageSize = 1024 * 1024 * 16 * 4;\n/** @internal */\nconst kBuffer = Symbol('buffer');\n/**\n * A duplex stream that is capable of reading and writing raw wire protocol messages, with\n * support for optional compression\n * @internal\n */\nclass MessageStream extends stream_1.Duplex {\n    constructor(options = {}) {\n        super(options);\n        /** @internal */\n        this.isMonitoringConnection = false;\n        this.maxBsonMessageSize = options.maxBsonMessageSize || kDefaultMaxBsonMessageSize;\n        this[kBuffer] = new utils_1.BufferPool();\n    }\n    get buffer() {\n        return this[kBuffer];\n    }\n    _write(chunk, _, callback) {\n        this[kBuffer].append(chunk);\n        processIncomingData(this, callback);\n    }\n    _read( /* size */) {\n        // NOTE: This implementation is empty because we explicitly push data to be read\n        //       when `writeMessage` is called.\n        return;\n    }\n    writeCommand(command, operationDescription) {\n        const agreedCompressor = operationDescription.agreedCompressor ?? 'none';\n        if (agreedCompressor === 'none' || !canCompress(command)) {\n            const data = command.toBin();\n            this.push(Array.isArray(data) ? buffer_1.Buffer.concat(data) : data);\n            return;\n        }\n        // otherwise, compress the message\n        const concatenatedOriginalCommandBuffer = buffer_1.Buffer.concat(command.toBin());\n        const messageToBeCompressed = concatenatedOriginalCommandBuffer.slice(MESSAGE_HEADER_SIZE);\n        // Extract information needed for OP_COMPRESSED from the uncompressed message\n        const originalCommandOpCode = concatenatedOriginalCommandBuffer.readInt32LE(12);\n        const options = {\n            agreedCompressor,\n            zlibCompressionLevel: operationDescription.zlibCompressionLevel ?? 0\n        };\n        // Compress the message body\n        (0, compression_1.compress)(options, messageToBeCompressed).then(compressedMessage => {\n            // Create the msgHeader of OP_COMPRESSED\n            const msgHeader = buffer_1.Buffer.alloc(MESSAGE_HEADER_SIZE);\n            msgHeader.writeInt32LE(MESSAGE_HEADER_SIZE + COMPRESSION_DETAILS_SIZE + compressedMessage.length, 0); // messageLength\n            msgHeader.writeInt32LE(command.requestId, 4); // requestID\n            msgHeader.writeInt32LE(0, 8); // responseTo (zero)\n            msgHeader.writeInt32LE(constants_1.OP_COMPRESSED, 12); // opCode\n            // Create the compression details of OP_COMPRESSED\n            const compressionDetails = buffer_1.Buffer.alloc(COMPRESSION_DETAILS_SIZE);\n            compressionDetails.writeInt32LE(originalCommandOpCode, 0); // originalOpcode\n            compressionDetails.writeInt32LE(messageToBeCompressed.length, 4); // Size of the uncompressed compressedMessage, excluding the MsgHeader\n            compressionDetails.writeUInt8(compression_1.Compressor[agreedCompressor], 8); // compressorID\n            this.push(buffer_1.Buffer.concat([msgHeader, compressionDetails, compressedMessage]));\n        }, error => {\n            operationDescription.cb(error);\n        });\n    }\n}\nexports.MessageStream = MessageStream;\n// Return whether a command contains an uncompressible command term\n// Will return true if command contains no uncompressible command terms\nfunction canCompress(command) {\n    const commandDoc = command instanceof commands_1.Msg ? command.command : command.query;\n    const commandName = Object.keys(commandDoc)[0];\n    return !compression_1.uncompressibleCommands.has(commandName);\n}\nfunction processIncomingData(stream, callback) {\n    const buffer = stream[kBuffer];\n    const sizeOfMessage = buffer.getInt32();\n    if (sizeOfMessage == null) {\n        return callback();\n    }\n    if (sizeOfMessage < 0) {\n        return callback(new error_1.MongoParseError(`Invalid message size: ${sizeOfMessage}`));\n    }\n    if (sizeOfMessage > stream.maxBsonMessageSize) {\n        return callback(new error_1.MongoParseError(`Invalid message size: ${sizeOfMessage}, max allowed: ${stream.maxBsonMessageSize}`));\n    }\n    if (sizeOfMessage > buffer.length) {\n        return callback();\n    }\n    const message = buffer.read(sizeOfMessage);\n    const messageHeader = {\n        length: message.readInt32LE(0),\n        requestId: message.readInt32LE(4),\n        responseTo: message.readInt32LE(8),\n        opCode: message.readInt32LE(12)\n    };\n    const monitorHasAnotherHello = () => {\n        if (stream.isMonitoringConnection) {\n            // Can we read the next message size?\n            const sizeOfMessage = buffer.getInt32();\n            if (sizeOfMessage != null && sizeOfMessage <= buffer.length) {\n                return true;\n            }\n        }\n        return false;\n    };\n    let ResponseType = messageHeader.opCode === constants_1.OP_MSG ? commands_1.BinMsg : commands_1.Response;\n    if (messageHeader.opCode !== constants_1.OP_COMPRESSED) {\n        const messageBody = message.subarray(MESSAGE_HEADER_SIZE);\n        // If we are a monitoring connection message stream and\n        // there is more in the buffer that can be read, skip processing since we\n        // want the last hello command response that is in the buffer.\n        if (monitorHasAnotherHello()) {\n            return processIncomingData(stream, callback);\n        }\n        stream.emit('message', new ResponseType(message, messageHeader, messageBody));\n        if (buffer.length >= 4) {\n            return processIncomingData(stream, callback);\n        }\n        return callback();\n    }\n    messageHeader.fromCompressed = true;\n    messageHeader.opCode = message.readInt32LE(MESSAGE_HEADER_SIZE);\n    messageHeader.length = message.readInt32LE(MESSAGE_HEADER_SIZE + 4);\n    const compressorID = message[MESSAGE_HEADER_SIZE + 8];\n    const compressedBuffer = message.slice(MESSAGE_HEADER_SIZE + 9);\n    // recalculate based on wrapped opcode\n    ResponseType = messageHeader.opCode === constants_1.OP_MSG ? commands_1.BinMsg : commands_1.Response;\n    (0, compression_1.decompress)(compressorID, compressedBuffer).then(messageBody => {\n        if (messageBody.length !== messageHeader.length) {\n            return callback(new error_1.MongoDecompressionError('Message body and message header must be the same length'));\n        }\n        // If we are a monitoring connection message stream and\n        // there is more in the buffer that can be read, skip processing since we\n        // want the last hello command response that is in the buffer.\n        if (monitorHasAnotherHello()) {\n            return processIncomingData(stream, callback);\n        }\n        stream.emit('message', new ResponseType(message, messageHeader, messageBody));\n        if (buffer.length >= 4) {\n            return processIncomingData(stream, callback);\n        }\n        return callback();\n    }, error => {\n        return callback(error);\n    });\n}\n//# sourceMappingURL=message_stream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionPoolMetrics = void 0;\n/** @internal */\nclass ConnectionPoolMetrics {\n    constructor() {\n        this.txnConnections = 0;\n        this.cursorConnections = 0;\n        this.otherConnections = 0;\n    }\n    /**\n     * Mark a connection as pinned for a specific operation.\n     */\n    markPinned(pinType) {\n        if (pinType === ConnectionPoolMetrics.TXN) {\n            this.txnConnections += 1;\n        }\n        else if (pinType === ConnectionPoolMetrics.CURSOR) {\n            this.cursorConnections += 1;\n        }\n        else {\n            this.otherConnections += 1;\n        }\n    }\n    /**\n     * Unmark a connection as pinned for an operation.\n     */\n    markUnpinned(pinType) {\n        if (pinType === ConnectionPoolMetrics.TXN) {\n            this.txnConnections -= 1;\n        }\n        else if (pinType === ConnectionPoolMetrics.CURSOR) {\n            this.cursorConnections -= 1;\n        }\n        else {\n            this.otherConnections -= 1;\n        }\n    }\n    /**\n     * Return information about the cmap metrics as a string.\n     */\n    info(maxPoolSize) {\n        return ('Timed out while checking out a connection from connection pool: ' +\n            `maxPoolSize: ${maxPoolSize}, ` +\n            `connections in use by cursors: ${this.cursorConnections}, ` +\n            `connections in use by transactions: ${this.txnConnections}, ` +\n            `connections in use by other operations: ${this.otherConnections}`);\n    }\n    /**\n     * Reset the metrics to the initial values.\n     */\n    reset() {\n        this.txnConnections = 0;\n        this.cursorConnections = 0;\n        this.otherConnections = 0;\n    }\n}\nexports.ConnectionPoolMetrics = ConnectionPoolMetrics;\nConnectionPoolMetrics.TXN = 'txn';\nConnectionPoolMetrics.CURSOR = 'cursor';\nConnectionPoolMetrics.OTHER = 'other';\n//# sourceMappingURL=metrics.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamDescription = void 0;\nconst common_1 = require(\"../sdam/common\");\nconst server_description_1 = require(\"../sdam/server_description\");\nconst RESPONSE_FIELDS = [\n    'minWireVersion',\n    'maxWireVersion',\n    'maxBsonObjectSize',\n    'maxMessageSizeBytes',\n    'maxWriteBatchSize',\n    'logicalSessionTimeoutMinutes'\n];\n/** @public */\nclass StreamDescription {\n    constructor(address, options) {\n        this.address = address;\n        this.type = common_1.ServerType.Unknown;\n        this.minWireVersion = undefined;\n        this.maxWireVersion = undefined;\n        this.maxBsonObjectSize = 16777216;\n        this.maxMessageSizeBytes = 48000000;\n        this.maxWriteBatchSize = 100000;\n        this.logicalSessionTimeoutMinutes = options?.logicalSessionTimeoutMinutes;\n        this.loadBalanced = !!options?.loadBalanced;\n        this.compressors =\n            options && options.compressors && Array.isArray(options.compressors)\n                ? options.compressors\n                : [];\n    }\n    receiveResponse(response) {\n        if (response == null) {\n            return;\n        }\n        this.type = (0, server_description_1.parseServerType)(response);\n        for (const field of RESPONSE_FIELDS) {\n            if (response[field] != null) {\n                this[field] = response[field];\n            }\n            // testing case\n            if ('__nodejs_mock_server__' in response) {\n                this.__nodejs_mock_server__ = response['__nodejs_mock_server__'];\n            }\n        }\n        if (response.compression) {\n            this.compressor = this.compressors.filter(c => response.compression?.includes(c))[0];\n        }\n    }\n}\nexports.StreamDescription = StreamDescription;\n//# sourceMappingURL=stream_description.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decompress = exports.compress = exports.uncompressibleCommands = exports.Compressor = void 0;\nconst util_1 = require(\"util\");\nconst zlib = require(\"zlib\");\nconst constants_1 = require(\"../../constants\");\nconst deps_1 = require(\"../../deps\");\nconst error_1 = require(\"../../error\");\n/** @public */\nexports.Compressor = Object.freeze({\n    none: 0,\n    snappy: 1,\n    zlib: 2,\n    zstd: 3\n});\nexports.uncompressibleCommands = new Set([\n    constants_1.LEGACY_HELLO_COMMAND,\n    'saslStart',\n    'saslContinue',\n    'getnonce',\n    'authenticate',\n    'createUser',\n    'updateUser',\n    'copydbSaslStart',\n    'copydbgetnonce',\n    'copydb'\n]);\nconst ZSTD_COMPRESSION_LEVEL = 3;\n// Facilitate compressing a message using an agreed compressor\nasync function compress(options, dataToBeCompressed) {\n    const zlibDeflate = (0, util_1.promisify)(zlib.deflate.bind(zlib));\n    const zlibOptions = {};\n    switch (options.agreedCompressor) {\n        case 'snappy':\n            if ('kModuleError' in deps_1.Snappy) {\n                throw deps_1.Snappy['kModuleError'];\n            }\n            return deps_1.Snappy.compress(dataToBeCompressed);\n        case 'zstd':\n            if ('kModuleError' in deps_1.ZStandard) {\n                throw deps_1.ZStandard['kModuleError'];\n            }\n            return deps_1.ZStandard.compress(dataToBeCompressed, ZSTD_COMPRESSION_LEVEL);\n        case 'zlib':\n            if (options.zlibCompressionLevel) {\n                zlibOptions.level = options.zlibCompressionLevel;\n            }\n            return zlibDeflate(dataToBeCompressed, zlibOptions);\n        default:\n            throw new error_1.MongoInvalidArgumentError(`Unknown compressor ${options.agreedCompressor} failed to compress`);\n    }\n}\nexports.compress = compress;\n// Decompress a message using the given compressor\nasync function decompress(compressorID, compressedData) {\n    if (compressorID !== exports.Compressor.snappy &&\n        compressorID !== exports.Compressor.zstd &&\n        compressorID !== exports.Compressor.zlib &&\n        compressorID !== exports.Compressor.none) {\n        throw new error_1.MongoDecompressionError(`Server sent message compressed using an unsupported compressor. (Received compressor ID ${compressorID})`);\n    }\n    const zlibInflate = (0, util_1.promisify)(zlib.inflate.bind(zlib));\n    switch (compressorID) {\n        case exports.Compressor.snappy:\n            if ('kModuleError' in deps_1.Snappy) {\n                throw deps_1.Snappy['kModuleError'];\n            }\n            return deps_1.Snappy.uncompress(compressedData, { asBuffer: true });\n        case exports.Compressor.zstd:\n            if ('kModuleError' in deps_1.ZStandard) {\n                throw deps_1.ZStandard['kModuleError'];\n            }\n            return deps_1.ZStandard.decompress(compressedData);\n        case exports.Compressor.zlib:\n            return zlibInflate(compressedData);\n        default:\n            return compressedData;\n    }\n}\nexports.decompress = decompress;\n//# sourceMappingURL=compression.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OP_MSG = exports.OP_COMPRESSED = exports.OP_DELETE = exports.OP_QUERY = exports.OP_INSERT = exports.OP_UPDATE = exports.OP_REPLY = exports.MAX_SUPPORTED_WIRE_VERSION = exports.MIN_SUPPORTED_WIRE_VERSION = exports.MAX_SUPPORTED_SERVER_VERSION = exports.MIN_SUPPORTED_SERVER_VERSION = void 0;\nexports.MIN_SUPPORTED_SERVER_VERSION = '3.6';\nexports.MAX_SUPPORTED_SERVER_VERSION = '6.0';\nexports.MIN_SUPPORTED_WIRE_VERSION = 6;\nexports.MAX_SUPPORTED_WIRE_VERSION = 17;\nexports.OP_REPLY = 1;\nexports.OP_UPDATE = 2001;\nexports.OP_INSERT = 2002;\nexports.OP_QUERY = 2004;\nexports.OP_DELETE = 2006;\nexports.OP_COMPRESSED = 2012;\nexports.OP_MSG = 2013;\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSharded = exports.applyCommonQueryOptions = exports.getReadPreference = void 0;\nconst error_1 = require(\"../../error\");\nconst read_preference_1 = require(\"../../read_preference\");\nconst common_1 = require(\"../../sdam/common\");\nconst topology_description_1 = require(\"../../sdam/topology_description\");\nfunction getReadPreference(cmd, options) {\n    // Default to command version of the readPreference\n    let readPreference = cmd.readPreference || read_preference_1.ReadPreference.primary;\n    // If we have an option readPreference override the command one\n    if (options?.readPreference) {\n        readPreference = options.readPreference;\n    }\n    if (typeof readPreference === 'string') {\n        readPreference = read_preference_1.ReadPreference.fromString(readPreference);\n    }\n    if (!(readPreference instanceof read_preference_1.ReadPreference)) {\n        throw new error_1.MongoInvalidArgumentError('Option \"readPreference\" must be a ReadPreference instance');\n    }\n    return readPreference;\n}\nexports.getReadPreference = getReadPreference;\nfunction applyCommonQueryOptions(queryOptions, options) {\n    Object.assign(queryOptions, {\n        raw: typeof options.raw === 'boolean' ? options.raw : false,\n        promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n        promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n        promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n        bsonRegExp: typeof options.bsonRegExp === 'boolean' ? options.bsonRegExp : false,\n        enableUtf8Validation: typeof options.enableUtf8Validation === 'boolean' ? options.enableUtf8Validation : true\n    });\n    if (options.session) {\n        queryOptions.session = options.session;\n    }\n    return queryOptions;\n}\nexports.applyCommonQueryOptions = applyCommonQueryOptions;\nfunction isSharded(topologyOrServer) {\n    if (topologyOrServer == null) {\n        return false;\n    }\n    if (topologyOrServer.description && topologyOrServer.description.type === common_1.ServerType.Mongos) {\n        return true;\n    }\n    // NOTE: This is incredibly inefficient, and should be removed once command construction\n    //       happens based on `Server` not `Topology`.\n    if (topologyOrServer.description && topologyOrServer.description instanceof topology_description_1.TopologyDescription) {\n        const servers = Array.from(topologyOrServer.description.servers.values());\n        return servers.some((server) => server.type === common_1.ServerType.Mongos);\n    }\n    return false;\n}\nexports.isSharded = isSharded;\n//# sourceMappingURL=shared.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collection = void 0;\nconst bson_1 = require(\"./bson\");\nconst ordered_1 = require(\"./bulk/ordered\");\nconst unordered_1 = require(\"./bulk/unordered\");\nconst change_stream_1 = require(\"./change_stream\");\nconst aggregation_cursor_1 = require(\"./cursor/aggregation_cursor\");\nconst find_cursor_1 = require(\"./cursor/find_cursor\");\nconst list_indexes_cursor_1 = require(\"./cursor/list_indexes_cursor\");\nconst error_1 = require(\"./error\");\nconst bulk_write_1 = require(\"./operations/bulk_write\");\nconst count_1 = require(\"./operations/count\");\nconst count_documents_1 = require(\"./operations/count_documents\");\nconst delete_1 = require(\"./operations/delete\");\nconst distinct_1 = require(\"./operations/distinct\");\nconst drop_1 = require(\"./operations/drop\");\nconst estimated_document_count_1 = require(\"./operations/estimated_document_count\");\nconst execute_operation_1 = require(\"./operations/execute_operation\");\nconst find_and_modify_1 = require(\"./operations/find_and_modify\");\nconst indexes_1 = require(\"./operations/indexes\");\nconst insert_1 = require(\"./operations/insert\");\nconst is_capped_1 = require(\"./operations/is_capped\");\nconst options_operation_1 = require(\"./operations/options_operation\");\nconst rename_1 = require(\"./operations/rename\");\nconst stats_1 = require(\"./operations/stats\");\nconst update_1 = require(\"./operations/update\");\nconst read_concern_1 = require(\"./read_concern\");\nconst read_preference_1 = require(\"./read_preference\");\nconst utils_1 = require(\"./utils\");\nconst write_concern_1 = require(\"./write_concern\");\n/**\n * The **Collection** class is an internal class that embodies a MongoDB collection\n * allowing for insert/find/update/delete and other command operation on that MongoDB collection.\n *\n * **COLLECTION Cannot directly be instantiated**\n * @public\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * interface Pet {\n *   name: string;\n *   kind: 'dog' | 'cat' | 'fish';\n * }\n *\n * const client = new MongoClient('mongodb://localhost:27017');\n * const pets = client.db().collection<Pet>('pets');\n *\n * const petCursor = pets.find();\n *\n * for await (const pet of petCursor) {\n *   console.log(`${pet.name} is a ${pet.kind}!`);\n * }\n * ```\n */\nclass Collection {\n    /**\n     * Create a new Collection instance\n     * @internal\n     */\n    constructor(db, name, options) {\n        (0, utils_1.checkCollectionName)(name);\n        // Internal state\n        this.s = {\n            db,\n            options,\n            namespace: new utils_1.MongoDBNamespace(db.databaseName, name),\n            pkFactory: db.options?.pkFactory ?? utils_1.DEFAULT_PK_FACTORY,\n            readPreference: read_preference_1.ReadPreference.fromOptions(options),\n            bsonOptions: (0, bson_1.resolveBSONOptions)(options, db),\n            readConcern: read_concern_1.ReadConcern.fromOptions(options),\n            writeConcern: write_concern_1.WriteConcern.fromOptions(options)\n        };\n    }\n    /**\n     * The name of the database this collection belongs to\n     */\n    get dbName() {\n        return this.s.namespace.db;\n    }\n    /**\n     * The name of this collection\n     */\n    get collectionName() {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.s.namespace.collection;\n    }\n    /**\n     * The namespace of this collection, in the format `${this.dbName}.${this.collectionName}`\n     */\n    get namespace() {\n        return this.s.namespace.toString();\n    }\n    /**\n     * The current readConcern of the collection. If not explicitly defined for\n     * this collection, will be inherited from the parent DB\n     */\n    get readConcern() {\n        if (this.s.readConcern == null) {\n            return this.s.db.readConcern;\n        }\n        return this.s.readConcern;\n    }\n    /**\n     * The current readPreference of the collection. If not explicitly defined for\n     * this collection, will be inherited from the parent DB\n     */\n    get readPreference() {\n        if (this.s.readPreference == null) {\n            return this.s.db.readPreference;\n        }\n        return this.s.readPreference;\n    }\n    get bsonOptions() {\n        return this.s.bsonOptions;\n    }\n    /**\n     * The current writeConcern of the collection. If not explicitly defined for\n     * this collection, will be inherited from the parent DB\n     */\n    get writeConcern() {\n        if (this.s.writeConcern == null) {\n            return this.s.db.writeConcern;\n        }\n        return this.s.writeConcern;\n    }\n    /** The current index hint for the collection */\n    get hint() {\n        return this.s.collectionHint;\n    }\n    set hint(v) {\n        this.s.collectionHint = (0, utils_1.normalizeHintField)(v);\n    }\n    /**\n     * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,\n     * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n     * can be overridden by setting the **forceServerObjectId** flag.\n     *\n     * @param doc - The document to insert\n     * @param options - Optional settings for the command\n     */\n    async insertOne(doc, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new insert_1.InsertOneOperation(this, doc, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n     * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n     * can be overridden by setting the **forceServerObjectId** flag.\n     *\n     * @param docs - The documents to insert\n     * @param options - Optional settings for the command\n     */\n    async insertMany(docs, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new insert_1.InsertManyOperation(this, docs, (0, utils_1.resolveOptions)(this, options ?? { ordered: true })));\n    }\n    /**\n     * Perform a bulkWrite operation without a fluent API\n     *\n     * Legal operation types are\n     * - `insertOne`\n     * - `replaceOne`\n     * - `updateOne`\n     * - `updateMany`\n     * - `deleteOne`\n     * - `deleteMany`\n     *\n     * If documents passed in do not contain the **_id** field,\n     * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n     * can be overridden by setting the **forceServerObjectId** flag.\n     *\n     * @param operations - Bulk operations to perform\n     * @param options - Optional settings for the command\n     * @throws MongoDriverError if operations is not an array\n     */\n    async bulkWrite(operations, options) {\n        if (!Array.isArray(operations)) {\n            throw new error_1.MongoInvalidArgumentError('Argument \"operations\" must be an array of documents');\n        }\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new bulk_write_1.BulkWriteOperation(this, operations, (0, utils_1.resolveOptions)(this, options ?? { ordered: true })));\n    }\n    /**\n     * Update a single document in a collection\n     *\n     * @param filter - The filter used to select the document to update\n     * @param update - The update operations to be applied to the document\n     * @param options - Optional settings for the command\n     */\n    async updateOne(filter, update, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new update_1.UpdateOneOperation(this, filter, update, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Replace a document in a collection with another document\n     *\n     * @param filter - The filter used to select the document to replace\n     * @param replacement - The Document that replaces the matching document\n     * @param options - Optional settings for the command\n     */\n    async replaceOne(filter, replacement, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new update_1.ReplaceOneOperation(this, filter, replacement, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Update multiple documents in a collection\n     *\n     * @param filter - The filter used to select the documents to update\n     * @param update - The update operations to be applied to the documents\n     * @param options - Optional settings for the command\n     */\n    async updateMany(filter, update, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new update_1.UpdateManyOperation(this, filter, update, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Delete a document from a collection\n     *\n     * @param filter - The filter used to select the document to remove\n     * @param options - Optional settings for the command\n     */\n    async deleteOne(filter = {}, options = {}) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new delete_1.DeleteOneOperation(this, filter, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Delete multiple documents from a collection\n     *\n     * @param filter - The filter used to select the documents to remove\n     * @param options - Optional settings for the command\n     */\n    async deleteMany(filter = {}, options = {}) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new delete_1.DeleteManyOperation(this, filter, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Rename the collection.\n     *\n     * @remarks\n     * This operation does not inherit options from the Db or MongoClient.\n     *\n     * @param newName - New name of of the collection.\n     * @param options - Optional settings for the command\n     */\n    async rename(newName, options) {\n        // Intentionally, we do not inherit options from parent for this operation.\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new rename_1.RenameOperation(this, newName, {\n            ...options,\n            readPreference: read_preference_1.ReadPreference.PRIMARY\n        }));\n    }\n    /**\n     * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n     *\n     * @param options - Optional settings for the command\n     */\n    async drop(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new drop_1.DropCollectionOperation(this.s.db, this.collectionName, options));\n    }\n    async findOne(filter = {}, options = {}) {\n        return this.find(filter, options).limit(-1).batchSize(1).next();\n    }\n    find(filter = {}, options = {}) {\n        return new find_cursor_1.FindCursor(this.s.db.s.client, this.s.namespace, filter, (0, utils_1.resolveOptions)(this, options));\n    }\n    /**\n     * Returns the options of the collection.\n     *\n     * @param options - Optional settings for the command\n     */\n    async options(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new options_operation_1.OptionsOperation(this, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Returns if the collection is a capped collection\n     *\n     * @param options - Optional settings for the command\n     */\n    async isCapped(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new is_capped_1.IsCappedOperation(this, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Creates an index on the db and collection collection.\n     *\n     * @param indexSpec - The field name or index specification to create an index for\n     * @param options - Optional settings for the command\n     *\n     * @example\n     * ```ts\n     * const collection = client.db('foo').collection('bar');\n     *\n     * await collection.createIndex({ a: 1, b: -1 });\n     *\n     * // Alternate syntax for { c: 1, d: -1 } that ensures order of indexes\n     * await collection.createIndex([ [c, 1], [d, -1] ]);\n     *\n     * // Equivalent to { e: 1 }\n     * await collection.createIndex('e');\n     *\n     * // Equivalent to { f: 1, g: 1 }\n     * await collection.createIndex(['f', 'g'])\n     *\n     * // Equivalent to { h: 1, i: -1 }\n     * await collection.createIndex([ { h: 1 }, { i: -1 } ]);\n     *\n     * // Equivalent to { j: 1, k: -1, l: 2d }\n     * await collection.createIndex(['j', ['k', -1], { l: '2d' }])\n     * ```\n     */\n    async createIndex(indexSpec, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new indexes_1.CreateIndexOperation(this, this.collectionName, indexSpec, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Creates multiple indexes in the collection, this method is only supported for\n     * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n     * error.\n     *\n     * **Note**: Unlike {@link Collection#createIndex| createIndex}, this function takes in raw index specifications.\n     * Index specifications are defined {@link https://www.mongodb.com/docs/manual/reference/command/createIndexes/| here}.\n     *\n     * @param indexSpecs - An array of index specifications to be created\n     * @param options - Optional settings for the command\n     *\n     * @example\n     * ```ts\n     * const collection = client.db('foo').collection('bar');\n     * await collection.createIndexes([\n     *   // Simple index on field fizz\n     *   {\n     *     key: { fizz: 1 },\n     *   }\n     *   // wildcard index\n     *   {\n     *     key: { '$**': 1 }\n     *   },\n     *   // named index on darmok and jalad\n     *   {\n     *     key: { darmok: 1, jalad: -1 }\n     *     name: 'tanagra'\n     *   }\n     * ]);\n     * ```\n     */\n    async createIndexes(indexSpecs, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new indexes_1.CreateIndexesOperation(this, this.collectionName, indexSpecs, (0, utils_1.resolveOptions)(this, { ...options, maxTimeMS: undefined })));\n    }\n    /**\n     * Drops an index from this collection.\n     *\n     * @param indexName - Name of the index to drop.\n     * @param options - Optional settings for the command\n     */\n    async dropIndex(indexName, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new indexes_1.DropIndexOperation(this, indexName, {\n            ...(0, utils_1.resolveOptions)(this, options),\n            readPreference: read_preference_1.ReadPreference.primary\n        }));\n    }\n    /**\n     * Drops all indexes from this collection.\n     *\n     * @param options - Optional settings for the command\n     */\n    async dropIndexes(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new indexes_1.DropIndexesOperation(this, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Get the list of all indexes information for the collection.\n     *\n     * @param options - Optional settings for the command\n     */\n    listIndexes(options) {\n        return new list_indexes_cursor_1.ListIndexesCursor(this, (0, utils_1.resolveOptions)(this, options));\n    }\n    /**\n     * Checks if one or more indexes exist on the collection, fails on first non-existing index\n     *\n     * @param indexes - One or more index names to check.\n     * @param options - Optional settings for the command\n     */\n    async indexExists(indexes, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new indexes_1.IndexExistsOperation(this, indexes, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Retrieves this collections index info.\n     *\n     * @param options - Optional settings for the command\n     */\n    async indexInformation(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new indexes_1.IndexInformationOperation(this.s.db, this.collectionName, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Gets an estimate of the count of documents in a collection using collection metadata.\n     * This will always run a count command on all server versions.\n     *\n     * due to an oversight in versions 5.0.0-5.0.8 of MongoDB, the count command,\n     * which estimatedDocumentCount uses in its implementation, was not included in v1 of\n     * the Stable API, and so users of the Stable API with estimatedDocumentCount are\n     * recommended to upgrade their server version to 5.0.9+ or set apiStrict: false to avoid\n     * encountering errors.\n     *\n     * @see {@link https://www.mongodb.com/docs/manual/reference/command/count/#behavior|Count: Behavior}\n     * @param options - Optional settings for the command\n     */\n    async estimatedDocumentCount(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new estimated_document_count_1.EstimatedDocumentCountOperation(this, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Gets the number of documents matching the filter.\n     * For a fast count of the total documents in a collection see {@link Collection#estimatedDocumentCount| estimatedDocumentCount}.\n     * **Note**: When migrating from {@link Collection#count| count} to {@link Collection#countDocuments| countDocuments}\n     * the following query operators must be replaced:\n     *\n     * | Operator | Replacement |\n     * | -------- | ----------- |\n     * | `$where`   | [`$expr`][1] |\n     * | `$near`    | [`$geoWithin`][2] with [`$center`][3] |\n     * | `$nearSphere` | [`$geoWithin`][2] with [`$centerSphere`][4] |\n     *\n     * [1]: https://www.mongodb.com/docs/manual/reference/operator/query/expr/\n     * [2]: https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/\n     * [3]: https://www.mongodb.com/docs/manual/reference/operator/query/center/#op._S_center\n     * [4]: https://www.mongodb.com/docs/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n     *\n     * @param filter - The filter for the count\n     * @param options - Optional settings for the command\n     *\n     * @see https://www.mongodb.com/docs/manual/reference/operator/query/expr/\n     * @see https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/\n     * @see https://www.mongodb.com/docs/manual/reference/operator/query/center/#op._S_center\n     * @see https://www.mongodb.com/docs/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n     */\n    async countDocuments(filter = {}, options = {}) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new count_documents_1.CountDocumentsOperation(this, filter, (0, utils_1.resolveOptions)(this, options)));\n    }\n    async distinct(key, filter = {}, options = {}) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new distinct_1.DistinctOperation(this, key, filter, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Retrieve all the indexes on the collection.\n     *\n     * @param options - Optional settings for the command\n     */\n    async indexes(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new indexes_1.IndexesOperation(this, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Get all the collection statistics.\n     *\n     * @param options - Optional settings for the command\n     */\n    async stats(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new stats_1.CollStatsOperation(this, options));\n    }\n    /**\n     * Find a document and delete it in one atomic operation. Requires a write lock for the duration of the operation.\n     *\n     * @param filter - The filter used to select the document to remove\n     * @param options - Optional settings for the command\n     */\n    async findOneAndDelete(filter, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new find_and_modify_1.FindOneAndDeleteOperation(this, filter, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Find a document and replace it in one atomic operation. Requires a write lock for the duration of the operation.\n     *\n     * @param filter - The filter used to select the document to replace\n     * @param replacement - The Document that replaces the matching document\n     * @param options - Optional settings for the command\n     */\n    async findOneAndReplace(filter, replacement, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new find_and_modify_1.FindOneAndReplaceOperation(this, filter, replacement, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Find a document and update it in one atomic operation. Requires a write lock for the duration of the operation.\n     *\n     * @param filter - The filter used to select the document to update\n     * @param update - Update operations to be performed on the document\n     * @param options - Optional settings for the command\n     */\n    async findOneAndUpdate(filter, update, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new find_and_modify_1.FindOneAndUpdateOperation(this, filter, update, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Execute an aggregation framework pipeline against the collection, needs MongoDB \\>= 2.2\n     *\n     * @param pipeline - An array of aggregation pipelines to execute\n     * @param options - Optional settings for the command\n     */\n    aggregate(pipeline = [], options) {\n        if (!Array.isArray(pipeline)) {\n            throw new error_1.MongoInvalidArgumentError('Argument \"pipeline\" must be an array of aggregation stages');\n        }\n        return new aggregation_cursor_1.AggregationCursor(this.s.db.s.client, this.s.namespace, pipeline, (0, utils_1.resolveOptions)(this, options));\n    }\n    /**\n     * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this collection.\n     *\n     * @remarks\n     * watch() accepts two generic arguments for distinct use cases:\n     * - The first is to override the schema that may be defined for this specific collection\n     * - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n     * @example\n     * By just providing the first argument I can type the change to be `ChangeStreamDocument<{ _id: number }>`\n     * ```ts\n     * collection.watch<{ _id: number }>()\n     *   .on('change', change => console.log(change._id.toFixed(4)));\n     * ```\n     *\n     * @example\n     * Passing a second argument provides a way to reflect the type changes caused by an advanced pipeline.\n     * Here, we are using a pipeline to have MongoDB filter for insert changes only and add a comment.\n     * No need start from scratch on the ChangeStreamInsertDocument type!\n     * By using an intersection we can save time and ensure defaults remain the same type!\n     * ```ts\n     * collection\n     *   .watch<Schema, ChangeStreamInsertDocument<Schema> & { comment: string }>([\n     *     { $addFields: { comment: 'big changes' } },\n     *     { $match: { operationType: 'insert' } }\n     *   ])\n     *   .on('change', change => {\n     *     change.comment.startsWith('big');\n     *     change.operationType === 'insert';\n     *     // No need to narrow in code because the generics did that for us!\n     *     expectType<Schema>(change.fullDocument);\n     *   });\n     * ```\n     *\n     * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n     * @param options - Optional settings for the command\n     * @typeParam TLocal - Type of the data being detected by the change stream\n     * @typeParam TChange - Type of the whole change stream document emitted\n     */\n    watch(pipeline = [], options = {}) {\n        // Allow optionally not specifying a pipeline\n        if (!Array.isArray(pipeline)) {\n            options = pipeline;\n            pipeline = [];\n        }\n        return new change_stream_1.ChangeStream(this, pipeline, (0, utils_1.resolveOptions)(this, options));\n    }\n    /**\n     * Initiate an Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n     *\n     * @throws MongoNotConnectedError\n     * @remarks\n     * **NOTE:** MongoClient must be connected prior to calling this method due to a known limitation in this legacy implementation.\n     * However, `collection.bulkWrite()` provides an equivalent API that does not require prior connecting.\n     */\n    initializeUnorderedBulkOp(options) {\n        return new unordered_1.UnorderedBulkOperation(this, (0, utils_1.resolveOptions)(this, options));\n    }\n    /**\n     * Initiate an In order bulk write operation. Operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n     *\n     * @throws MongoNotConnectedError\n     * @remarks\n     * **NOTE:** MongoClient must be connected prior to calling this method due to a known limitation in this legacy implementation.\n     * However, `collection.bulkWrite()` provides an equivalent API that does not require prior connecting.\n     */\n    initializeOrderedBulkOp(options) {\n        return new ordered_1.OrderedBulkOperation(this, (0, utils_1.resolveOptions)(this, options));\n    }\n    /**\n     * An estimated count of matching documents in the db to a filter.\n     *\n     * **NOTE:** This method has been deprecated, since it does not provide an accurate count of the documents\n     * in a collection. To obtain an accurate count of documents in the collection, use {@link Collection#countDocuments| countDocuments}.\n     * To obtain an estimated count of all documents in the collection, use {@link Collection#estimatedDocumentCount| estimatedDocumentCount}.\n     *\n     * @deprecated use {@link Collection#countDocuments| countDocuments} or {@link Collection#estimatedDocumentCount| estimatedDocumentCount} instead\n     *\n     * @param filter - The filter for the count.\n     * @param options - Optional settings for the command\n     */\n    async count(filter = {}, options = {}) {\n        return (0, execute_operation_1.executeOperation)(this.s.db.s.client, new count_1.CountOperation(utils_1.MongoDBNamespace.fromString(this.namespace), filter, (0, utils_1.resolveOptions)(this, options)));\n    }\n}\nexports.Collection = Collection;\n//# sourceMappingURL=collection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FEATURE_FLAGS = exports.DEFAULT_OPTIONS = exports.OPTIONS = exports.parseOptions = exports.resolveSRVRecord = void 0;\nconst dns = require(\"dns\");\nconst fs = require(\"fs\");\nconst mongodb_connection_string_url_1 = require(\"mongodb-connection-string-url\");\nconst process = require(\"process\");\nconst url_1 = require(\"url\");\nconst mongo_credentials_1 = require(\"./cmap/auth/mongo_credentials\");\nconst providers_1 = require(\"./cmap/auth/providers\");\nconst compression_1 = require(\"./cmap/wire_protocol/compression\");\nconst encrypter_1 = require(\"./encrypter\");\nconst error_1 = require(\"./error\");\nconst mongo_client_1 = require(\"./mongo_client\");\nconst mongo_logger_1 = require(\"./mongo_logger\");\nconst read_concern_1 = require(\"./read_concern\");\nconst read_preference_1 = require(\"./read_preference\");\nconst utils_1 = require(\"./utils\");\nconst write_concern_1 = require(\"./write_concern\");\nconst VALID_TXT_RECORDS = ['authSource', 'replicaSet', 'loadBalanced'];\nconst LB_SINGLE_HOST_ERROR = 'loadBalanced option only supported with a single host in the URI';\nconst LB_REPLICA_SET_ERROR = 'loadBalanced option not supported with a replicaSet option';\nconst LB_DIRECT_CONNECTION_ERROR = 'loadBalanced option not supported when directConnection is provided';\n/**\n * Determines whether a provided address matches the provided parent domain in order\n * to avoid certain attack vectors.\n *\n * @param srvAddress - The address to check against a domain\n * @param parentDomain - The domain to check the provided address against\n * @returns Whether the provided address matches the parent domain\n */\nfunction matchesParentDomain(srvAddress, parentDomain) {\n    const regex = /^.*?\\./;\n    const srv = `.${srvAddress.replace(regex, '')}`;\n    const parent = `.${parentDomain.replace(regex, '')}`;\n    return srv.endsWith(parent);\n}\n/**\n * Lookup a `mongodb+srv` connection string, combine the parts and reparse it as a normal\n * connection string.\n *\n * @param uri - The connection string to parse\n * @param options - Optional user provided connection string options\n */\nasync function resolveSRVRecord(options) {\n    if (typeof options.srvHost !== 'string') {\n        throw new error_1.MongoAPIError('Option \"srvHost\" must not be empty');\n    }\n    if (options.srvHost.split('.').length < 3) {\n        // TODO(NODE-3484): Replace with MongoConnectionStringError\n        throw new error_1.MongoAPIError('URI must include hostname, domain name, and tld');\n    }\n    // Resolve the SRV record and use the result as the list of hosts to connect to.\n    const lookupAddress = options.srvHost;\n    const addresses = await dns.promises.resolveSrv(`_${options.srvServiceName}._tcp.${lookupAddress}`);\n    if (addresses.length === 0) {\n        throw new error_1.MongoAPIError('No addresses found at host');\n    }\n    for (const { name } of addresses) {\n        if (!matchesParentDomain(name, lookupAddress)) {\n            throw new error_1.MongoAPIError('Server record does not share hostname with parent URI');\n        }\n    }\n    const hostAddresses = addresses.map(r => utils_1.HostAddress.fromString(`${r.name}:${r.port ?? 27017}`));\n    validateLoadBalancedOptions(hostAddresses, options, true);\n    // Resolve TXT record and add options from there if they exist.\n    let record;\n    try {\n        record = await dns.promises.resolveTxt(lookupAddress);\n    }\n    catch (error) {\n        if (error.code !== 'ENODATA' && error.code !== 'ENOTFOUND') {\n            throw error;\n        }\n        return hostAddresses;\n    }\n    if (record.length > 1) {\n        throw new error_1.MongoParseError('Multiple text records not allowed');\n    }\n    const txtRecordOptions = new url_1.URLSearchParams(record[0].join(''));\n    const txtRecordOptionKeys = [...txtRecordOptions.keys()];\n    if (txtRecordOptionKeys.some(key => !VALID_TXT_RECORDS.includes(key))) {\n        throw new error_1.MongoParseError(`Text record may only set any of: ${VALID_TXT_RECORDS.join(', ')}`);\n    }\n    if (VALID_TXT_RECORDS.some(option => txtRecordOptions.get(option) === '')) {\n        throw new error_1.MongoParseError('Cannot have empty URI params in DNS TXT Record');\n    }\n    const source = txtRecordOptions.get('authSource') ?? undefined;\n    const replicaSet = txtRecordOptions.get('replicaSet') ?? undefined;\n    const loadBalanced = txtRecordOptions.get('loadBalanced') ?? undefined;\n    if (!options.userSpecifiedAuthSource &&\n        source &&\n        options.credentials &&\n        !providers_1.AUTH_MECHS_AUTH_SRC_EXTERNAL.has(options.credentials.mechanism)) {\n        options.credentials = mongo_credentials_1.MongoCredentials.merge(options.credentials, { source });\n    }\n    if (!options.userSpecifiedReplicaSet && replicaSet) {\n        options.replicaSet = replicaSet;\n    }\n    if (loadBalanced === 'true') {\n        options.loadBalanced = true;\n    }\n    if (options.replicaSet && options.srvMaxHosts > 0) {\n        throw new error_1.MongoParseError('Cannot combine replicaSet option with srvMaxHosts');\n    }\n    validateLoadBalancedOptions(hostAddresses, options, true);\n    return hostAddresses;\n}\nexports.resolveSRVRecord = resolveSRVRecord;\n/**\n * Checks if TLS options are valid\n *\n * @param allOptions - All options provided by user or included in default options map\n * @throws MongoAPIError if TLS options are invalid\n */\nfunction checkTLSOptions(allOptions) {\n    if (!allOptions)\n        return;\n    const check = (a, b) => {\n        if (allOptions.has(a) && allOptions.has(b)) {\n            throw new error_1.MongoAPIError(`The '${a}' option cannot be used with the '${b}' option`);\n        }\n    };\n    check('tlsInsecure', 'tlsAllowInvalidCertificates');\n    check('tlsInsecure', 'tlsAllowInvalidHostnames');\n    check('tlsInsecure', 'tlsDisableCertificateRevocationCheck');\n    check('tlsInsecure', 'tlsDisableOCSPEndpointCheck');\n    check('tlsAllowInvalidCertificates', 'tlsDisableCertificateRevocationCheck');\n    check('tlsAllowInvalidCertificates', 'tlsDisableOCSPEndpointCheck');\n    check('tlsDisableCertificateRevocationCheck', 'tlsDisableOCSPEndpointCheck');\n}\nconst TRUTHS = new Set(['true', 't', '1', 'y', 'yes']);\nconst FALSEHOODS = new Set(['false', 'f', '0', 'n', 'no', '-1']);\nfunction getBoolean(name, value) {\n    if (typeof value === 'boolean')\n        return value;\n    const valueString = String(value).toLowerCase();\n    if (TRUTHS.has(valueString)) {\n        if (valueString !== 'true') {\n            (0, utils_1.emitWarningOnce)(`deprecated value for ${name} : ${valueString} - please update to ${name} : true instead`);\n        }\n        return true;\n    }\n    if (FALSEHOODS.has(valueString)) {\n        if (valueString !== 'false') {\n            (0, utils_1.emitWarningOnce)(`deprecated value for ${name} : ${valueString} - please update to ${name} : false instead`);\n        }\n        return false;\n    }\n    throw new error_1.MongoParseError(`Expected ${name} to be stringified boolean value, got: ${value}`);\n}\nfunction getIntFromOptions(name, value) {\n    const parsedInt = (0, utils_1.parseInteger)(value);\n    if (parsedInt != null) {\n        return parsedInt;\n    }\n    throw new error_1.MongoParseError(`Expected ${name} to be stringified int value, got: ${value}`);\n}\nfunction getUIntFromOptions(name, value) {\n    const parsedValue = getIntFromOptions(name, value);\n    if (parsedValue < 0) {\n        throw new error_1.MongoParseError(`${name} can only be a positive int value, got: ${value}`);\n    }\n    return parsedValue;\n}\nfunction* entriesFromString(value) {\n    const keyValuePairs = value.split(',');\n    for (const keyValue of keyValuePairs) {\n        const [key, value] = keyValue.split(':');\n        if (value == null) {\n            throw new error_1.MongoParseError('Cannot have undefined values in key value pairs');\n        }\n        yield [key, value];\n    }\n}\nclass CaseInsensitiveMap extends Map {\n    constructor(entries = []) {\n        super(entries.map(([k, v]) => [k.toLowerCase(), v]));\n    }\n    has(k) {\n        return super.has(k.toLowerCase());\n    }\n    get(k) {\n        return super.get(k.toLowerCase());\n    }\n    set(k, v) {\n        return super.set(k.toLowerCase(), v);\n    }\n    delete(k) {\n        return super.delete(k.toLowerCase());\n    }\n}\nfunction parseOptions(uri, mongoClient = undefined, options = {}) {\n    if (mongoClient != null && !(mongoClient instanceof mongo_client_1.MongoClient)) {\n        options = mongoClient;\n        mongoClient = undefined;\n    }\n    // validate BSONOptions\n    if (options.useBigInt64 && typeof options.promoteLongs === 'boolean' && !options.promoteLongs) {\n        throw new error_1.MongoAPIError('Must request either bigint or Long for int64 deserialization');\n    }\n    if (options.useBigInt64 && typeof options.promoteValues === 'boolean' && !options.promoteValues) {\n        throw new error_1.MongoAPIError('Must request either bigint or Long for int64 deserialization');\n    }\n    const url = new mongodb_connection_string_url_1.default(uri);\n    const { hosts, isSRV } = url;\n    const mongoOptions = Object.create(null);\n    // Feature flags\n    for (const flag of Object.getOwnPropertySymbols(options)) {\n        if (exports.FEATURE_FLAGS.has(flag)) {\n            mongoOptions[flag] = options[flag];\n        }\n    }\n    mongoOptions.hosts = isSRV ? [] : hosts.map(utils_1.HostAddress.fromString);\n    const urlOptions = new CaseInsensitiveMap();\n    if (url.pathname !== '/' && url.pathname !== '') {\n        const dbName = decodeURIComponent(url.pathname[0] === '/' ? url.pathname.slice(1) : url.pathname);\n        if (dbName) {\n            urlOptions.set('dbName', [dbName]);\n        }\n    }\n    if (url.username !== '') {\n        const auth = {\n            username: decodeURIComponent(url.username)\n        };\n        if (typeof url.password === 'string') {\n            auth.password = decodeURIComponent(url.password);\n        }\n        urlOptions.set('auth', [auth]);\n    }\n    for (const key of url.searchParams.keys()) {\n        const values = [...url.searchParams.getAll(key)];\n        if (values.includes('')) {\n            throw new error_1.MongoAPIError('URI cannot contain options with no value');\n        }\n        if (!urlOptions.has(key)) {\n            urlOptions.set(key, values);\n        }\n    }\n    const objectOptions = new CaseInsensitiveMap(Object.entries(options).filter(([, v]) => v != null));\n    // Validate options that can only be provided by one of uri or object\n    if (urlOptions.has('serverApi')) {\n        throw new error_1.MongoParseError('URI cannot contain `serverApi`, it can only be passed to the client');\n    }\n    if (objectOptions.has('loadBalanced')) {\n        throw new error_1.MongoParseError('loadBalanced is only a valid option in the URI');\n    }\n    // All option collection\n    const allOptions = new CaseInsensitiveMap();\n    const allKeys = new Set([\n        ...urlOptions.keys(),\n        ...objectOptions.keys(),\n        ...exports.DEFAULT_OPTIONS.keys()\n    ]);\n    for (const key of allKeys) {\n        const values = [];\n        const objectOptionValue = objectOptions.get(key);\n        if (objectOptionValue != null) {\n            values.push(objectOptionValue);\n        }\n        const urlValue = urlOptions.get(key);\n        if (urlValue != null) {\n            values.push(...urlValue);\n        }\n        const defaultOptionsValue = exports.DEFAULT_OPTIONS.get(key);\n        if (defaultOptionsValue != null) {\n            values.push(defaultOptionsValue);\n        }\n        allOptions.set(key, values);\n    }\n    if (allOptions.has('tlsCertificateKeyFile') && !allOptions.has('tlsCertificateFile')) {\n        allOptions.set('tlsCertificateFile', allOptions.get('tlsCertificateKeyFile'));\n    }\n    if (allOptions.has('tls') || allOptions.has('ssl')) {\n        const tlsAndSslOpts = (allOptions.get('tls') || [])\n            .concat(allOptions.get('ssl') || [])\n            .map(getBoolean.bind(null, 'tls/ssl'));\n        if (new Set(tlsAndSslOpts).size !== 1) {\n            throw new error_1.MongoParseError('All values of tls/ssl must be the same.');\n        }\n    }\n    checkTLSOptions(allOptions);\n    const unsupportedOptions = (0, utils_1.setDifference)(allKeys, Array.from(Object.keys(exports.OPTIONS)).map(s => s.toLowerCase()));\n    if (unsupportedOptions.size !== 0) {\n        const optionWord = unsupportedOptions.size > 1 ? 'options' : 'option';\n        const isOrAre = unsupportedOptions.size > 1 ? 'are' : 'is';\n        throw new error_1.MongoParseError(`${optionWord} ${Array.from(unsupportedOptions).join(', ')} ${isOrAre} not supported`);\n    }\n    // Option parsing and setting\n    for (const [key, descriptor] of Object.entries(exports.OPTIONS)) {\n        const values = allOptions.get(key);\n        if (!values || values.length === 0)\n            continue;\n        setOption(mongoOptions, key, descriptor, values);\n    }\n    if (mongoOptions.credentials) {\n        const isGssapi = mongoOptions.credentials.mechanism === providers_1.AuthMechanism.MONGODB_GSSAPI;\n        const isX509 = mongoOptions.credentials.mechanism === providers_1.AuthMechanism.MONGODB_X509;\n        const isAws = mongoOptions.credentials.mechanism === providers_1.AuthMechanism.MONGODB_AWS;\n        const isOidc = mongoOptions.credentials.mechanism === providers_1.AuthMechanism.MONGODB_OIDC;\n        if ((isGssapi || isX509) &&\n            allOptions.has('authSource') &&\n            mongoOptions.credentials.source !== '$external') {\n            // If authSource was explicitly given and its incorrect, we error\n            throw new error_1.MongoParseError(`${mongoOptions.credentials} can only have authSource set to '$external'`);\n        }\n        if (!(isGssapi || isX509 || isAws || isOidc) &&\n            mongoOptions.dbName &&\n            !allOptions.has('authSource')) {\n            // inherit the dbName unless GSSAPI or X509, then silently ignore dbName\n            // and there was no specific authSource given\n            mongoOptions.credentials = mongo_credentials_1.MongoCredentials.merge(mongoOptions.credentials, {\n                source: mongoOptions.dbName\n            });\n        }\n        if (isAws && mongoOptions.credentials.username && !mongoOptions.credentials.password) {\n            throw new error_1.MongoMissingCredentialsError(`When using ${mongoOptions.credentials.mechanism} password must be set when a username is specified`);\n        }\n        mongoOptions.credentials.validate();\n        // Check if the only auth related option provided was authSource, if so we can remove credentials\n        if (mongoOptions.credentials.password === '' &&\n            mongoOptions.credentials.username === '' &&\n            mongoOptions.credentials.mechanism === providers_1.AuthMechanism.MONGODB_DEFAULT &&\n            Object.keys(mongoOptions.credentials.mechanismProperties).length === 0) {\n            delete mongoOptions.credentials;\n        }\n    }\n    if (!mongoOptions.dbName) {\n        // dbName default is applied here because of the credential validation above\n        mongoOptions.dbName = 'test';\n    }\n    validateLoadBalancedOptions(hosts, mongoOptions, isSRV);\n    if (mongoClient && mongoOptions.autoEncryption) {\n        encrypter_1.Encrypter.checkForMongoCrypt();\n        mongoOptions.encrypter = new encrypter_1.Encrypter(mongoClient, uri, options);\n        mongoOptions.autoEncrypter = mongoOptions.encrypter.autoEncrypter;\n    }\n    // Potential SRV Overrides and SRV connection string validations\n    mongoOptions.userSpecifiedAuthSource =\n        objectOptions.has('authSource') || urlOptions.has('authSource');\n    mongoOptions.userSpecifiedReplicaSet =\n        objectOptions.has('replicaSet') || urlOptions.has('replicaSet');\n    if (isSRV) {\n        // SRV Record is resolved upon connecting\n        mongoOptions.srvHost = hosts[0];\n        if (mongoOptions.directConnection) {\n            throw new error_1.MongoAPIError('SRV URI does not support directConnection');\n        }\n        if (mongoOptions.srvMaxHosts > 0 && typeof mongoOptions.replicaSet === 'string') {\n            throw new error_1.MongoParseError('Cannot use srvMaxHosts option with replicaSet');\n        }\n        // SRV turns on TLS by default, but users can override and turn it off\n        const noUserSpecifiedTLS = !objectOptions.has('tls') && !urlOptions.has('tls');\n        const noUserSpecifiedSSL = !objectOptions.has('ssl') && !urlOptions.has('ssl');\n        if (noUserSpecifiedTLS && noUserSpecifiedSSL) {\n            mongoOptions.tls = true;\n        }\n    }\n    else {\n        const userSpecifiedSrvOptions = urlOptions.has('srvMaxHosts') ||\n            objectOptions.has('srvMaxHosts') ||\n            urlOptions.has('srvServiceName') ||\n            objectOptions.has('srvServiceName');\n        if (userSpecifiedSrvOptions) {\n            throw new error_1.MongoParseError('Cannot use srvMaxHosts or srvServiceName with a non-srv connection string');\n        }\n    }\n    if (mongoOptions.directConnection && mongoOptions.hosts.length !== 1) {\n        throw new error_1.MongoParseError('directConnection option requires exactly one host');\n    }\n    if (!mongoOptions.proxyHost &&\n        (mongoOptions.proxyPort || mongoOptions.proxyUsername || mongoOptions.proxyPassword)) {\n        throw new error_1.MongoParseError('Must specify proxyHost if other proxy options are passed');\n    }\n    if ((mongoOptions.proxyUsername && !mongoOptions.proxyPassword) ||\n        (!mongoOptions.proxyUsername && mongoOptions.proxyPassword)) {\n        throw new error_1.MongoParseError('Can only specify both of proxy username/password or neither');\n    }\n    const proxyOptions = ['proxyHost', 'proxyPort', 'proxyUsername', 'proxyPassword'].map(key => urlOptions.get(key) ?? []);\n    if (proxyOptions.some(options => options.length > 1)) {\n        throw new error_1.MongoParseError('Proxy options cannot be specified multiple times in the connection string');\n    }\n    const loggerFeatureFlag = Symbol.for('@@mdb.enableMongoLogger');\n    mongoOptions[loggerFeatureFlag] = mongoOptions[loggerFeatureFlag] ?? false;\n    let loggerEnvOptions = {};\n    let loggerClientOptions = {};\n    if (mongoOptions[loggerFeatureFlag]) {\n        loggerEnvOptions = {\n            MONGODB_LOG_COMMAND: process.env.MONGODB_LOG_COMMAND,\n            MONGODB_LOG_TOPOLOGY: process.env.MONGODB_LOG_TOPOLOGY,\n            MONGODB_LOG_SERVER_SELECTION: process.env.MONGODB_LOG_SERVER_SELECTION,\n            MONGODB_LOG_CONNECTION: process.env.MONGODB_LOG_CONNECTION,\n            MONGODB_LOG_ALL: process.env.MONGODB_LOG_ALL,\n            MONGODB_LOG_MAX_DOCUMENT_LENGTH: process.env.MONGODB_LOG_MAX_DOCUMENT_LENGTH,\n            MONGODB_LOG_PATH: process.env.MONGODB_LOG_PATH\n        };\n        loggerClientOptions = {\n            mongodbLogPath: mongoOptions.mongodbLogPath\n        };\n    }\n    mongoOptions.mongoLoggerOptions = mongo_logger_1.MongoLogger.resolveOptions(loggerEnvOptions, loggerClientOptions);\n    return mongoOptions;\n}\nexports.parseOptions = parseOptions;\n/**\n * #### Throws if LB mode is true:\n * - hosts contains more than one host\n * - there is a replicaSet name set\n * - directConnection is set\n * - if srvMaxHosts is used when an srv connection string is passed in\n *\n * @throws MongoParseError\n */\nfunction validateLoadBalancedOptions(hosts, mongoOptions, isSrv) {\n    if (mongoOptions.loadBalanced) {\n        if (hosts.length > 1) {\n            throw new error_1.MongoParseError(LB_SINGLE_HOST_ERROR);\n        }\n        if (mongoOptions.replicaSet) {\n            throw new error_1.MongoParseError(LB_REPLICA_SET_ERROR);\n        }\n        if (mongoOptions.directConnection) {\n            throw new error_1.MongoParseError(LB_DIRECT_CONNECTION_ERROR);\n        }\n        if (isSrv && mongoOptions.srvMaxHosts > 0) {\n            throw new error_1.MongoParseError('Cannot limit srv hosts with loadBalanced enabled');\n        }\n    }\n    return;\n}\nfunction setOption(mongoOptions, key, descriptor, values) {\n    const { target, type, transform, deprecated } = descriptor;\n    const name = target ?? key;\n    if (deprecated) {\n        const deprecatedMsg = typeof deprecated === 'string' ? `: ${deprecated}` : '';\n        (0, utils_1.emitWarning)(`${key} is a deprecated option${deprecatedMsg}`);\n    }\n    switch (type) {\n        case 'boolean':\n            mongoOptions[name] = getBoolean(name, values[0]);\n            break;\n        case 'int':\n            mongoOptions[name] = getIntFromOptions(name, values[0]);\n            break;\n        case 'uint':\n            mongoOptions[name] = getUIntFromOptions(name, values[0]);\n            break;\n        case 'string':\n            if (values[0] == null) {\n                break;\n            }\n            mongoOptions[name] = String(values[0]);\n            break;\n        case 'record':\n            if (!(0, utils_1.isRecord)(values[0])) {\n                throw new error_1.MongoParseError(`${name} must be an object`);\n            }\n            mongoOptions[name] = values[0];\n            break;\n        case 'any':\n            mongoOptions[name] = values[0];\n            break;\n        default: {\n            if (!transform) {\n                throw new error_1.MongoParseError('Descriptors missing a type must define a transform');\n            }\n            const transformValue = transform({ name, options: mongoOptions, values });\n            mongoOptions[name] = transformValue;\n            break;\n        }\n    }\n}\nexports.OPTIONS = {\n    appName: {\n        target: 'metadata',\n        transform({ options, values: [value] }) {\n            return (0, utils_1.makeClientMetadata)({ ...options.driverInfo, appName: String(value) });\n        }\n    },\n    auth: {\n        target: 'credentials',\n        transform({ name, options, values: [value] }) {\n            if (!(0, utils_1.isRecord)(value, ['username', 'password'])) {\n                throw new error_1.MongoParseError(`${name} must be an object with 'username' and 'password' properties`);\n            }\n            return mongo_credentials_1.MongoCredentials.merge(options.credentials, {\n                username: value.username,\n                password: value.password\n            });\n        }\n    },\n    authMechanism: {\n        target: 'credentials',\n        transform({ options, values: [value] }) {\n            const mechanisms = Object.values(providers_1.AuthMechanism);\n            const [mechanism] = mechanisms.filter(m => m.match(RegExp(String.raw `\\b${value}\\b`, 'i')));\n            if (!mechanism) {\n                throw new error_1.MongoParseError(`authMechanism one of ${mechanisms}, got ${value}`);\n            }\n            let source = options.credentials?.source;\n            if (mechanism === providers_1.AuthMechanism.MONGODB_PLAIN ||\n                providers_1.AUTH_MECHS_AUTH_SRC_EXTERNAL.has(mechanism)) {\n                // some mechanisms have '$external' as the Auth Source\n                source = '$external';\n            }\n            let password = options.credentials?.password;\n            if (mechanism === providers_1.AuthMechanism.MONGODB_X509 && password === '') {\n                password = undefined;\n            }\n            return mongo_credentials_1.MongoCredentials.merge(options.credentials, {\n                mechanism,\n                source,\n                password\n            });\n        }\n    },\n    authMechanismProperties: {\n        target: 'credentials',\n        transform({ options, values }) {\n            // We can have a combination of options passed in the URI and options passed\n            // as an object to the MongoClient. So we must transform the string options\n            // as well as merge them together with a potentially provided object.\n            let mechanismProperties = Object.create(null);\n            for (const optionValue of values) {\n                if (typeof optionValue === 'string') {\n                    for (const [key, value] of entriesFromString(optionValue)) {\n                        try {\n                            mechanismProperties[key] = getBoolean(key, value);\n                        }\n                        catch {\n                            mechanismProperties[key] = value;\n                        }\n                    }\n                }\n                else {\n                    if (!(0, utils_1.isRecord)(optionValue)) {\n                        throw new error_1.MongoParseError('AuthMechanismProperties must be an object');\n                    }\n                    mechanismProperties = { ...optionValue };\n                }\n            }\n            return mongo_credentials_1.MongoCredentials.merge(options.credentials, {\n                mechanismProperties\n            });\n        }\n    },\n    authSource: {\n        target: 'credentials',\n        transform({ options, values: [value] }) {\n            const source = String(value);\n            return mongo_credentials_1.MongoCredentials.merge(options.credentials, { source });\n        }\n    },\n    autoEncryption: {\n        type: 'record'\n    },\n    bsonRegExp: {\n        type: 'boolean'\n    },\n    serverApi: {\n        target: 'serverApi',\n        transform({ values: [version] }) {\n            const serverApiToValidate = typeof version === 'string' ? { version } : version;\n            const versionToValidate = serverApiToValidate && serverApiToValidate.version;\n            if (!versionToValidate) {\n                throw new error_1.MongoParseError(`Invalid \\`serverApi\\` property; must specify a version from the following enum: [\"${Object.values(mongo_client_1.ServerApiVersion).join('\", \"')}\"]`);\n            }\n            if (!Object.values(mongo_client_1.ServerApiVersion).some(v => v === versionToValidate)) {\n                throw new error_1.MongoParseError(`Invalid server API version=${versionToValidate}; must be in the following enum: [\"${Object.values(mongo_client_1.ServerApiVersion).join('\", \"')}\"]`);\n            }\n            return serverApiToValidate;\n        }\n    },\n    checkKeys: {\n        type: 'boolean'\n    },\n    compressors: {\n        default: 'none',\n        target: 'compressors',\n        transform({ values }) {\n            const compressionList = new Set();\n            for (const compVal of values) {\n                const compValArray = typeof compVal === 'string' ? compVal.split(',') : compVal;\n                if (!Array.isArray(compValArray)) {\n                    throw new error_1.MongoInvalidArgumentError('compressors must be an array or a comma-delimited list of strings');\n                }\n                for (const c of compValArray) {\n                    if (Object.keys(compression_1.Compressor).includes(String(c))) {\n                        compressionList.add(String(c));\n                    }\n                    else {\n                        throw new error_1.MongoInvalidArgumentError(`${c} is not a valid compression mechanism. Must be one of: ${Object.keys(compression_1.Compressor)}.`);\n                    }\n                }\n            }\n            return [...compressionList];\n        }\n    },\n    connectTimeoutMS: {\n        default: 30000,\n        type: 'uint'\n    },\n    dbName: {\n        type: 'string'\n    },\n    directConnection: {\n        default: false,\n        type: 'boolean'\n    },\n    driverInfo: {\n        target: 'metadata',\n        default: (0, utils_1.makeClientMetadata)(),\n        transform({ options, values: [value] }) {\n            if (!(0, utils_1.isRecord)(value))\n                throw new error_1.MongoParseError('DriverInfo must be an object');\n            return (0, utils_1.makeClientMetadata)({\n                driverInfo: value,\n                appName: options.metadata?.application?.name\n            });\n        }\n    },\n    enableUtf8Validation: { type: 'boolean', default: true },\n    family: {\n        transform({ name, values: [value] }) {\n            const transformValue = getIntFromOptions(name, value);\n            if (transformValue === 4 || transformValue === 6) {\n                return transformValue;\n            }\n            throw new error_1.MongoParseError(`Option 'family' must be 4 or 6 got ${transformValue}.`);\n        }\n    },\n    fieldsAsRaw: {\n        type: 'record'\n    },\n    forceServerObjectId: {\n        default: false,\n        type: 'boolean'\n    },\n    fsync: {\n        deprecated: 'Please use journal instead',\n        target: 'writeConcern',\n        transform({ name, options, values: [value] }) {\n            const wc = write_concern_1.WriteConcern.fromOptions({\n                writeConcern: {\n                    ...options.writeConcern,\n                    fsync: getBoolean(name, value)\n                }\n            });\n            if (!wc)\n                throw new error_1.MongoParseError(`Unable to make a writeConcern from fsync=${value}`);\n            return wc;\n        }\n    },\n    heartbeatFrequencyMS: {\n        default: 10000,\n        type: 'uint'\n    },\n    ignoreUndefined: {\n        type: 'boolean'\n    },\n    j: {\n        deprecated: 'Please use journal instead',\n        target: 'writeConcern',\n        transform({ name, options, values: [value] }) {\n            const wc = write_concern_1.WriteConcern.fromOptions({\n                writeConcern: {\n                    ...options.writeConcern,\n                    journal: getBoolean(name, value)\n                }\n            });\n            if (!wc)\n                throw new error_1.MongoParseError(`Unable to make a writeConcern from journal=${value}`);\n            return wc;\n        }\n    },\n    journal: {\n        target: 'writeConcern',\n        transform({ name, options, values: [value] }) {\n            const wc = write_concern_1.WriteConcern.fromOptions({\n                writeConcern: {\n                    ...options.writeConcern,\n                    journal: getBoolean(name, value)\n                }\n            });\n            if (!wc)\n                throw new error_1.MongoParseError(`Unable to make a writeConcern from journal=${value}`);\n            return wc;\n        }\n    },\n    keepAlive: {\n        default: true,\n        type: 'boolean'\n    },\n    keepAliveInitialDelay: {\n        default: 120000,\n        type: 'uint'\n    },\n    loadBalanced: {\n        default: false,\n        type: 'boolean'\n    },\n    localThresholdMS: {\n        default: 15,\n        type: 'uint'\n    },\n    maxConnecting: {\n        default: 2,\n        transform({ name, values: [value] }) {\n            const maxConnecting = getUIntFromOptions(name, value);\n            if (maxConnecting === 0) {\n                throw new error_1.MongoInvalidArgumentError('maxConnecting must be > 0 if specified');\n            }\n            return maxConnecting;\n        }\n    },\n    maxIdleTimeMS: {\n        default: 0,\n        type: 'uint'\n    },\n    maxPoolSize: {\n        default: 100,\n        type: 'uint'\n    },\n    maxStalenessSeconds: {\n        target: 'readPreference',\n        transform({ name, options, values: [value] }) {\n            const maxStalenessSeconds = getUIntFromOptions(name, value);\n            if (options.readPreference) {\n                return read_preference_1.ReadPreference.fromOptions({\n                    readPreference: { ...options.readPreference, maxStalenessSeconds }\n                });\n            }\n            else {\n                return new read_preference_1.ReadPreference('secondary', undefined, { maxStalenessSeconds });\n            }\n        }\n    },\n    minInternalBufferSize: {\n        type: 'uint'\n    },\n    minPoolSize: {\n        default: 0,\n        type: 'uint'\n    },\n    minHeartbeatFrequencyMS: {\n        default: 500,\n        type: 'uint'\n    },\n    monitorCommands: {\n        default: false,\n        type: 'boolean'\n    },\n    name: {\n        target: 'driverInfo',\n        transform({ values: [value], options }) {\n            return { ...options.driverInfo, name: String(value) };\n        }\n    },\n    noDelay: {\n        default: true,\n        type: 'boolean'\n    },\n    pkFactory: {\n        default: utils_1.DEFAULT_PK_FACTORY,\n        transform({ values: [value] }) {\n            if ((0, utils_1.isRecord)(value, ['createPk']) && typeof value.createPk === 'function') {\n                return value;\n            }\n            throw new error_1.MongoParseError(`Option pkFactory must be an object with a createPk function, got ${value}`);\n        }\n    },\n    promoteBuffers: {\n        type: 'boolean'\n    },\n    promoteLongs: {\n        type: 'boolean'\n    },\n    promoteValues: {\n        type: 'boolean'\n    },\n    useBigInt64: {\n        type: 'boolean'\n    },\n    proxyHost: {\n        type: 'string'\n    },\n    proxyPassword: {\n        type: 'string'\n    },\n    proxyPort: {\n        type: 'uint'\n    },\n    proxyUsername: {\n        type: 'string'\n    },\n    raw: {\n        default: false,\n        type: 'boolean'\n    },\n    readConcern: {\n        transform({ values: [value], options }) {\n            if (value instanceof read_concern_1.ReadConcern || (0, utils_1.isRecord)(value, ['level'])) {\n                return read_concern_1.ReadConcern.fromOptions({ ...options.readConcern, ...value });\n            }\n            throw new error_1.MongoParseError(`ReadConcern must be an object, got ${JSON.stringify(value)}`);\n        }\n    },\n    readConcernLevel: {\n        target: 'readConcern',\n        transform({ values: [level], options }) {\n            return read_concern_1.ReadConcern.fromOptions({\n                ...options.readConcern,\n                level: level\n            });\n        }\n    },\n    readPreference: {\n        default: read_preference_1.ReadPreference.primary,\n        transform({ values: [value], options }) {\n            if (value instanceof read_preference_1.ReadPreference) {\n                return read_preference_1.ReadPreference.fromOptions({\n                    readPreference: { ...options.readPreference, ...value },\n                    ...value\n                });\n            }\n            if ((0, utils_1.isRecord)(value, ['mode'])) {\n                const rp = read_preference_1.ReadPreference.fromOptions({\n                    readPreference: { ...options.readPreference, ...value },\n                    ...value\n                });\n                if (rp)\n                    return rp;\n                else\n                    throw new error_1.MongoParseError(`Cannot make read preference from ${JSON.stringify(value)}`);\n            }\n            if (typeof value === 'string') {\n                const rpOpts = {\n                    hedge: options.readPreference?.hedge,\n                    maxStalenessSeconds: options.readPreference?.maxStalenessSeconds\n                };\n                return new read_preference_1.ReadPreference(value, options.readPreference?.tags, rpOpts);\n            }\n            throw new error_1.MongoParseError(`Unknown ReadPreference value: ${value}`);\n        }\n    },\n    readPreferenceTags: {\n        target: 'readPreference',\n        transform({ values, options }) {\n            const tags = Array.isArray(values[0])\n                ? values[0]\n                : values;\n            const readPreferenceTags = [];\n            for (const tag of tags) {\n                const readPreferenceTag = Object.create(null);\n                if (typeof tag === 'string') {\n                    for (const [k, v] of entriesFromString(tag)) {\n                        readPreferenceTag[k] = v;\n                    }\n                }\n                if ((0, utils_1.isRecord)(tag)) {\n                    for (const [k, v] of Object.entries(tag)) {\n                        readPreferenceTag[k] = v;\n                    }\n                }\n                readPreferenceTags.push(readPreferenceTag);\n            }\n            return read_preference_1.ReadPreference.fromOptions({\n                readPreference: options.readPreference,\n                readPreferenceTags\n            });\n        }\n    },\n    replicaSet: {\n        type: 'string'\n    },\n    retryReads: {\n        default: true,\n        type: 'boolean'\n    },\n    retryWrites: {\n        default: true,\n        type: 'boolean'\n    },\n    serializeFunctions: {\n        type: 'boolean'\n    },\n    serverSelectionTimeoutMS: {\n        default: 30000,\n        type: 'uint'\n    },\n    servername: {\n        type: 'string'\n    },\n    socketTimeoutMS: {\n        default: 0,\n        type: 'uint'\n    },\n    srvMaxHosts: {\n        type: 'uint',\n        default: 0\n    },\n    srvServiceName: {\n        type: 'string',\n        default: 'mongodb'\n    },\n    ssl: {\n        target: 'tls',\n        type: 'boolean'\n    },\n    sslCA: {\n        target: 'ca',\n        transform({ values: [value] }) {\n            return fs.readFileSync(String(value), { encoding: 'ascii' });\n        }\n    },\n    sslCRL: {\n        target: 'crl',\n        transform({ values: [value] }) {\n            return fs.readFileSync(String(value), { encoding: 'ascii' });\n        }\n    },\n    sslCert: {\n        target: 'cert',\n        transform({ values: [value] }) {\n            return fs.readFileSync(String(value), { encoding: 'ascii' });\n        }\n    },\n    sslKey: {\n        target: 'key',\n        transform({ values: [value] }) {\n            return fs.readFileSync(String(value), { encoding: 'ascii' });\n        }\n    },\n    sslPass: {\n        deprecated: true,\n        target: 'passphrase',\n        type: 'string'\n    },\n    sslValidate: {\n        target: 'rejectUnauthorized',\n        type: 'boolean'\n    },\n    tls: {\n        type: 'boolean'\n    },\n    tlsAllowInvalidCertificates: {\n        target: 'rejectUnauthorized',\n        transform({ name, values: [value] }) {\n            // allowInvalidCertificates is the inverse of rejectUnauthorized\n            return !getBoolean(name, value);\n        }\n    },\n    tlsAllowInvalidHostnames: {\n        target: 'checkServerIdentity',\n        transform({ name, values: [value] }) {\n            // tlsAllowInvalidHostnames means setting the checkServerIdentity function to a noop\n            return getBoolean(name, value) ? () => undefined : undefined;\n        }\n    },\n    tlsCAFile: {\n        target: 'ca',\n        transform({ values: [value] }) {\n            return fs.readFileSync(String(value), { encoding: 'ascii' });\n        }\n    },\n    tlsCertificateFile: {\n        target: 'cert',\n        transform({ values: [value] }) {\n            return fs.readFileSync(String(value), { encoding: 'ascii' });\n        }\n    },\n    tlsCertificateKeyFile: {\n        target: 'key',\n        transform({ values: [value] }) {\n            return fs.readFileSync(String(value), { encoding: 'ascii' });\n        }\n    },\n    tlsCertificateKeyFilePassword: {\n        target: 'passphrase',\n        type: 'any'\n    },\n    tlsInsecure: {\n        transform({ name, options, values: [value] }) {\n            const tlsInsecure = getBoolean(name, value);\n            if (tlsInsecure) {\n                options.checkServerIdentity = () => undefined;\n                options.rejectUnauthorized = false;\n            }\n            else {\n                options.checkServerIdentity = options.tlsAllowInvalidHostnames\n                    ? () => undefined\n                    : undefined;\n                options.rejectUnauthorized = options.tlsAllowInvalidCertificates ? false : true;\n            }\n            return tlsInsecure;\n        }\n    },\n    w: {\n        target: 'writeConcern',\n        transform({ values: [value], options }) {\n            return write_concern_1.WriteConcern.fromOptions({ writeConcern: { ...options.writeConcern, w: value } });\n        }\n    },\n    waitQueueTimeoutMS: {\n        default: 0,\n        type: 'uint'\n    },\n    writeConcern: {\n        target: 'writeConcern',\n        transform({ values: [value], options }) {\n            if ((0, utils_1.isRecord)(value) || value instanceof write_concern_1.WriteConcern) {\n                return write_concern_1.WriteConcern.fromOptions({\n                    writeConcern: {\n                        ...options.writeConcern,\n                        ...value\n                    }\n                });\n            }\n            else if (value === 'majority' || typeof value === 'number') {\n                return write_concern_1.WriteConcern.fromOptions({\n                    writeConcern: {\n                        ...options.writeConcern,\n                        w: value\n                    }\n                });\n            }\n            throw new error_1.MongoParseError(`Invalid WriteConcern cannot parse: ${JSON.stringify(value)}`);\n        }\n    },\n    wtimeout: {\n        deprecated: 'Please use wtimeoutMS instead',\n        target: 'writeConcern',\n        transform({ values: [value], options }) {\n            const wc = write_concern_1.WriteConcern.fromOptions({\n                writeConcern: {\n                    ...options.writeConcern,\n                    wtimeout: getUIntFromOptions('wtimeout', value)\n                }\n            });\n            if (wc)\n                return wc;\n            throw new error_1.MongoParseError(`Cannot make WriteConcern from wtimeout`);\n        }\n    },\n    wtimeoutMS: {\n        target: 'writeConcern',\n        transform({ values: [value], options }) {\n            const wc = write_concern_1.WriteConcern.fromOptions({\n                writeConcern: {\n                    ...options.writeConcern,\n                    wtimeoutMS: getUIntFromOptions('wtimeoutMS', value)\n                }\n            });\n            if (wc)\n                return wc;\n            throw new error_1.MongoParseError(`Cannot make WriteConcern from wtimeout`);\n        }\n    },\n    zlibCompressionLevel: {\n        default: 0,\n        type: 'int'\n    },\n    // Custom types for modifying core behavior\n    connectionType: { type: 'any' },\n    srvPoller: { type: 'any' },\n    // Accepted NodeJS Options\n    minDHSize: { type: 'any' },\n    pskCallback: { type: 'any' },\n    secureContext: { type: 'any' },\n    enableTrace: { type: 'any' },\n    requestCert: { type: 'any' },\n    rejectUnauthorized: { type: 'any' },\n    checkServerIdentity: { type: 'any' },\n    ALPNProtocols: { type: 'any' },\n    SNICallback: { type: 'any' },\n    session: { type: 'any' },\n    requestOCSP: { type: 'any' },\n    localAddress: { type: 'any' },\n    localPort: { type: 'any' },\n    hints: { type: 'any' },\n    lookup: { type: 'any' },\n    ca: { type: 'any' },\n    cert: { type: 'any' },\n    ciphers: { type: 'any' },\n    crl: { type: 'any' },\n    ecdhCurve: { type: 'any' },\n    key: { type: 'any' },\n    passphrase: { type: 'any' },\n    pfx: { type: 'any' },\n    secureProtocol: { type: 'any' },\n    index: { type: 'any' },\n    // Legacy Options, these are unused but left here to avoid errors with CSFLE lib\n    useNewUrlParser: { type: 'boolean' },\n    useUnifiedTopology: { type: 'boolean' }\n};\nexports.DEFAULT_OPTIONS = new CaseInsensitiveMap(Object.entries(exports.OPTIONS)\n    .filter(([, descriptor]) => descriptor.default != null)\n    .map(([k, d]) => [k, d.default]));\n/**\n * Set of permitted feature flags\n * @internal\n */\nexports.FEATURE_FLAGS = new Set([\n    Symbol.for('@@mdb.skipPingOnConnect'),\n    Symbol.for('@@mdb.enableMongoLogger')\n]);\n//# sourceMappingURL=connection_string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TOPOLOGY_EVENTS = exports.CMAP_EVENTS = exports.HEARTBEAT_EVENTS = exports.RESUME_TOKEN_CHANGED = exports.END = exports.CHANGE = exports.INIT = exports.MORE = exports.RESPONSE = exports.SERVER_HEARTBEAT_FAILED = exports.SERVER_HEARTBEAT_SUCCEEDED = exports.SERVER_HEARTBEAT_STARTED = exports.COMMAND_FAILED = exports.COMMAND_SUCCEEDED = exports.COMMAND_STARTED = exports.CLUSTER_TIME_RECEIVED = exports.CONNECTION_CHECKED_IN = exports.CONNECTION_CHECKED_OUT = exports.CONNECTION_CHECK_OUT_FAILED = exports.CONNECTION_CHECK_OUT_STARTED = exports.CONNECTION_CLOSED = exports.CONNECTION_READY = exports.CONNECTION_CREATED = exports.CONNECTION_POOL_READY = exports.CONNECTION_POOL_CLEARED = exports.CONNECTION_POOL_CLOSED = exports.CONNECTION_POOL_CREATED = exports.TOPOLOGY_DESCRIPTION_CHANGED = exports.TOPOLOGY_CLOSED = exports.TOPOLOGY_OPENING = exports.SERVER_DESCRIPTION_CHANGED = exports.SERVER_CLOSED = exports.SERVER_OPENING = exports.DESCRIPTION_RECEIVED = exports.UNPINNED = exports.PINNED = exports.MESSAGE = exports.ENDED = exports.CLOSED = exports.CONNECT = exports.OPEN = exports.CLOSE = exports.TIMEOUT = exports.ERROR = exports.SYSTEM_JS_COLLECTION = exports.SYSTEM_COMMAND_COLLECTION = exports.SYSTEM_USER_COLLECTION = exports.SYSTEM_PROFILE_COLLECTION = exports.SYSTEM_INDEX_COLLECTION = exports.SYSTEM_NAMESPACE_COLLECTION = void 0;\nexports.LEGACY_HELLO_COMMAND_CAMEL_CASE = exports.LEGACY_HELLO_COMMAND = exports.MONGO_CLIENT_EVENTS = exports.LOCAL_SERVER_EVENTS = exports.SERVER_RELAY_EVENTS = exports.APM_EVENTS = void 0;\nexports.SYSTEM_NAMESPACE_COLLECTION = 'system.namespaces';\nexports.SYSTEM_INDEX_COLLECTION = 'system.indexes';\nexports.SYSTEM_PROFILE_COLLECTION = 'system.profile';\nexports.SYSTEM_USER_COLLECTION = 'system.users';\nexports.SYSTEM_COMMAND_COLLECTION = '$cmd';\nexports.SYSTEM_JS_COLLECTION = 'system.js';\n// events\nexports.ERROR = 'error';\nexports.TIMEOUT = 'timeout';\nexports.CLOSE = 'close';\nexports.OPEN = 'open';\nexports.CONNECT = 'connect';\nexports.CLOSED = 'closed';\nexports.ENDED = 'ended';\nexports.MESSAGE = 'message';\nexports.PINNED = 'pinned';\nexports.UNPINNED = 'unpinned';\nexports.DESCRIPTION_RECEIVED = 'descriptionReceived';\nexports.SERVER_OPENING = 'serverOpening';\nexports.SERVER_CLOSED = 'serverClosed';\nexports.SERVER_DESCRIPTION_CHANGED = 'serverDescriptionChanged';\nexports.TOPOLOGY_OPENING = 'topologyOpening';\nexports.TOPOLOGY_CLOSED = 'topologyClosed';\nexports.TOPOLOGY_DESCRIPTION_CHANGED = 'topologyDescriptionChanged';\nexports.CONNECTION_POOL_CREATED = 'connectionPoolCreated';\nexports.CONNECTION_POOL_CLOSED = 'connectionPoolClosed';\nexports.CONNECTION_POOL_CLEARED = 'connectionPoolCleared';\nexports.CONNECTION_POOL_READY = 'connectionPoolReady';\nexports.CONNECTION_CREATED = 'connectionCreated';\nexports.CONNECTION_READY = 'connectionReady';\nexports.CONNECTION_CLOSED = 'connectionClosed';\nexports.CONNECTION_CHECK_OUT_STARTED = 'connectionCheckOutStarted';\nexports.CONNECTION_CHECK_OUT_FAILED = 'connectionCheckOutFailed';\nexports.CONNECTION_CHECKED_OUT = 'connectionCheckedOut';\nexports.CONNECTION_CHECKED_IN = 'connectionCheckedIn';\nexports.CLUSTER_TIME_RECEIVED = 'clusterTimeReceived';\nexports.COMMAND_STARTED = 'commandStarted';\nexports.COMMAND_SUCCEEDED = 'commandSucceeded';\nexports.COMMAND_FAILED = 'commandFailed';\nexports.SERVER_HEARTBEAT_STARTED = 'serverHeartbeatStarted';\nexports.SERVER_HEARTBEAT_SUCCEEDED = 'serverHeartbeatSucceeded';\nexports.SERVER_HEARTBEAT_FAILED = 'serverHeartbeatFailed';\nexports.RESPONSE = 'response';\nexports.MORE = 'more';\nexports.INIT = 'init';\nexports.CHANGE = 'change';\nexports.END = 'end';\nexports.RESUME_TOKEN_CHANGED = 'resumeTokenChanged';\n/** @public */\nexports.HEARTBEAT_EVENTS = Object.freeze([\n    exports.SERVER_HEARTBEAT_STARTED,\n    exports.SERVER_HEARTBEAT_SUCCEEDED,\n    exports.SERVER_HEARTBEAT_FAILED\n]);\n/** @public */\nexports.CMAP_EVENTS = Object.freeze([\n    exports.CONNECTION_POOL_CREATED,\n    exports.CONNECTION_POOL_READY,\n    exports.CONNECTION_POOL_CLEARED,\n    exports.CONNECTION_POOL_CLOSED,\n    exports.CONNECTION_CREATED,\n    exports.CONNECTION_READY,\n    exports.CONNECTION_CLOSED,\n    exports.CONNECTION_CHECK_OUT_STARTED,\n    exports.CONNECTION_CHECK_OUT_FAILED,\n    exports.CONNECTION_CHECKED_OUT,\n    exports.CONNECTION_CHECKED_IN\n]);\n/** @public */\nexports.TOPOLOGY_EVENTS = Object.freeze([\n    exports.SERVER_OPENING,\n    exports.SERVER_CLOSED,\n    exports.SERVER_DESCRIPTION_CHANGED,\n    exports.TOPOLOGY_OPENING,\n    exports.TOPOLOGY_CLOSED,\n    exports.TOPOLOGY_DESCRIPTION_CHANGED,\n    exports.ERROR,\n    exports.TIMEOUT,\n    exports.CLOSE\n]);\n/** @public */\nexports.APM_EVENTS = Object.freeze([\n    exports.COMMAND_STARTED,\n    exports.COMMAND_SUCCEEDED,\n    exports.COMMAND_FAILED\n]);\n/**\n * All events that we relay to the `Topology`\n * @internal\n */\nexports.SERVER_RELAY_EVENTS = Object.freeze([\n    exports.SERVER_HEARTBEAT_STARTED,\n    exports.SERVER_HEARTBEAT_SUCCEEDED,\n    exports.SERVER_HEARTBEAT_FAILED,\n    exports.COMMAND_STARTED,\n    exports.COMMAND_SUCCEEDED,\n    exports.COMMAND_FAILED,\n    ...exports.CMAP_EVENTS\n]);\n/**\n * All events we listen to from `Server` instances, but do not forward to the client\n * @internal\n */\nexports.LOCAL_SERVER_EVENTS = Object.freeze([\n    exports.CONNECT,\n    exports.DESCRIPTION_RECEIVED,\n    exports.CLOSED,\n    exports.ENDED\n]);\n/** @public */\nexports.MONGO_CLIENT_EVENTS = Object.freeze([\n    ...exports.CMAP_EVENTS,\n    ...exports.APM_EVENTS,\n    ...exports.TOPOLOGY_EVENTS,\n    ...exports.HEARTBEAT_EVENTS\n]);\n/**\n * @internal\n * The legacy hello command that was deprecated in MongoDB 5.0.\n */\nexports.LEGACY_HELLO_COMMAND = 'ismaster';\n/**\n * @internal\n * The legacy hello command that was deprecated in MongoDB 5.0.\n */\nexports.LEGACY_HELLO_COMMAND_CAMEL_CASE = 'isMaster';\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertUninitialized = exports.next = exports.AbstractCursor = exports.CURSOR_FLAGS = void 0;\nconst stream_1 = require(\"stream\");\nconst util_1 = require(\"util\");\nconst bson_1 = require(\"../bson\");\nconst error_1 = require(\"../error\");\nconst mongo_types_1 = require(\"../mongo_types\");\nconst execute_operation_1 = require(\"../operations/execute_operation\");\nconst get_more_1 = require(\"../operations/get_more\");\nconst kill_cursors_1 = require(\"../operations/kill_cursors\");\nconst read_concern_1 = require(\"../read_concern\");\nconst read_preference_1 = require(\"../read_preference\");\nconst sessions_1 = require(\"../sessions\");\nconst utils_1 = require(\"../utils\");\n/** @internal */\nconst kId = Symbol('id');\n/** @internal */\nconst kDocuments = Symbol('documents');\n/** @internal */\nconst kServer = Symbol('server');\n/** @internal */\nconst kNamespace = Symbol('namespace');\n/** @internal */\nconst kClient = Symbol('client');\n/** @internal */\nconst kSession = Symbol('session');\n/** @internal */\nconst kOptions = Symbol('options');\n/** @internal */\nconst kTransform = Symbol('transform');\n/** @internal */\nconst kInitialized = Symbol('initialized');\n/** @internal */\nconst kClosed = Symbol('closed');\n/** @internal */\nconst kKilled = Symbol('killed');\n/** @internal */\nconst kInit = Symbol('kInit');\n/** @public */\nexports.CURSOR_FLAGS = [\n    'tailable',\n    'oplogReplay',\n    'noCursorTimeout',\n    'awaitData',\n    'exhaust',\n    'partial'\n];\n/** @public */\nclass AbstractCursor extends mongo_types_1.TypedEventEmitter {\n    /** @internal */\n    constructor(client, namespace, options = {}) {\n        super();\n        if (!client.s.isMongoClient) {\n            throw new error_1.MongoRuntimeError('Cursor must be constructed with MongoClient');\n        }\n        this[kClient] = client;\n        this[kNamespace] = namespace;\n        this[kId] = null;\n        this[kDocuments] = new utils_1.List();\n        this[kInitialized] = false;\n        this[kClosed] = false;\n        this[kKilled] = false;\n        this[kOptions] = {\n            readPreference: options.readPreference && options.readPreference instanceof read_preference_1.ReadPreference\n                ? options.readPreference\n                : read_preference_1.ReadPreference.primary,\n            ...(0, bson_1.pluckBSONSerializeOptions)(options)\n        };\n        const readConcern = read_concern_1.ReadConcern.fromOptions(options);\n        if (readConcern) {\n            this[kOptions].readConcern = readConcern;\n        }\n        if (typeof options.batchSize === 'number') {\n            this[kOptions].batchSize = options.batchSize;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (options.comment !== undefined) {\n            this[kOptions].comment = options.comment;\n        }\n        if (typeof options.maxTimeMS === 'number') {\n            this[kOptions].maxTimeMS = options.maxTimeMS;\n        }\n        if (typeof options.maxAwaitTimeMS === 'number') {\n            this[kOptions].maxAwaitTimeMS = options.maxAwaitTimeMS;\n        }\n        if (options.session instanceof sessions_1.ClientSession) {\n            this[kSession] = options.session;\n        }\n        else {\n            this[kSession] = this[kClient].startSession({ owner: this, explicit: false });\n        }\n    }\n    get id() {\n        return this[kId] ?? undefined;\n    }\n    /** @internal */\n    get client() {\n        return this[kClient];\n    }\n    /** @internal */\n    get server() {\n        return this[kServer];\n    }\n    get namespace() {\n        return this[kNamespace];\n    }\n    get readPreference() {\n        return this[kOptions].readPreference;\n    }\n    get readConcern() {\n        return this[kOptions].readConcern;\n    }\n    /** @internal */\n    get session() {\n        return this[kSession];\n    }\n    set session(clientSession) {\n        this[kSession] = clientSession;\n    }\n    /** @internal */\n    get cursorOptions() {\n        return this[kOptions];\n    }\n    get closed() {\n        return this[kClosed];\n    }\n    get killed() {\n        return this[kKilled];\n    }\n    get loadBalanced() {\n        return !!this[kClient].topology?.loadBalanced;\n    }\n    /** Returns current buffered documents length */\n    bufferedCount() {\n        return this[kDocuments].length;\n    }\n    /** Returns current buffered documents */\n    readBufferedDocuments(number) {\n        const bufferedDocs = [];\n        const documentsToRead = Math.min(number ?? this[kDocuments].length, this[kDocuments].length);\n        for (let count = 0; count < documentsToRead; count++) {\n            const document = this[kDocuments].shift();\n            if (document != null) {\n                bufferedDocs.push(document);\n            }\n        }\n        return bufferedDocs;\n    }\n    async *[Symbol.asyncIterator]() {\n        if (this.closed) {\n            return;\n        }\n        try {\n            while (true) {\n                const document = await this.next();\n                // Intentional strict null check, because users can map cursors to falsey values.\n                // We allow mapping to all values except for null.\n                // eslint-disable-next-line no-restricted-syntax\n                if (document === null) {\n                    if (!this.closed) {\n                        const message = 'Cursor returned a `null` document, but the cursor is not exhausted.  Mapping documents to `null` is not supported in the cursor transform.';\n                        await cleanupCursorAsync(this, { needsToEmitClosed: true }).catch(() => null);\n                        throw new error_1.MongoAPIError(message);\n                    }\n                    break;\n                }\n                yield document;\n                if (this[kId] === bson_1.Long.ZERO) {\n                    // Cursor exhausted\n                    break;\n                }\n            }\n        }\n        finally {\n            // Only close the cursor if it has not already been closed. This finally clause handles\n            // the case when a user would break out of a for await of loop early.\n            if (!this.closed) {\n                await this.close().catch(() => null);\n            }\n        }\n    }\n    stream(options) {\n        if (options?.transform) {\n            const transform = options.transform;\n            const readable = new ReadableCursorStream(this);\n            return readable.pipe(new stream_1.Transform({\n                objectMode: true,\n                highWaterMark: 1,\n                transform(chunk, _, callback) {\n                    try {\n                        const transformed = transform(chunk);\n                        callback(undefined, transformed);\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                }\n            }));\n        }\n        return new ReadableCursorStream(this);\n    }\n    async hasNext() {\n        if (this[kId] === bson_1.Long.ZERO) {\n            return false;\n        }\n        if (this[kDocuments].length !== 0) {\n            return true;\n        }\n        const doc = await nextAsync(this, true);\n        if (doc) {\n            this[kDocuments].unshift(doc);\n            return true;\n        }\n        return false;\n    }\n    /** Get the next available document from the cursor, returns null if no more documents are available. */\n    async next() {\n        if (this[kId] === bson_1.Long.ZERO) {\n            throw new error_1.MongoCursorExhaustedError();\n        }\n        return nextAsync(this, true);\n    }\n    /**\n     * Try to get the next available document from the cursor or `null` if an empty batch is returned\n     */\n    async tryNext() {\n        if (this[kId] === bson_1.Long.ZERO) {\n            throw new error_1.MongoCursorExhaustedError();\n        }\n        return nextAsync(this, false);\n    }\n    /**\n     * Iterates over all the documents for this cursor using the iterator, callback pattern.\n     *\n     * If the iterator returns `false`, iteration will stop.\n     *\n     * @param iterator - The iteration callback.\n     */\n    async forEach(iterator) {\n        if (typeof iterator !== 'function') {\n            throw new error_1.MongoInvalidArgumentError('Argument \"iterator\" must be a function');\n        }\n        for await (const document of this) {\n            const result = iterator(document);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n    async close() {\n        const needsToEmitClosed = !this[kClosed];\n        this[kClosed] = true;\n        await cleanupCursorAsync(this, { needsToEmitClosed });\n    }\n    /**\n     * Returns an array of documents. The caller is responsible for making sure that there\n     * is enough memory to store the results. Note that the array only contains partial\n     * results when this cursor had been previously accessed. In that case,\n     * cursor.rewind() can be used to reset the cursor.\n     */\n    async toArray() {\n        const array = [];\n        for await (const document of this) {\n            array.push(document);\n        }\n        return array;\n    }\n    /**\n     * Add a cursor flag to the cursor\n     *\n     * @param flag - The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial' -.\n     * @param value - The flag boolean value.\n     */\n    addCursorFlag(flag, value) {\n        assertUninitialized(this);\n        if (!exports.CURSOR_FLAGS.includes(flag)) {\n            throw new error_1.MongoInvalidArgumentError(`Flag ${flag} is not one of ${exports.CURSOR_FLAGS}`);\n        }\n        if (typeof value !== 'boolean') {\n            throw new error_1.MongoInvalidArgumentError(`Flag ${flag} must be a boolean value`);\n        }\n        this[kOptions][flag] = value;\n        return this;\n    }\n    /**\n     * Map all documents using the provided function\n     * If there is a transform set on the cursor, that will be called first and the result passed to\n     * this function's transform.\n     *\n     * @remarks\n     *\n     * **Note** Cursors use `null` internally to indicate that there are no more documents in the cursor. Providing a mapping\n     * function that maps values to `null` will result in the cursor closing itself before it has finished iterating\n     * all documents.  This will **not** result in a memory leak, just surprising behavior.  For example:\n     *\n     * ```typescript\n     * const cursor = collection.find({});\n     * cursor.map(() => null);\n     *\n     * const documents = await cursor.toArray();\n     * // documents is always [], regardless of how many documents are in the collection.\n     * ```\n     *\n     * Other falsey values are allowed:\n     *\n     * ```typescript\n     * const cursor = collection.find({});\n     * cursor.map(() => '');\n     *\n     * const documents = await cursor.toArray();\n     * // documents is now an array of empty strings\n     * ```\n     *\n     * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n     * it **does not** return a new instance of a cursor. This means when calling map,\n     * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n     * Take note of the following example:\n     *\n     * @example\n     * ```typescript\n     * const cursor: FindCursor<Document> = coll.find();\n     * const mappedCursor: FindCursor<number> = cursor.map(doc => Object.keys(doc).length);\n     * const keyCounts: number[] = await mappedCursor.toArray(); // cursor.toArray() still returns Document[]\n     * ```\n     * @param transform - The mapping transformation method.\n     */\n    map(transform) {\n        assertUninitialized(this);\n        const oldTransform = this[kTransform]; // TODO(NODE-3283): Improve transform typing\n        if (oldTransform) {\n            this[kTransform] = doc => {\n                return transform(oldTransform(doc));\n            };\n        }\n        else {\n            this[kTransform] = transform;\n        }\n        return this;\n    }\n    /**\n     * Set the ReadPreference for the cursor.\n     *\n     * @param readPreference - The new read preference for the cursor.\n     */\n    withReadPreference(readPreference) {\n        assertUninitialized(this);\n        if (readPreference instanceof read_preference_1.ReadPreference) {\n            this[kOptions].readPreference = readPreference;\n        }\n        else if (typeof readPreference === 'string') {\n            this[kOptions].readPreference = read_preference_1.ReadPreference.fromString(readPreference);\n        }\n        else {\n            throw new error_1.MongoInvalidArgumentError(`Invalid read preference: ${readPreference}`);\n        }\n        return this;\n    }\n    /**\n     * Set the ReadPreference for the cursor.\n     *\n     * @param readPreference - The new read preference for the cursor.\n     */\n    withReadConcern(readConcern) {\n        assertUninitialized(this);\n        const resolvedReadConcern = read_concern_1.ReadConcern.fromOptions({ readConcern });\n        if (resolvedReadConcern) {\n            this[kOptions].readConcern = resolvedReadConcern;\n        }\n        return this;\n    }\n    /**\n     * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n     *\n     * @param value - Number of milliseconds to wait before aborting the query.\n     */\n    maxTimeMS(value) {\n        assertUninitialized(this);\n        if (typeof value !== 'number') {\n            throw new error_1.MongoInvalidArgumentError('Argument for maxTimeMS must be a number');\n        }\n        this[kOptions].maxTimeMS = value;\n        return this;\n    }\n    /**\n     * Set the batch size for the cursor.\n     *\n     * @param value - The number of documents to return per batch. See {@link https://www.mongodb.com/docs/manual/reference/command/find/|find command documentation}.\n     */\n    batchSize(value) {\n        assertUninitialized(this);\n        if (this[kOptions].tailable) {\n            throw new error_1.MongoTailableCursorError('Tailable cursor does not support batchSize');\n        }\n        if (typeof value !== 'number') {\n            throw new error_1.MongoInvalidArgumentError('Operation \"batchSize\" requires an integer');\n        }\n        this[kOptions].batchSize = value;\n        return this;\n    }\n    /**\n     * Rewind this cursor to its uninitialized state. Any options that are present on the cursor will\n     * remain in effect. Iterating this cursor will cause new queries to be sent to the server, even\n     * if the resultant data has already been retrieved by this cursor.\n     */\n    rewind() {\n        if (!this[kInitialized]) {\n            return;\n        }\n        this[kId] = null;\n        this[kDocuments].clear();\n        this[kClosed] = false;\n        this[kKilled] = false;\n        this[kInitialized] = false;\n        const session = this[kSession];\n        if (session) {\n            // We only want to end this session if we created it, and it hasn't ended yet\n            if (session.explicit === false) {\n                if (!session.hasEnded) {\n                    session.endSession().catch(() => null);\n                }\n                this[kSession] = this.client.startSession({ owner: this, explicit: false });\n            }\n        }\n    }\n    /** @internal */\n    _getMore(batchSize, callback) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const getMoreOperation = new get_more_1.GetMoreOperation(this[kNamespace], this[kId], this[kServer], {\n            ...this[kOptions],\n            session: this[kSession],\n            batchSize\n        });\n        (0, execute_operation_1.executeOperation)(this[kClient], getMoreOperation, callback);\n    }\n    /**\n     * @internal\n     *\n     * This function is exposed for the unified test runner's createChangeStream\n     * operation.  We cannot refactor to use the abstract _initialize method without\n     * a significant refactor.\n     */\n    [kInit](callback) {\n        this._initialize(this[kSession], (error, state) => {\n            if (state) {\n                const response = state.response;\n                this[kServer] = state.server;\n                if (response.cursor) {\n                    // TODO(NODE-2674): Preserve int64 sent from MongoDB\n                    this[kId] =\n                        typeof response.cursor.id === 'number'\n                            ? bson_1.Long.fromNumber(response.cursor.id)\n                            : typeof response.cursor.id === 'bigint'\n                                ? bson_1.Long.fromBigInt(response.cursor.id)\n                                : response.cursor.id;\n                    if (response.cursor.ns) {\n                        this[kNamespace] = (0, utils_1.ns)(response.cursor.ns);\n                    }\n                    this[kDocuments].pushMany(response.cursor.firstBatch);\n                }\n                // When server responses return without a cursor document, we close this cursor\n                // and return the raw server response. This is often the case for explain commands\n                // for example\n                if (this[kId] == null) {\n                    this[kId] = bson_1.Long.ZERO;\n                    // TODO(NODE-3286): ExecutionResult needs to accept a generic parameter\n                    this[kDocuments].push(state.response);\n                }\n            }\n            // the cursor is now initialized, even if an error occurred or it is dead\n            this[kInitialized] = true;\n            if (error) {\n                return cleanupCursor(this, { error }, () => callback(error, undefined));\n            }\n            if (cursorIsDead(this)) {\n                return cleanupCursor(this, undefined, () => callback());\n            }\n            callback();\n        });\n    }\n}\nexports.AbstractCursor = AbstractCursor;\n/** @event */\nAbstractCursor.CLOSE = 'close';\nfunction nextDocument(cursor) {\n    const doc = cursor[kDocuments].shift();\n    if (doc && cursor[kTransform]) {\n        return cursor[kTransform](doc);\n    }\n    return doc;\n}\nconst nextAsync = (0, util_1.promisify)(next);\n/**\n * @param cursor - the cursor on which to call `next`\n * @param blocking - a boolean indicating whether or not the cursor should `block` until data\n *     is available.  Generally, this flag is set to `false` because if the getMore returns no documents,\n *     the cursor has been exhausted.  In certain scenarios (ChangeStreams, tailable await cursors and\n *     `tryNext`, for example) blocking is necessary because a getMore returning no documents does\n *     not indicate the end of the cursor.\n * @param callback - callback to return the result to the caller\n * @returns\n */\nfunction next(cursor, blocking, callback) {\n    const cursorId = cursor[kId];\n    if (cursor.closed) {\n        return callback(undefined, null);\n    }\n    if (cursor[kDocuments].length !== 0) {\n        callback(undefined, nextDocument(cursor));\n        return;\n    }\n    if (cursorId == null) {\n        // All cursors must operate within a session, one must be made implicitly if not explicitly provided\n        cursor[kInit](err => {\n            if (err)\n                return callback(err);\n            return next(cursor, blocking, callback);\n        });\n        return;\n    }\n    if (cursorIsDead(cursor)) {\n        return cleanupCursor(cursor, undefined, () => callback(undefined, null));\n    }\n    // otherwise need to call getMore\n    const batchSize = cursor[kOptions].batchSize || 1000;\n    cursor._getMore(batchSize, (error, response) => {\n        if (response) {\n            const cursorId = typeof response.cursor.id === 'number'\n                ? bson_1.Long.fromNumber(response.cursor.id)\n                : typeof response.cursor.id === 'bigint'\n                    ? bson_1.Long.fromBigInt(response.cursor.id)\n                    : response.cursor.id;\n            cursor[kDocuments].pushMany(response.cursor.nextBatch);\n            cursor[kId] = cursorId;\n        }\n        if (error || cursorIsDead(cursor)) {\n            return cleanupCursor(cursor, { error }, () => callback(error, nextDocument(cursor)));\n        }\n        if (cursor[kDocuments].length === 0 && blocking === false) {\n            return callback(undefined, null);\n        }\n        next(cursor, blocking, callback);\n    });\n}\nexports.next = next;\nfunction cursorIsDead(cursor) {\n    const cursorId = cursor[kId];\n    return !!cursorId && cursorId.isZero();\n}\nconst cleanupCursorAsync = (0, util_1.promisify)(cleanupCursor);\nfunction cleanupCursor(cursor, options, callback) {\n    const cursorId = cursor[kId];\n    const cursorNs = cursor[kNamespace];\n    const server = cursor[kServer];\n    const session = cursor[kSession];\n    const error = options?.error;\n    const needsToEmitClosed = options?.needsToEmitClosed ?? cursor[kDocuments].length === 0;\n    if (error) {\n        if (cursor.loadBalanced && error instanceof error_1.MongoNetworkError) {\n            return completeCleanup();\n        }\n    }\n    if (cursorId == null || server == null || cursorId.isZero() || cursorNs == null) {\n        if (needsToEmitClosed) {\n            cursor[kClosed] = true;\n            cursor[kId] = bson_1.Long.ZERO;\n            cursor.emit(AbstractCursor.CLOSE);\n        }\n        if (session) {\n            if (session.owner === cursor) {\n                session.endSession({ error }).finally(() => {\n                    callback();\n                });\n                return;\n            }\n            if (!session.inTransaction()) {\n                (0, sessions_1.maybeClearPinnedConnection)(session, { error });\n            }\n        }\n        return callback();\n    }\n    function completeCleanup() {\n        if (session) {\n            if (session.owner === cursor) {\n                session.endSession({ error }).finally(() => {\n                    cursor.emit(AbstractCursor.CLOSE);\n                    callback();\n                });\n                return;\n            }\n            if (!session.inTransaction()) {\n                (0, sessions_1.maybeClearPinnedConnection)(session, { error });\n            }\n        }\n        cursor.emit(AbstractCursor.CLOSE);\n        return callback();\n    }\n    cursor[kKilled] = true;\n    if (session.hasEnded) {\n        return completeCleanup();\n    }\n    (0, execute_operation_1.executeOperation)(cursor[kClient], new kill_cursors_1.KillCursorsOperation(cursorId, cursorNs, server, { session }))\n        .catch(() => null)\n        .finally(completeCleanup);\n}\n/** @internal */\nfunction assertUninitialized(cursor) {\n    if (cursor[kInitialized]) {\n        throw new error_1.MongoCursorInUseError();\n    }\n}\nexports.assertUninitialized = assertUninitialized;\nclass ReadableCursorStream extends stream_1.Readable {\n    constructor(cursor) {\n        super({\n            objectMode: true,\n            autoDestroy: false,\n            highWaterMark: 1\n        });\n        this._readInProgress = false;\n        this._cursor = cursor;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _read(size) {\n        if (!this._readInProgress) {\n            this._readInProgress = true;\n            this._readNext();\n        }\n    }\n    _destroy(error, callback) {\n        this._cursor.close().then(() => callback(error), closeError => callback(closeError));\n    }\n    _readNext() {\n        next(this._cursor, true, (err, result) => {\n            if (err) {\n                // NOTE: This is questionable, but we have a test backing the behavior. It seems the\n                //       desired behavior is that a stream ends cleanly when a user explicitly closes\n                //       a client during iteration. Alternatively, we could do the \"right\" thing and\n                //       propagate the error message by removing this special case.\n                if (err.message.match(/server is closed/)) {\n                    this._cursor.close().catch(() => null);\n                    return this.push(null);\n                }\n                // NOTE: This is also perhaps questionable. The rationale here is that these errors tend\n                //       to be \"operation was interrupted\", where a cursor has been closed but there is an\n                //       active getMore in-flight. This used to check if the cursor was killed but once\n                //       that changed to happen in cleanup legitimate errors would not destroy the\n                //       stream. There are change streams test specifically test these cases.\n                if (err.message.match(/operation was interrupted/)) {\n                    return this.push(null);\n                }\n                // NOTE: The two above checks on the message of the error will cause a null to be pushed\n                //       to the stream, thus closing the stream before the destroy call happens. This means\n                //       that either of those error messages on a change stream will not get a proper\n                //       'error' event to be emitted (the error passed to destroy). Change stream resumability\n                //       relies on that error event to be emitted to create its new cursor and thus was not\n                //       working on 4.4 servers because the error emitted on failover was \"interrupted at\n                //       shutdown\" while on 5.0+ it is \"The server is in quiesce mode and will shut down\".\n                //       See NODE-4475.\n                return this.destroy(err);\n            }\n            if (result == null) {\n                this.push(null);\n            }\n            else if (this.destroyed) {\n                this._cursor.close().catch(() => null);\n            }\n            else {\n                if (this.push(result)) {\n                    return this._readNext();\n                }\n                this._readInProgress = false;\n            }\n        });\n    }\n}\n//# sourceMappingURL=abstract_cursor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AggregationCursor = void 0;\nconst aggregate_1 = require(\"../operations/aggregate\");\nconst execute_operation_1 = require(\"../operations/execute_operation\");\nconst utils_1 = require(\"../utils\");\nconst abstract_cursor_1 = require(\"./abstract_cursor\");\n/** @internal */\nconst kPipeline = Symbol('pipeline');\n/** @internal */\nconst kOptions = Symbol('options');\n/**\n * The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n * @public\n */\nclass AggregationCursor extends abstract_cursor_1.AbstractCursor {\n    /** @internal */\n    constructor(client, namespace, pipeline = [], options = {}) {\n        super(client, namespace, options);\n        this[kPipeline] = pipeline;\n        this[kOptions] = options;\n    }\n    get pipeline() {\n        return this[kPipeline];\n    }\n    clone() {\n        const clonedOptions = (0, utils_1.mergeOptions)({}, this[kOptions]);\n        delete clonedOptions.session;\n        return new AggregationCursor(this.client, this.namespace, this[kPipeline], {\n            ...clonedOptions\n        });\n    }\n    map(transform) {\n        return super.map(transform);\n    }\n    /** @internal */\n    _initialize(session, callback) {\n        const aggregateOperation = new aggregate_1.AggregateOperation(this.namespace, this[kPipeline], {\n            ...this[kOptions],\n            ...this.cursorOptions,\n            session\n        });\n        (0, execute_operation_1.executeOperation)(this.client, aggregateOperation, (err, response) => {\n            if (err || response == null)\n                return callback(err);\n            // TODO: NODE-2882\n            callback(undefined, { server: aggregateOperation.server, session, response });\n        });\n    }\n    /** Execute the explain for the cursor */\n    async explain(verbosity) {\n        return (0, execute_operation_1.executeOperation)(this.client, new aggregate_1.AggregateOperation(this.namespace, this[kPipeline], {\n            ...this[kOptions],\n            ...this.cursorOptions,\n            explain: verbosity ?? true\n        }));\n    }\n    group($group) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $group });\n        return this;\n    }\n    /** Add a limit stage to the aggregation pipeline */\n    limit($limit) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $limit });\n        return this;\n    }\n    /** Add a match stage to the aggregation pipeline */\n    match($match) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $match });\n        return this;\n    }\n    /** Add an out stage to the aggregation pipeline */\n    out($out) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $out });\n        return this;\n    }\n    /**\n     * Add a project stage to the aggregation pipeline\n     *\n     * @remarks\n     * In order to strictly type this function you must provide an interface\n     * that represents the effect of your projection on the result documents.\n     *\n     * By default chaining a projection to your cursor changes the returned type to the generic {@link Document} type.\n     * You should specify a parameterized type to have assertions on your final results.\n     *\n     * @example\n     * ```typescript\n     * // Best way\n     * const docs: AggregationCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n     * // Flexible way\n     * const docs: AggregationCursor<Document> = cursor.project({ _id: 0, a: true });\n     * ```\n     *\n     * @remarks\n     * In order to strictly type this function you must provide an interface\n     * that represents the effect of your projection on the result documents.\n     *\n     * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n     * it **does not** return a new instance of a cursor. This means when calling project,\n     * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n     * Take note of the following example:\n     *\n     * @example\n     * ```typescript\n     * const cursor: AggregationCursor<{ a: number; b: string }> = coll.aggregate([]);\n     * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n     * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n     *\n     * // or always use chaining and save the final cursor\n     *\n     * const cursor = coll.aggregate().project<{ a: string }>({\n     *   _id: 0,\n     *   a: { $convert: { input: '$a', to: 'string' }\n     * }});\n     * ```\n     */\n    project($project) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $project });\n        return this;\n    }\n    /** Add a lookup stage to the aggregation pipeline */\n    lookup($lookup) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $lookup });\n        return this;\n    }\n    /** Add a redact stage to the aggregation pipeline */\n    redact($redact) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $redact });\n        return this;\n    }\n    /** Add a skip stage to the aggregation pipeline */\n    skip($skip) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $skip });\n        return this;\n    }\n    /** Add a sort stage to the aggregation pipeline */\n    sort($sort) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $sort });\n        return this;\n    }\n    /** Add a unwind stage to the aggregation pipeline */\n    unwind($unwind) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $unwind });\n        return this;\n    }\n    /** Add a geoNear stage to the aggregation pipeline */\n    geoNear($geoNear) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kPipeline].push({ $geoNear });\n        return this;\n    }\n}\nexports.AggregationCursor = AggregationCursor;\n//# sourceMappingURL=aggregation_cursor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChangeStreamCursor = void 0;\nconst change_stream_1 = require(\"../change_stream\");\nconst constants_1 = require(\"../constants\");\nconst aggregate_1 = require(\"../operations/aggregate\");\nconst execute_operation_1 = require(\"../operations/execute_operation\");\nconst utils_1 = require(\"../utils\");\nconst abstract_cursor_1 = require(\"./abstract_cursor\");\n/** @internal */\nclass ChangeStreamCursor extends abstract_cursor_1.AbstractCursor {\n    constructor(client, namespace, pipeline = [], options = {}) {\n        super(client, namespace, options);\n        this.pipeline = pipeline;\n        this.options = options;\n        this._resumeToken = null;\n        this.startAtOperationTime = options.startAtOperationTime;\n        if (options.startAfter) {\n            this.resumeToken = options.startAfter;\n        }\n        else if (options.resumeAfter) {\n            this.resumeToken = options.resumeAfter;\n        }\n    }\n    set resumeToken(token) {\n        this._resumeToken = token;\n        this.emit(change_stream_1.ChangeStream.RESUME_TOKEN_CHANGED, token);\n    }\n    get resumeToken() {\n        return this._resumeToken;\n    }\n    get resumeOptions() {\n        const options = {\n            ...this.options\n        };\n        for (const key of ['resumeAfter', 'startAfter', 'startAtOperationTime']) {\n            delete options[key];\n        }\n        if (this.resumeToken != null) {\n            if (this.options.startAfter && !this.hasReceived) {\n                options.startAfter = this.resumeToken;\n            }\n            else {\n                options.resumeAfter = this.resumeToken;\n            }\n        }\n        else if (this.startAtOperationTime != null && (0, utils_1.maxWireVersion)(this.server) >= 7) {\n            options.startAtOperationTime = this.startAtOperationTime;\n        }\n        return options;\n    }\n    cacheResumeToken(resumeToken) {\n        if (this.bufferedCount() === 0 && this.postBatchResumeToken) {\n            this.resumeToken = this.postBatchResumeToken;\n        }\n        else {\n            this.resumeToken = resumeToken;\n        }\n        this.hasReceived = true;\n    }\n    _processBatch(response) {\n        const cursor = response.cursor;\n        if (cursor.postBatchResumeToken) {\n            this.postBatchResumeToken = response.cursor.postBatchResumeToken;\n            const batch = 'firstBatch' in response.cursor ? response.cursor.firstBatch : response.cursor.nextBatch;\n            if (batch.length === 0) {\n                this.resumeToken = cursor.postBatchResumeToken;\n            }\n        }\n    }\n    clone() {\n        return new ChangeStreamCursor(this.client, this.namespace, this.pipeline, {\n            ...this.cursorOptions\n        });\n    }\n    _initialize(session, callback) {\n        const aggregateOperation = new aggregate_1.AggregateOperation(this.namespace, this.pipeline, {\n            ...this.cursorOptions,\n            ...this.options,\n            session\n        });\n        (0, execute_operation_1.executeOperation)(session.client, aggregateOperation, (err, response) => {\n            if (err || response == null) {\n                return callback(err);\n            }\n            const server = aggregateOperation.server;\n            this.maxWireVersion = (0, utils_1.maxWireVersion)(server);\n            if (this.startAtOperationTime == null &&\n                this.resumeAfter == null &&\n                this.startAfter == null &&\n                this.maxWireVersion >= 7) {\n                this.startAtOperationTime = response.operationTime;\n            }\n            this._processBatch(response);\n            this.emit(constants_1.INIT, response);\n            this.emit(constants_1.RESPONSE);\n            // TODO: NODE-2882\n            callback(undefined, { server, session, response });\n        });\n    }\n    _getMore(batchSize, callback) {\n        super._getMore(batchSize, (err, response) => {\n            if (err) {\n                return callback(err);\n            }\n            this.maxWireVersion = (0, utils_1.maxWireVersion)(this.server);\n            this._processBatch(response);\n            this.emit(change_stream_1.ChangeStream.MORE, response);\n            this.emit(change_stream_1.ChangeStream.RESPONSE);\n            callback(err, response);\n        });\n    }\n}\nexports.ChangeStreamCursor = ChangeStreamCursor;\n//# sourceMappingURL=change_stream_cursor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FindCursor = exports.FLAGS = void 0;\nconst error_1 = require(\"../error\");\nconst count_1 = require(\"../operations/count\");\nconst execute_operation_1 = require(\"../operations/execute_operation\");\nconst find_1 = require(\"../operations/find\");\nconst sort_1 = require(\"../sort\");\nconst utils_1 = require(\"../utils\");\nconst abstract_cursor_1 = require(\"./abstract_cursor\");\n/** @internal */\nconst kFilter = Symbol('filter');\n/** @internal */\nconst kNumReturned = Symbol('numReturned');\n/** @internal */\nconst kBuiltOptions = Symbol('builtOptions');\n/** @public Flags allowed for cursor */\nexports.FLAGS = [\n    'tailable',\n    'oplogReplay',\n    'noCursorTimeout',\n    'awaitData',\n    'exhaust',\n    'partial'\n];\n/** @public */\nclass FindCursor extends abstract_cursor_1.AbstractCursor {\n    /** @internal */\n    constructor(client, namespace, filter = {}, options = {}) {\n        super(client, namespace, options);\n        this[kFilter] = filter;\n        this[kBuiltOptions] = options;\n        if (options.sort != null) {\n            this[kBuiltOptions].sort = (0, sort_1.formatSort)(options.sort);\n        }\n    }\n    clone() {\n        const clonedOptions = (0, utils_1.mergeOptions)({}, this[kBuiltOptions]);\n        delete clonedOptions.session;\n        return new FindCursor(this.client, this.namespace, this[kFilter], {\n            ...clonedOptions\n        });\n    }\n    map(transform) {\n        return super.map(transform);\n    }\n    /** @internal */\n    _initialize(session, callback) {\n        const findOperation = new find_1.FindOperation(undefined, this.namespace, this[kFilter], {\n            ...this[kBuiltOptions],\n            ...this.cursorOptions,\n            session\n        });\n        (0, execute_operation_1.executeOperation)(this.client, findOperation, (err, response) => {\n            if (err || response == null)\n                return callback(err);\n            // TODO: We only need this for legacy queries that do not support `limit`, maybe\n            //       the value should only be saved in those cases.\n            if (response.cursor) {\n                this[kNumReturned] = response.cursor.firstBatch.length;\n            }\n            else {\n                this[kNumReturned] = response.documents ? response.documents.length : 0;\n            }\n            // TODO: NODE-2882\n            callback(undefined, { server: findOperation.server, session, response });\n        });\n    }\n    /** @internal */\n    _getMore(batchSize, callback) {\n        // NOTE: this is to support client provided limits in pre-command servers\n        const numReturned = this[kNumReturned];\n        if (numReturned) {\n            const limit = this[kBuiltOptions].limit;\n            batchSize =\n                limit && limit > 0 && numReturned + batchSize > limit ? limit - numReturned : batchSize;\n            if (batchSize <= 0) {\n                this.close().finally(() => callback());\n                return;\n            }\n        }\n        super._getMore(batchSize, (err, response) => {\n            if (err)\n                return callback(err);\n            // TODO: wrap this in some logic to prevent it from happening if we don't need this support\n            if (response) {\n                this[kNumReturned] = this[kNumReturned] + response.cursor.nextBatch.length;\n            }\n            callback(undefined, response);\n        });\n    }\n    /**\n     * Get the count of documents for this cursor\n     * @deprecated Use `collection.estimatedDocumentCount` or `collection.countDocuments` instead\n     */\n    async count(options) {\n        (0, utils_1.emitWarningOnce)('cursor.count is deprecated and will be removed in the next major version, please use `collection.estimatedDocumentCount` or `collection.countDocuments` instead ');\n        if (typeof options === 'boolean') {\n            throw new error_1.MongoInvalidArgumentError('Invalid first parameter to count');\n        }\n        return (0, execute_operation_1.executeOperation)(this.client, new count_1.CountOperation(this.namespace, this[kFilter], {\n            ...this[kBuiltOptions],\n            ...this.cursorOptions,\n            ...options\n        }));\n    }\n    /** Execute the explain for the cursor */\n    async explain(verbosity) {\n        return (0, execute_operation_1.executeOperation)(this.client, new find_1.FindOperation(undefined, this.namespace, this[kFilter], {\n            ...this[kBuiltOptions],\n            ...this.cursorOptions,\n            explain: verbosity ?? true\n        }));\n    }\n    /** Set the cursor query */\n    filter(filter) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kFilter] = filter;\n        return this;\n    }\n    /**\n     * Set the cursor hint\n     *\n     * @param hint - If specified, then the query system will only consider plans using the hinted index.\n     */\n    hint(hint) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kBuiltOptions].hint = hint;\n        return this;\n    }\n    /**\n     * Set the cursor min\n     *\n     * @param min - Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n     */\n    min(min) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kBuiltOptions].min = min;\n        return this;\n    }\n    /**\n     * Set the cursor max\n     *\n     * @param max - Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n     */\n    max(max) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kBuiltOptions].max = max;\n        return this;\n    }\n    /**\n     * Set the cursor returnKey.\n     * If set to true, modifies the cursor to only return the index field or fields for the results of the query, rather than documents.\n     * If set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields.\n     *\n     * @param value - the returnKey value.\n     */\n    returnKey(value) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kBuiltOptions].returnKey = value;\n        return this;\n    }\n    /**\n     * Modifies the output of a query by adding a field $recordId to matching documents. $recordId is the internal key which uniquely identifies a document in a collection.\n     *\n     * @param value - The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n     */\n    showRecordId(value) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kBuiltOptions].showRecordId = value;\n        return this;\n    }\n    /**\n     * Add a query modifier to the cursor query\n     *\n     * @param name - The query modifier (must start with $, such as $orderby etc)\n     * @param value - The modifier value.\n     */\n    addQueryModifier(name, value) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        if (name[0] !== '$') {\n            throw new error_1.MongoInvalidArgumentError(`${name} is not a valid query modifier`);\n        }\n        // Strip of the $\n        const field = name.substr(1);\n        // NOTE: consider some TS magic for this\n        switch (field) {\n            case 'comment':\n                this[kBuiltOptions].comment = value;\n                break;\n            case 'explain':\n                this[kBuiltOptions].explain = value;\n                break;\n            case 'hint':\n                this[kBuiltOptions].hint = value;\n                break;\n            case 'max':\n                this[kBuiltOptions].max = value;\n                break;\n            case 'maxTimeMS':\n                this[kBuiltOptions].maxTimeMS = value;\n                break;\n            case 'min':\n                this[kBuiltOptions].min = value;\n                break;\n            case 'orderby':\n                this[kBuiltOptions].sort = (0, sort_1.formatSort)(value);\n                break;\n            case 'query':\n                this[kFilter] = value;\n                break;\n            case 'returnKey':\n                this[kBuiltOptions].returnKey = value;\n                break;\n            case 'showDiskLoc':\n                this[kBuiltOptions].showRecordId = value;\n                break;\n            default:\n                throw new error_1.MongoInvalidArgumentError(`Invalid query modifier: ${name}`);\n        }\n        return this;\n    }\n    /**\n     * Add a comment to the cursor query allowing for tracking the comment in the log.\n     *\n     * @param value - The comment attached to this query.\n     */\n    comment(value) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kBuiltOptions].comment = value;\n        return this;\n    }\n    /**\n     * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)\n     *\n     * @param value - Number of milliseconds to wait before aborting the tailed query.\n     */\n    maxAwaitTimeMS(value) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        if (typeof value !== 'number') {\n            throw new error_1.MongoInvalidArgumentError('Argument for maxAwaitTimeMS must be a number');\n        }\n        this[kBuiltOptions].maxAwaitTimeMS = value;\n        return this;\n    }\n    /**\n     * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n     *\n     * @param value - Number of milliseconds to wait before aborting the query.\n     */\n    maxTimeMS(value) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        if (typeof value !== 'number') {\n            throw new error_1.MongoInvalidArgumentError('Argument for maxTimeMS must be a number');\n        }\n        this[kBuiltOptions].maxTimeMS = value;\n        return this;\n    }\n    /**\n     * Add a project stage to the aggregation pipeline\n     *\n     * @remarks\n     * In order to strictly type this function you must provide an interface\n     * that represents the effect of your projection on the result documents.\n     *\n     * By default chaining a projection to your cursor changes the returned type to the generic\n     * {@link Document} type.\n     * You should specify a parameterized type to have assertions on your final results.\n     *\n     * @example\n     * ```typescript\n     * // Best way\n     * const docs: FindCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n     * // Flexible way\n     * const docs: FindCursor<Document> = cursor.project({ _id: 0, a: true });\n     * ```\n     *\n     * @remarks\n     *\n     * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n     * it **does not** return a new instance of a cursor. This means when calling project,\n     * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n     * Take note of the following example:\n     *\n     * @example\n     * ```typescript\n     * const cursor: FindCursor<{ a: number; b: string }> = coll.find();\n     * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n     * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n     *\n     * // or always use chaining and save the final cursor\n     *\n     * const cursor = coll.find().project<{ a: string }>({\n     *   _id: 0,\n     *   a: { $convert: { input: '$a', to: 'string' }\n     * }});\n     * ```\n     */\n    project(value) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kBuiltOptions].projection = value;\n        return this;\n    }\n    /**\n     * Sets the sort order of the cursor query.\n     *\n     * @param sort - The key or keys set for the sort.\n     * @param direction - The direction of the sorting (1 or -1).\n     */\n    sort(sort, direction) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        if (this[kBuiltOptions].tailable) {\n            throw new error_1.MongoTailableCursorError('Tailable cursor does not support sorting');\n        }\n        this[kBuiltOptions].sort = (0, sort_1.formatSort)(sort, direction);\n        return this;\n    }\n    /**\n     * Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher)\n     *\n     * @remarks\n     * {@link https://www.mongodb.com/docs/manual/reference/command/find/#find-cmd-allowdiskuse | find command allowDiskUse documentation}\n     */\n    allowDiskUse(allow = true) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        if (!this[kBuiltOptions].sort) {\n            throw new error_1.MongoInvalidArgumentError('Option \"allowDiskUse\" requires a sort specification');\n        }\n        // As of 6.0 the default is true. This allows users to get back to the old behavior.\n        if (!allow) {\n            this[kBuiltOptions].allowDiskUse = false;\n            return this;\n        }\n        this[kBuiltOptions].allowDiskUse = true;\n        return this;\n    }\n    /**\n     * Set the collation options for the cursor.\n     *\n     * @param value - The cursor collation options (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n     */\n    collation(value) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        this[kBuiltOptions].collation = value;\n        return this;\n    }\n    /**\n     * Set the limit for the cursor.\n     *\n     * @param value - The limit for the cursor query.\n     */\n    limit(value) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        if (this[kBuiltOptions].tailable) {\n            throw new error_1.MongoTailableCursorError('Tailable cursor does not support limit');\n        }\n        if (typeof value !== 'number') {\n            throw new error_1.MongoInvalidArgumentError('Operation \"limit\" requires an integer');\n        }\n        this[kBuiltOptions].limit = value;\n        return this;\n    }\n    /**\n     * Set the skip for the cursor.\n     *\n     * @param value - The skip for the cursor query.\n     */\n    skip(value) {\n        (0, abstract_cursor_1.assertUninitialized)(this);\n        if (this[kBuiltOptions].tailable) {\n            throw new error_1.MongoTailableCursorError('Tailable cursor does not support skip');\n        }\n        if (typeof value !== 'number') {\n            throw new error_1.MongoInvalidArgumentError('Operation \"skip\" requires an integer');\n        }\n        this[kBuiltOptions].skip = value;\n        return this;\n    }\n}\nexports.FindCursor = FindCursor;\n//# sourceMappingURL=find_cursor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCollectionsCursor = void 0;\nconst execute_operation_1 = require(\"../operations/execute_operation\");\nconst list_collections_1 = require(\"../operations/list_collections\");\nconst abstract_cursor_1 = require(\"./abstract_cursor\");\n/** @public */\nclass ListCollectionsCursor extends abstract_cursor_1.AbstractCursor {\n    constructor(db, filter, options) {\n        super(db.s.client, db.s.namespace, options);\n        this.parent = db;\n        this.filter = filter;\n        this.options = options;\n    }\n    clone() {\n        return new ListCollectionsCursor(this.parent, this.filter, {\n            ...this.options,\n            ...this.cursorOptions\n        });\n    }\n    /** @internal */\n    _initialize(session, callback) {\n        const operation = new list_collections_1.ListCollectionsOperation(this.parent, this.filter, {\n            ...this.cursorOptions,\n            ...this.options,\n            session\n        });\n        (0, execute_operation_1.executeOperation)(this.parent.s.client, operation, (err, response) => {\n            if (err || response == null)\n                return callback(err);\n            // TODO: NODE-2882\n            callback(undefined, { server: operation.server, session, response });\n        });\n    }\n}\nexports.ListCollectionsCursor = ListCollectionsCursor;\n//# sourceMappingURL=list_collections_cursor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListIndexesCursor = void 0;\nconst execute_operation_1 = require(\"../operations/execute_operation\");\nconst indexes_1 = require(\"../operations/indexes\");\nconst abstract_cursor_1 = require(\"./abstract_cursor\");\n/** @public */\nclass ListIndexesCursor extends abstract_cursor_1.AbstractCursor {\n    constructor(collection, options) {\n        super(collection.s.db.s.client, collection.s.namespace, options);\n        this.parent = collection;\n        this.options = options;\n    }\n    clone() {\n        return new ListIndexesCursor(this.parent, {\n            ...this.options,\n            ...this.cursorOptions\n        });\n    }\n    /** @internal */\n    _initialize(session, callback) {\n        const operation = new indexes_1.ListIndexesOperation(this.parent, {\n            ...this.cursorOptions,\n            ...this.options,\n            session\n        });\n        (0, execute_operation_1.executeOperation)(this.parent.s.db.s.client, operation, (err, response) => {\n            if (err || response == null)\n                return callback(err);\n            // TODO: NODE-2882\n            callback(undefined, { server: operation.server, session, response });\n        });\n    }\n}\nexports.ListIndexesCursor = ListIndexesCursor;\n//# sourceMappingURL=list_indexes_cursor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Db = void 0;\nconst admin_1 = require(\"./admin\");\nconst bson_1 = require(\"./bson\");\nconst change_stream_1 = require(\"./change_stream\");\nconst collection_1 = require(\"./collection\");\nconst CONSTANTS = require(\"./constants\");\nconst aggregation_cursor_1 = require(\"./cursor/aggregation_cursor\");\nconst list_collections_cursor_1 = require(\"./cursor/list_collections_cursor\");\nconst error_1 = require(\"./error\");\nconst add_user_1 = require(\"./operations/add_user\");\nconst collections_1 = require(\"./operations/collections\");\nconst create_collection_1 = require(\"./operations/create_collection\");\nconst drop_1 = require(\"./operations/drop\");\nconst execute_operation_1 = require(\"./operations/execute_operation\");\nconst indexes_1 = require(\"./operations/indexes\");\nconst profiling_level_1 = require(\"./operations/profiling_level\");\nconst remove_user_1 = require(\"./operations/remove_user\");\nconst rename_1 = require(\"./operations/rename\");\nconst run_command_1 = require(\"./operations/run_command\");\nconst set_profiling_level_1 = require(\"./operations/set_profiling_level\");\nconst stats_1 = require(\"./operations/stats\");\nconst read_concern_1 = require(\"./read_concern\");\nconst read_preference_1 = require(\"./read_preference\");\nconst utils_1 = require(\"./utils\");\nconst write_concern_1 = require(\"./write_concern\");\n// Allowed parameters\nconst DB_OPTIONS_ALLOW_LIST = [\n    'writeConcern',\n    'readPreference',\n    'readPreferenceTags',\n    'native_parser',\n    'forceServerObjectId',\n    'pkFactory',\n    'serializeFunctions',\n    'raw',\n    'authSource',\n    'ignoreUndefined',\n    'readConcern',\n    'retryMiliSeconds',\n    'numberOfRetries',\n    'useBigInt64',\n    'promoteBuffers',\n    'promoteLongs',\n    'bsonRegExp',\n    'enableUtf8Validation',\n    'promoteValues',\n    'compression',\n    'retryWrites'\n];\n/**\n * The **Db** class is a class that represents a MongoDB Database.\n * @public\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * interface Pet {\n *   name: string;\n *   kind: 'dog' | 'cat' | 'fish';\n * }\n *\n * const client = new MongoClient('mongodb://localhost:27017');\n * const db = client.db();\n *\n * // Create a collection that validates our union\n * await db.createCollection<Pet>('pets', {\n *   validator: { $expr: { $in: ['$kind', ['dog', 'cat', 'fish']] } }\n * })\n * ```\n */\nclass Db {\n    /**\n     * Creates a new Db instance\n     *\n     * @param client - The MongoClient for the database.\n     * @param databaseName - The name of the database this instance represents.\n     * @param options - Optional settings for Db construction\n     */\n    constructor(client, databaseName, options) {\n        options = options ?? {};\n        // Filter the options\n        options = (0, utils_1.filterOptions)(options, DB_OPTIONS_ALLOW_LIST);\n        // Ensure we have a valid db name\n        validateDatabaseName(databaseName);\n        // Internal state of the db object\n        this.s = {\n            // Client\n            client,\n            // Options\n            options,\n            // Unpack read preference\n            readPreference: read_preference_1.ReadPreference.fromOptions(options),\n            // Merge bson options\n            bsonOptions: (0, bson_1.resolveBSONOptions)(options, client),\n            // Set up the primary key factory or fallback to ObjectId\n            pkFactory: options?.pkFactory ?? utils_1.DEFAULT_PK_FACTORY,\n            // ReadConcern\n            readConcern: read_concern_1.ReadConcern.fromOptions(options),\n            writeConcern: write_concern_1.WriteConcern.fromOptions(options),\n            // Namespace\n            namespace: new utils_1.MongoDBNamespace(databaseName)\n        };\n    }\n    get databaseName() {\n        return this.s.namespace.db;\n    }\n    // Options\n    get options() {\n        return this.s.options;\n    }\n    /**\n     * Check if a secondary can be used (because the read preference is *not* set to primary)\n     */\n    get secondaryOk() {\n        return this.s.readPreference?.preference !== 'primary' || false;\n    }\n    get readConcern() {\n        return this.s.readConcern;\n    }\n    /**\n     * The current readPreference of the Db. If not explicitly defined for\n     * this Db, will be inherited from the parent MongoClient\n     */\n    get readPreference() {\n        if (this.s.readPreference == null) {\n            return this.s.client.readPreference;\n        }\n        return this.s.readPreference;\n    }\n    get bsonOptions() {\n        return this.s.bsonOptions;\n    }\n    // get the write Concern\n    get writeConcern() {\n        return this.s.writeConcern;\n    }\n    get namespace() {\n        return this.s.namespace.toString();\n    }\n    /**\n     * Create a new collection on a server with the specified options. Use this to create capped collections.\n     * More information about command options available at https://www.mongodb.com/docs/manual/reference/command/create/\n     *\n     * @param name - The name of the collection to create\n     * @param options - Optional settings for the command\n     */\n    async createCollection(name, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.client, new create_collection_1.CreateCollectionOperation(this, name, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Execute a command\n     *\n     * @remarks\n     * This command does not inherit options from the MongoClient.\n     *\n     * @param command - The command to run\n     * @param options - Optional settings for the command\n     */\n    async command(command, options) {\n        // Intentionally, we do not inherit options from parent for this operation.\n        return (0, execute_operation_1.executeOperation)(this.s.client, new run_command_1.RunCommandOperation(this, command, options));\n    }\n    /**\n     * Execute an aggregation framework pipeline against the database, needs MongoDB \\>= 3.6\n     *\n     * @param pipeline - An array of aggregation stages to be executed\n     * @param options - Optional settings for the command\n     */\n    aggregate(pipeline = [], options) {\n        return new aggregation_cursor_1.AggregationCursor(this.s.client, this.s.namespace, pipeline, (0, utils_1.resolveOptions)(this, options));\n    }\n    /** Return the Admin db instance */\n    admin() {\n        return new admin_1.Admin(this);\n    }\n    /**\n     * Returns a reference to a MongoDB Collection. If it does not exist it will be created implicitly.\n     *\n     * @param name - the collection name we wish to access.\n     * @returns return the new Collection instance\n     */\n    collection(name, options = {}) {\n        if (typeof options === 'function') {\n            throw new error_1.MongoInvalidArgumentError('The callback form of this helper has been removed.');\n        }\n        return new collection_1.Collection(this, name, (0, utils_1.resolveOptions)(this, options));\n    }\n    /**\n     * Get all the db statistics.\n     *\n     * @param options - Optional settings for the command\n     */\n    async stats(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.client, new stats_1.DbStatsOperation(this, (0, utils_1.resolveOptions)(this, options)));\n    }\n    listCollections(filter = {}, options = {}) {\n        return new list_collections_cursor_1.ListCollectionsCursor(this, filter, (0, utils_1.resolveOptions)(this, options));\n    }\n    /**\n     * Rename a collection.\n     *\n     * @remarks\n     * This operation does not inherit options from the MongoClient.\n     *\n     * @param fromCollection - Name of current collection to rename\n     * @param toCollection - New name of of the collection\n     * @param options - Optional settings for the command\n     */\n    async renameCollection(fromCollection, toCollection, options) {\n        // Intentionally, we do not inherit options from parent for this operation.\n        return (0, execute_operation_1.executeOperation)(this.s.client, new rename_1.RenameOperation(this.collection(fromCollection), toCollection, { ...options, new_collection: true, readPreference: read_preference_1.ReadPreference.primary }));\n    }\n    /**\n     * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n     *\n     * @param name - Name of collection to drop\n     * @param options - Optional settings for the command\n     */\n    async dropCollection(name, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.client, new drop_1.DropCollectionOperation(this, name, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Drop a database, removing it permanently from the server.\n     *\n     * @param options - Optional settings for the command\n     */\n    async dropDatabase(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.client, new drop_1.DropDatabaseOperation(this, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Fetch all collections for the current db.\n     *\n     * @param options - Optional settings for the command\n     */\n    async collections(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.client, new collections_1.CollectionsOperation(this, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Creates an index on the db and collection.\n     *\n     * @param name - Name of the collection to create the index on.\n     * @param indexSpec - Specify the field to index, or an index specification\n     * @param options - Optional settings for the command\n     */\n    async createIndex(name, indexSpec, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.client, new indexes_1.CreateIndexOperation(this, name, indexSpec, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Add a user to the database\n     *\n     * @param username - The username for the new user\n     * @param passwordOrOptions - An optional password for the new user, or the options for the command\n     * @param options - Optional settings for the command\n     */\n    async addUser(username, passwordOrOptions, options) {\n        options =\n            options != null && typeof options === 'object'\n                ? options\n                : passwordOrOptions != null && typeof passwordOrOptions === 'object'\n                    ? passwordOrOptions\n                    : undefined;\n        const password = typeof passwordOrOptions === 'string' ? passwordOrOptions : undefined;\n        return (0, execute_operation_1.executeOperation)(this.s.client, new add_user_1.AddUserOperation(this, username, password, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Remove a user from a database\n     *\n     * @param username - The username to remove\n     * @param options - Optional settings for the command\n     */\n    async removeUser(username, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.client, new remove_user_1.RemoveUserOperation(this, username, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Set the current profiling level of MongoDB\n     *\n     * @param level - The new profiling level (off, slow_only, all).\n     * @param options - Optional settings for the command\n     */\n    async setProfilingLevel(level, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.client, new set_profiling_level_1.SetProfilingLevelOperation(this, level, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Retrieve the current profiling Level for MongoDB\n     *\n     * @param options - Optional settings for the command\n     */\n    async profilingLevel(options) {\n        return (0, execute_operation_1.executeOperation)(this.s.client, new profiling_level_1.ProfilingLevelOperation(this, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Retrieves this collections index info.\n     *\n     * @param name - The name of the collection.\n     * @param options - Optional settings for the command\n     */\n    async indexInformation(name, options) {\n        return (0, execute_operation_1.executeOperation)(this.s.client, new indexes_1.IndexInformationOperation(this, name, (0, utils_1.resolveOptions)(this, options)));\n    }\n    /**\n     * Create a new Change Stream, watching for new changes (insertions, updates,\n     * replacements, deletions, and invalidations) in this database. Will ignore all\n     * changes to system collections.\n     *\n     * @remarks\n     * watch() accepts two generic arguments for distinct use cases:\n     * - The first is to provide the schema that may be defined for all the collections within this database\n     * - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n     *\n     * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n     * @param options - Optional settings for the command\n     * @typeParam TSchema - Type of the data being detected by the change stream\n     * @typeParam TChange - Type of the whole change stream document emitted\n     */\n    watch(pipeline = [], options = {}) {\n        // Allow optionally not specifying a pipeline\n        if (!Array.isArray(pipeline)) {\n            options = pipeline;\n            pipeline = [];\n        }\n        return new change_stream_1.ChangeStream(this, pipeline, (0, utils_1.resolveOptions)(this, options));\n    }\n}\nexports.Db = Db;\nDb.SYSTEM_NAMESPACE_COLLECTION = CONSTANTS.SYSTEM_NAMESPACE_COLLECTION;\nDb.SYSTEM_INDEX_COLLECTION = CONSTANTS.SYSTEM_INDEX_COLLECTION;\nDb.SYSTEM_PROFILE_COLLECTION = CONSTANTS.SYSTEM_PROFILE_COLLECTION;\nDb.SYSTEM_USER_COLLECTION = CONSTANTS.SYSTEM_USER_COLLECTION;\nDb.SYSTEM_COMMAND_COLLECTION = CONSTANTS.SYSTEM_COMMAND_COLLECTION;\nDb.SYSTEM_JS_COLLECTION = CONSTANTS.SYSTEM_JS_COLLECTION;\n// TODO(NODE-3484): Refactor into MongoDBNamespace\n// Validate the database name\nfunction validateDatabaseName(databaseName) {\n    if (typeof databaseName !== 'string')\n        throw new error_1.MongoInvalidArgumentError('Database name must be a string');\n    if (databaseName.length === 0)\n        throw new error_1.MongoInvalidArgumentError('Database name cannot be the empty string');\n    if (databaseName === '$external')\n        return;\n    const invalidChars = [' ', '.', '$', '/', '\\\\'];\n    for (let i = 0; i < invalidChars.length; i++) {\n        if (databaseName.indexOf(invalidChars[i]) !== -1)\n            throw new error_1.MongoAPIError(`database names cannot contain the character '${invalidChars[i]}'`);\n    }\n}\n//# sourceMappingURL=db.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoEncryptionLoggerLevel = exports.aws4 = exports.saslprep = exports.Snappy = exports.getAwsCredentialProvider = exports.ZStandard = exports.Kerberos = void 0;\nconst error_1 = require(\"./error\");\nfunction makeErrorModule(error) {\n    const props = error ? { kModuleError: error } : {};\n    return new Proxy(props, {\n        get: (_, key) => {\n            if (key === 'kModuleError') {\n                return error;\n            }\n            throw error;\n        },\n        set: () => {\n            throw error;\n        }\n    });\n}\nexports.Kerberos = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `kerberos` not found. Please install it to enable kerberos authentication'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.Kerberos = require('kerberos');\n}\ncatch { } // eslint-disable-line\nexports.ZStandard = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `@mongodb-js/zstd` not found. Please install it to enable zstd compression'));\ntry {\n    exports.ZStandard = require('@mongodb-js/zstd');\n}\ncatch { } // eslint-disable-line\nfunction getAwsCredentialProvider() {\n    try {\n        // Ensure you always wrap an optional require in the try block NODE-3199\n        const credentialProvider = require('@aws-sdk/credential-providers');\n        return credentialProvider;\n    }\n    catch {\n        return makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `@aws-sdk/credential-providers` not found.' +\n            ' Please install it to enable getting aws credentials via the official sdk.'));\n    }\n}\nexports.getAwsCredentialProvider = getAwsCredentialProvider;\nexports.Snappy = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `snappy` not found. Please install it to enable snappy compression'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.Snappy = require('snappy');\n}\ncatch { } // eslint-disable-line\nexports.saslprep = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `saslprep` not found.' +\n    ' Please install it to enable Stringprep Profile for User Names and Passwords'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.saslprep = require('saslprep');\n}\ncatch { } // eslint-disable-line\nexports.aws4 = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `aws4` not found. Please install it to enable AWS authentication'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.aws4 = require('aws4');\n}\ncatch { } // eslint-disable-line\n/** @public */\nexports.AutoEncryptionLoggerLevel = Object.freeze({\n    FatalError: 0,\n    Error: 1,\n    Warning: 2,\n    Info: 3,\n    Trace: 4\n});\n//# sourceMappingURL=deps.js.map","\"use strict\";\n/* eslint-disable @typescript-eslint/no-var-requires */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Encrypter = void 0;\nconst constants_1 = require(\"./constants\");\nconst error_1 = require(\"./error\");\nconst mongo_client_1 = require(\"./mongo_client\");\nconst utils_1 = require(\"./utils\");\nlet AutoEncrypterClass;\n/** @internal */\nconst kInternalClient = Symbol('internalClient');\n/** @internal */\nclass Encrypter {\n    constructor(client, uri, options) {\n        if (typeof options.autoEncryption !== 'object') {\n            throw new error_1.MongoInvalidArgumentError('Option \"autoEncryption\" must be specified');\n        }\n        // initialize to null, if we call getInternalClient, we may set this it is important to not overwrite those function calls.\n        this[kInternalClient] = null;\n        this.bypassAutoEncryption = !!options.autoEncryption.bypassAutoEncryption;\n        this.needsConnecting = false;\n        if (options.maxPoolSize === 0 && options.autoEncryption.keyVaultClient == null) {\n            options.autoEncryption.keyVaultClient = client;\n        }\n        else if (options.autoEncryption.keyVaultClient == null) {\n            options.autoEncryption.keyVaultClient = this.getInternalClient(client, uri, options);\n        }\n        if (this.bypassAutoEncryption) {\n            options.autoEncryption.metadataClient = undefined;\n        }\n        else if (options.maxPoolSize === 0) {\n            options.autoEncryption.metadataClient = client;\n        }\n        else {\n            options.autoEncryption.metadataClient = this.getInternalClient(client, uri, options);\n        }\n        if (options.proxyHost) {\n            options.autoEncryption.proxyOptions = {\n                proxyHost: options.proxyHost,\n                proxyPort: options.proxyPort,\n                proxyUsername: options.proxyUsername,\n                proxyPassword: options.proxyPassword\n            };\n        }\n        this.autoEncrypter = new AutoEncrypterClass(client, options.autoEncryption);\n    }\n    getInternalClient(client, uri, options) {\n        // TODO(NODE-4144): Remove new variable for type narrowing\n        let internalClient = this[kInternalClient];\n        if (internalClient == null) {\n            const clonedOptions = {};\n            for (const key of [\n                ...Object.getOwnPropertyNames(options),\n                ...Object.getOwnPropertySymbols(options)\n            ]) {\n                if (['autoEncryption', 'minPoolSize', 'servers', 'caseTranslate', 'dbName'].includes(key))\n                    continue;\n                Reflect.set(clonedOptions, key, Reflect.get(options, key));\n            }\n            clonedOptions.minPoolSize = 0;\n            internalClient = new mongo_client_1.MongoClient(uri, clonedOptions);\n            this[kInternalClient] = internalClient;\n            for (const eventName of constants_1.MONGO_CLIENT_EVENTS) {\n                for (const listener of client.listeners(eventName)) {\n                    internalClient.on(eventName, listener);\n                }\n            }\n            client.on('newListener', (eventName, listener) => {\n                internalClient?.on(eventName, listener);\n            });\n            this.needsConnecting = true;\n        }\n        return internalClient;\n    }\n    async connectInternalClient() {\n        // TODO(NODE-4144): Remove new variable for type narrowing\n        const internalClient = this[kInternalClient];\n        if (this.needsConnecting && internalClient != null) {\n            this.needsConnecting = false;\n            await internalClient.connect();\n        }\n    }\n    close(client, force, callback) {\n        this.autoEncrypter.teardown(!!force, e => {\n            const internalClient = this[kInternalClient];\n            if (internalClient != null && client !== internalClient) {\n                internalClient.close(force).then(() => callback(), error => callback(error));\n                return;\n            }\n            callback(e);\n        });\n    }\n    static checkForMongoCrypt() {\n        const mongodbClientEncryption = (0, utils_1.getMongoDBClientEncryption)();\n        if (mongodbClientEncryption == null) {\n            throw new error_1.MongoMissingDependencyError('Auto-encryption requested, but the module is not installed. ' +\n                'Please add `mongodb-client-encryption` as a dependency of your project');\n        }\n        AutoEncrypterClass = mongodbClientEncryption.extension(require('../lib/index')).AutoEncrypter;\n    }\n}\nexports.Encrypter = Encrypter;\n//# sourceMappingURL=encrypter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isResumableError = exports.isNetworkTimeoutError = exports.isSDAMUnrecoverableError = exports.isNodeShuttingDownError = exports.isRetryableReadError = exports.isRetryableWriteError = exports.needsRetryableWriteLabel = exports.MongoWriteConcernError = exports.MongoServerSelectionError = exports.MongoSystemError = exports.MongoMissingDependencyError = exports.MongoMissingCredentialsError = exports.MongoCompatibilityError = exports.MongoInvalidArgumentError = exports.MongoParseError = exports.MongoNetworkTimeoutError = exports.MongoNetworkError = exports.isNetworkErrorBeforeHandshake = exports.MongoTopologyClosedError = exports.MongoCursorExhaustedError = exports.MongoServerClosedError = exports.MongoCursorInUseError = exports.MongoUnexpectedServerResponseError = exports.MongoGridFSChunkError = exports.MongoGridFSStreamError = exports.MongoTailableCursorError = exports.MongoChangeStreamError = exports.MongoAWSError = exports.MongoKerberosError = exports.MongoExpiredSessionError = exports.MongoTransactionError = exports.MongoNotConnectedError = exports.MongoDecompressionError = exports.MongoBatchReExecutionError = exports.MongoRuntimeError = exports.MongoAPIError = exports.MongoDriverError = exports.MongoServerError = exports.MongoError = exports.MongoErrorLabel = exports.GET_MORE_RESUMABLE_CODES = exports.MONGODB_ERROR_CODES = exports.NODE_IS_RECOVERING_ERROR_MESSAGE = exports.LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE = exports.LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE = void 0;\n/** @internal */\nconst kErrorLabels = Symbol('errorLabels');\n/**\n * @internal\n * The legacy error message from the server that indicates the node is not a writable primary\n * https://github.com/mongodb/specifications/blob/b07c26dc40d04ac20349f989db531c9845fdd755/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-writable-primary-and-node-is-recovering\n */\nexports.LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE = new RegExp('not master', 'i');\n/**\n * @internal\n * The legacy error message from the server that indicates the node is not a primary or secondary\n * https://github.com/mongodb/specifications/blob/b07c26dc40d04ac20349f989db531c9845fdd755/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-writable-primary-and-node-is-recovering\n */\nexports.LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE = new RegExp('not master or secondary', 'i');\n/**\n * @internal\n * The error message from the server that indicates the node is recovering\n * https://github.com/mongodb/specifications/blob/b07c26dc40d04ac20349f989db531c9845fdd755/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-writable-primary-and-node-is-recovering\n */\nexports.NODE_IS_RECOVERING_ERROR_MESSAGE = new RegExp('node is recovering', 'i');\n/** @internal MongoDB Error Codes */\nexports.MONGODB_ERROR_CODES = Object.freeze({\n    HostUnreachable: 6,\n    HostNotFound: 7,\n    NetworkTimeout: 89,\n    ShutdownInProgress: 91,\n    PrimarySteppedDown: 189,\n    ExceededTimeLimit: 262,\n    SocketException: 9001,\n    NotWritablePrimary: 10107,\n    InterruptedAtShutdown: 11600,\n    InterruptedDueToReplStateChange: 11602,\n    NotPrimaryNoSecondaryOk: 13435,\n    NotPrimaryOrSecondary: 13436,\n    StaleShardVersion: 63,\n    StaleEpoch: 150,\n    StaleConfig: 13388,\n    RetryChangeStream: 234,\n    FailedToSatisfyReadPreference: 133,\n    CursorNotFound: 43,\n    LegacyNotPrimary: 10058,\n    WriteConcernFailed: 64,\n    NamespaceNotFound: 26,\n    IllegalOperation: 20,\n    MaxTimeMSExpired: 50,\n    UnknownReplWriteConcern: 79,\n    UnsatisfiableWriteConcern: 100\n});\n// From spec@https://github.com/mongodb/specifications/blob/f93d78191f3db2898a59013a7ed5650352ef6da8/source/change-streams/change-streams.rst#resumable-error\nexports.GET_MORE_RESUMABLE_CODES = new Set([\n    exports.MONGODB_ERROR_CODES.HostUnreachable,\n    exports.MONGODB_ERROR_CODES.HostNotFound,\n    exports.MONGODB_ERROR_CODES.NetworkTimeout,\n    exports.MONGODB_ERROR_CODES.ShutdownInProgress,\n    exports.MONGODB_ERROR_CODES.PrimarySteppedDown,\n    exports.MONGODB_ERROR_CODES.ExceededTimeLimit,\n    exports.MONGODB_ERROR_CODES.SocketException,\n    exports.MONGODB_ERROR_CODES.NotWritablePrimary,\n    exports.MONGODB_ERROR_CODES.InterruptedAtShutdown,\n    exports.MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n    exports.MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk,\n    exports.MONGODB_ERROR_CODES.NotPrimaryOrSecondary,\n    exports.MONGODB_ERROR_CODES.StaleShardVersion,\n    exports.MONGODB_ERROR_CODES.StaleEpoch,\n    exports.MONGODB_ERROR_CODES.StaleConfig,\n    exports.MONGODB_ERROR_CODES.RetryChangeStream,\n    exports.MONGODB_ERROR_CODES.FailedToSatisfyReadPreference,\n    exports.MONGODB_ERROR_CODES.CursorNotFound\n]);\n/** @public */\nexports.MongoErrorLabel = Object.freeze({\n    RetryableWriteError: 'RetryableWriteError',\n    TransientTransactionError: 'TransientTransactionError',\n    UnknownTransactionCommitResult: 'UnknownTransactionCommitResult',\n    ResumableChangeStreamError: 'ResumableChangeStreamError',\n    HandshakeError: 'HandshakeError',\n    ResetPool: 'ResetPool',\n    InterruptInUseConnections: 'InterruptInUseConnections',\n    NoWritesPerformed: 'NoWritesPerformed'\n});\n/**\n * @public\n * @category Error\n *\n * @privateRemarks\n * mongodb-client-encryption has a dependency on this error, it uses the constructor with a string argument\n */\nclass MongoError extends Error {\n    constructor(message) {\n        if (message instanceof Error) {\n            super(message.message);\n            this.cause = message;\n        }\n        else {\n            super(message);\n        }\n        this[kErrorLabels] = new Set();\n    }\n    get name() {\n        return 'MongoError';\n    }\n    /** Legacy name for server error responses */\n    get errmsg() {\n        return this.message;\n    }\n    /**\n     * Checks the error to see if it has an error label\n     *\n     * @param label - The error label to check for\n     * @returns returns true if the error has the provided error label\n     */\n    hasErrorLabel(label) {\n        return this[kErrorLabels].has(label);\n    }\n    addErrorLabel(label) {\n        this[kErrorLabels].add(label);\n    }\n    get errorLabels() {\n        return Array.from(this[kErrorLabels]);\n    }\n}\nexports.MongoError = MongoError;\n/**\n * An error coming from the mongo server\n *\n * @public\n * @category Error\n */\nclass MongoServerError extends MongoError {\n    constructor(message) {\n        super(message.message || message.errmsg || message.$err || 'n/a');\n        if (message.errorLabels) {\n            this[kErrorLabels] = new Set(message.errorLabels);\n        }\n        for (const name in message) {\n            if (name !== 'errorLabels' && name !== 'errmsg' && name !== 'message')\n                this[name] = message[name];\n        }\n    }\n    get name() {\n        return 'MongoServerError';\n    }\n}\nexports.MongoServerError = MongoServerError;\n/**\n * An error generated by the driver\n *\n * @public\n * @category Error\n */\nclass MongoDriverError extends MongoError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoDriverError';\n    }\n}\nexports.MongoDriverError = MongoDriverError;\n/**\n * An error generated when the driver API is used incorrectly\n *\n * @privateRemarks\n * Should **never** be directly instantiated\n *\n * @public\n * @category Error\n */\nclass MongoAPIError extends MongoDriverError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoAPIError';\n    }\n}\nexports.MongoAPIError = MongoAPIError;\n/**\n * An error generated when the driver encounters unexpected input\n * or reaches an unexpected/invalid internal state\n *\n * @privateRemarks\n * Should **never** be directly instantiated.\n *\n * @public\n * @category Error\n */\nclass MongoRuntimeError extends MongoDriverError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoRuntimeError';\n    }\n}\nexports.MongoRuntimeError = MongoRuntimeError;\n/**\n * An error generated when a batch command is re-executed after one of the commands in the batch\n * has failed\n *\n * @public\n * @category Error\n */\nclass MongoBatchReExecutionError extends MongoAPIError {\n    constructor(message = 'This batch has already been executed, create new batch to execute') {\n        super(message);\n    }\n    get name() {\n        return 'MongoBatchReExecutionError';\n    }\n}\nexports.MongoBatchReExecutionError = MongoBatchReExecutionError;\n/**\n * An error generated when the driver fails to decompress\n * data received from the server.\n *\n * @public\n * @category Error\n */\nclass MongoDecompressionError extends MongoRuntimeError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoDecompressionError';\n    }\n}\nexports.MongoDecompressionError = MongoDecompressionError;\n/**\n * An error thrown when the user attempts to operate on a database or collection through a MongoClient\n * that has not yet successfully called the \"connect\" method\n *\n * @public\n * @category Error\n */\nclass MongoNotConnectedError extends MongoAPIError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoNotConnectedError';\n    }\n}\nexports.MongoNotConnectedError = MongoNotConnectedError;\n/**\n * An error generated when the user makes a mistake in the usage of transactions.\n * (e.g. attempting to commit a transaction with a readPreference other than primary)\n *\n * @public\n * @category Error\n */\nclass MongoTransactionError extends MongoAPIError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoTransactionError';\n    }\n}\nexports.MongoTransactionError = MongoTransactionError;\n/**\n * An error generated when the user attempts to operate\n * on a session that has expired or has been closed.\n *\n * @public\n * @category Error\n */\nclass MongoExpiredSessionError extends MongoAPIError {\n    constructor(message = 'Cannot use a session that has ended') {\n        super(message);\n    }\n    get name() {\n        return 'MongoExpiredSessionError';\n    }\n}\nexports.MongoExpiredSessionError = MongoExpiredSessionError;\n/**\n * A error generated when the user attempts to authenticate\n * via Kerberos, but fails to connect to the Kerberos client.\n *\n * @public\n * @category Error\n */\nclass MongoKerberosError extends MongoRuntimeError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoKerberosError';\n    }\n}\nexports.MongoKerberosError = MongoKerberosError;\n/**\n * A error generated when the user attempts to authenticate\n * via AWS, but fails\n *\n * @public\n * @category Error\n */\nclass MongoAWSError extends MongoRuntimeError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoAWSError';\n    }\n}\nexports.MongoAWSError = MongoAWSError;\n/**\n * An error generated when a ChangeStream operation fails to execute.\n *\n * @public\n * @category Error\n */\nclass MongoChangeStreamError extends MongoRuntimeError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoChangeStreamError';\n    }\n}\nexports.MongoChangeStreamError = MongoChangeStreamError;\n/**\n * An error thrown when the user calls a function or method not supported on a tailable cursor\n *\n * @public\n * @category Error\n */\nclass MongoTailableCursorError extends MongoAPIError {\n    constructor(message = 'Tailable cursor does not support this operation') {\n        super(message);\n    }\n    get name() {\n        return 'MongoTailableCursorError';\n    }\n}\nexports.MongoTailableCursorError = MongoTailableCursorError;\n/** An error generated when a GridFSStream operation fails to execute.\n *\n * @public\n * @category Error\n */\nclass MongoGridFSStreamError extends MongoRuntimeError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoGridFSStreamError';\n    }\n}\nexports.MongoGridFSStreamError = MongoGridFSStreamError;\n/**\n * An error generated when a malformed or invalid chunk is\n * encountered when reading from a GridFSStream.\n *\n * @public\n * @category Error\n */\nclass MongoGridFSChunkError extends MongoRuntimeError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoGridFSChunkError';\n    }\n}\nexports.MongoGridFSChunkError = MongoGridFSChunkError;\n/**\n * An error generated when a **parsable** unexpected response comes from the server.\n * This is generally an error where the driver in a state expecting a certain behavior to occur in\n * the next message from MongoDB but it receives something else.\n * This error **does not** represent an issue with wire message formatting.\n *\n * #### Example\n * When an operation fails, it is the driver's job to retry it. It must perform serverSelection\n * again to make sure that it attempts the operation against a server in a good state. If server\n * selection returns a server that does not support retryable operations, this error is used.\n * This scenario is unlikely as retryable support would also have been determined on the first attempt\n * but it is possible the state change could report a selectable server that does not support retries.\n *\n * @public\n * @category Error\n */\nclass MongoUnexpectedServerResponseError extends MongoRuntimeError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoUnexpectedServerResponseError';\n    }\n}\nexports.MongoUnexpectedServerResponseError = MongoUnexpectedServerResponseError;\n/**\n * An error thrown when the user attempts to add options to a cursor that has already been\n * initialized\n *\n * @public\n * @category Error\n */\nclass MongoCursorInUseError extends MongoAPIError {\n    constructor(message = 'Cursor is already initialized') {\n        super(message);\n    }\n    get name() {\n        return 'MongoCursorInUseError';\n    }\n}\nexports.MongoCursorInUseError = MongoCursorInUseError;\n/**\n * An error generated when an attempt is made to operate\n * on a closed/closing server.\n *\n * @public\n * @category Error\n */\nclass MongoServerClosedError extends MongoAPIError {\n    constructor(message = 'Server is closed') {\n        super(message);\n    }\n    get name() {\n        return 'MongoServerClosedError';\n    }\n}\nexports.MongoServerClosedError = MongoServerClosedError;\n/**\n * An error thrown when an attempt is made to read from a cursor that has been exhausted\n *\n * @public\n * @category Error\n */\nclass MongoCursorExhaustedError extends MongoAPIError {\n    constructor(message) {\n        super(message || 'Cursor is exhausted');\n    }\n    get name() {\n        return 'MongoCursorExhaustedError';\n    }\n}\nexports.MongoCursorExhaustedError = MongoCursorExhaustedError;\n/**\n * An error generated when an attempt is made to operate on a\n * dropped, or otherwise unavailable, database.\n *\n * @public\n * @category Error\n */\nclass MongoTopologyClosedError extends MongoAPIError {\n    constructor(message = 'Topology is closed') {\n        super(message);\n    }\n    get name() {\n        return 'MongoTopologyClosedError';\n    }\n}\nexports.MongoTopologyClosedError = MongoTopologyClosedError;\n/** @internal */\nconst kBeforeHandshake = Symbol('beforeHandshake');\nfunction isNetworkErrorBeforeHandshake(err) {\n    return err[kBeforeHandshake] === true;\n}\nexports.isNetworkErrorBeforeHandshake = isNetworkErrorBeforeHandshake;\n/**\n * An error indicating an issue with the network, including TCP errors and timeouts.\n * @public\n * @category Error\n */\nclass MongoNetworkError extends MongoError {\n    constructor(message, options) {\n        super(message);\n        if (options && typeof options.beforeHandshake === 'boolean') {\n            this[kBeforeHandshake] = options.beforeHandshake;\n        }\n    }\n    get name() {\n        return 'MongoNetworkError';\n    }\n}\nexports.MongoNetworkError = MongoNetworkError;\n/**\n * An error indicating a network timeout occurred\n * @public\n * @category Error\n *\n * @privateRemarks\n * mongodb-client-encryption has a dependency on this error with an instanceof check\n */\nclass MongoNetworkTimeoutError extends MongoNetworkError {\n    constructor(message, options) {\n        super(message, options);\n    }\n    get name() {\n        return 'MongoNetworkTimeoutError';\n    }\n}\nexports.MongoNetworkTimeoutError = MongoNetworkTimeoutError;\n/**\n * An error used when attempting to parse a value (like a connection string)\n * @public\n * @category Error\n */\nclass MongoParseError extends MongoDriverError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoParseError';\n    }\n}\nexports.MongoParseError = MongoParseError;\n/**\n * An error generated when the user supplies malformed or unexpected arguments\n * or when a required argument or field is not provided.\n *\n *\n * @public\n * @category Error\n */\nclass MongoInvalidArgumentError extends MongoAPIError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoInvalidArgumentError';\n    }\n}\nexports.MongoInvalidArgumentError = MongoInvalidArgumentError;\n/**\n * An error generated when a feature that is not enabled or allowed for the current server\n * configuration is used\n *\n *\n * @public\n * @category Error\n */\nclass MongoCompatibilityError extends MongoAPIError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoCompatibilityError';\n    }\n}\nexports.MongoCompatibilityError = MongoCompatibilityError;\n/**\n * An error generated when the user fails to provide authentication credentials before attempting\n * to connect to a mongo server instance.\n *\n *\n * @public\n * @category Error\n */\nclass MongoMissingCredentialsError extends MongoAPIError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoMissingCredentialsError';\n    }\n}\nexports.MongoMissingCredentialsError = MongoMissingCredentialsError;\n/**\n * An error generated when a required module or dependency is not present in the local environment\n *\n * @public\n * @category Error\n */\nclass MongoMissingDependencyError extends MongoAPIError {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return 'MongoMissingDependencyError';\n    }\n}\nexports.MongoMissingDependencyError = MongoMissingDependencyError;\n/**\n * An error signifying a general system issue\n * @public\n * @category Error\n */\nclass MongoSystemError extends MongoError {\n    constructor(message, reason) {\n        if (reason && reason.error) {\n            super(reason.error.message || reason.error);\n        }\n        else {\n            super(message);\n        }\n        if (reason) {\n            this.reason = reason;\n        }\n        this.code = reason.error?.code;\n    }\n    get name() {\n        return 'MongoSystemError';\n    }\n}\nexports.MongoSystemError = MongoSystemError;\n/**\n * An error signifying a client-side server selection error\n * @public\n * @category Error\n */\nclass MongoServerSelectionError extends MongoSystemError {\n    constructor(message, reason) {\n        super(message, reason);\n    }\n    get name() {\n        return 'MongoServerSelectionError';\n    }\n}\nexports.MongoServerSelectionError = MongoServerSelectionError;\nfunction makeWriteConcernResultObject(input) {\n    const output = Object.assign({}, input);\n    if (output.ok === 0) {\n        output.ok = 1;\n        delete output.errmsg;\n        delete output.code;\n        delete output.codeName;\n    }\n    return output;\n}\n/**\n * An error thrown when the server reports a writeConcernError\n * @public\n * @category Error\n */\nclass MongoWriteConcernError extends MongoServerError {\n    constructor(message, result) {\n        if (result && Array.isArray(result.errorLabels)) {\n            message.errorLabels = result.errorLabels;\n        }\n        super(message);\n        this.errInfo = message.errInfo;\n        if (result != null) {\n            this.result = makeWriteConcernResultObject(result);\n        }\n    }\n    get name() {\n        return 'MongoWriteConcernError';\n    }\n}\nexports.MongoWriteConcernError = MongoWriteConcernError;\n// https://github.com/mongodb/specifications/blob/master/source/retryable-reads/retryable-reads.rst#retryable-error\nconst RETRYABLE_READ_ERROR_CODES = new Set([\n    exports.MONGODB_ERROR_CODES.HostUnreachable,\n    exports.MONGODB_ERROR_CODES.HostNotFound,\n    exports.MONGODB_ERROR_CODES.NetworkTimeout,\n    exports.MONGODB_ERROR_CODES.ShutdownInProgress,\n    exports.MONGODB_ERROR_CODES.PrimarySteppedDown,\n    exports.MONGODB_ERROR_CODES.SocketException,\n    exports.MONGODB_ERROR_CODES.NotWritablePrimary,\n    exports.MONGODB_ERROR_CODES.InterruptedAtShutdown,\n    exports.MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n    exports.MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk,\n    exports.MONGODB_ERROR_CODES.NotPrimaryOrSecondary\n]);\n// see: https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.rst#terms\nconst RETRYABLE_WRITE_ERROR_CODES = new Set([\n    ...RETRYABLE_READ_ERROR_CODES,\n    exports.MONGODB_ERROR_CODES.ExceededTimeLimit\n]);\nfunction needsRetryableWriteLabel(error, maxWireVersion) {\n    // pre-4.4 server, then the driver adds an error label for every valid case\n    // execute operation will only inspect the label, code/message logic is handled here\n    if (error instanceof MongoNetworkError) {\n        return true;\n    }\n    if (error instanceof MongoError) {\n        if ((maxWireVersion >= 9 || error.hasErrorLabel(exports.MongoErrorLabel.RetryableWriteError)) &&\n            !error.hasErrorLabel(exports.MongoErrorLabel.HandshakeError)) {\n            // If we already have the error label no need to add it again. 4.4+ servers add the label.\n            // In the case where we have a handshake error, need to fall down to the logic checking\n            // the codes.\n            return false;\n        }\n    }\n    if (error instanceof MongoWriteConcernError) {\n        return RETRYABLE_WRITE_ERROR_CODES.has(error.result?.code ?? error.code ?? 0);\n    }\n    if (error instanceof MongoError && typeof error.code === 'number') {\n        return RETRYABLE_WRITE_ERROR_CODES.has(error.code);\n    }\n    const isNotWritablePrimaryError = exports.LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(error.message);\n    if (isNotWritablePrimaryError) {\n        return true;\n    }\n    const isNodeIsRecoveringError = exports.NODE_IS_RECOVERING_ERROR_MESSAGE.test(error.message);\n    if (isNodeIsRecoveringError) {\n        return true;\n    }\n    return false;\n}\nexports.needsRetryableWriteLabel = needsRetryableWriteLabel;\nfunction isRetryableWriteError(error) {\n    return error.hasErrorLabel(exports.MongoErrorLabel.RetryableWriteError);\n}\nexports.isRetryableWriteError = isRetryableWriteError;\n/** Determines whether an error is something the driver should attempt to retry */\nfunction isRetryableReadError(error) {\n    const hasRetryableErrorCode = typeof error.code === 'number' ? RETRYABLE_READ_ERROR_CODES.has(error.code) : false;\n    if (hasRetryableErrorCode) {\n        return true;\n    }\n    if (error instanceof MongoNetworkError) {\n        return true;\n    }\n    const isNotWritablePrimaryError = exports.LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(error.message);\n    if (isNotWritablePrimaryError) {\n        return true;\n    }\n    const isNodeIsRecoveringError = exports.NODE_IS_RECOVERING_ERROR_MESSAGE.test(error.message);\n    if (isNodeIsRecoveringError) {\n        return true;\n    }\n    return false;\n}\nexports.isRetryableReadError = isRetryableReadError;\nconst SDAM_RECOVERING_CODES = new Set([\n    exports.MONGODB_ERROR_CODES.ShutdownInProgress,\n    exports.MONGODB_ERROR_CODES.PrimarySteppedDown,\n    exports.MONGODB_ERROR_CODES.InterruptedAtShutdown,\n    exports.MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n    exports.MONGODB_ERROR_CODES.NotPrimaryOrSecondary\n]);\nconst SDAM_NOT_PRIMARY_CODES = new Set([\n    exports.MONGODB_ERROR_CODES.NotWritablePrimary,\n    exports.MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk,\n    exports.MONGODB_ERROR_CODES.LegacyNotPrimary\n]);\nconst SDAM_NODE_SHUTTING_DOWN_ERROR_CODES = new Set([\n    exports.MONGODB_ERROR_CODES.InterruptedAtShutdown,\n    exports.MONGODB_ERROR_CODES.ShutdownInProgress\n]);\nfunction isRecoveringError(err) {\n    if (typeof err.code === 'number') {\n        // If any error code exists, we ignore the error.message\n        return SDAM_RECOVERING_CODES.has(err.code);\n    }\n    return (exports.LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE.test(err.message) ||\n        exports.NODE_IS_RECOVERING_ERROR_MESSAGE.test(err.message));\n}\nfunction isNotWritablePrimaryError(err) {\n    if (typeof err.code === 'number') {\n        // If any error code exists, we ignore the error.message\n        return SDAM_NOT_PRIMARY_CODES.has(err.code);\n    }\n    if (isRecoveringError(err)) {\n        return false;\n    }\n    return exports.LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(err.message);\n}\nfunction isNodeShuttingDownError(err) {\n    return !!(typeof err.code === 'number' && SDAM_NODE_SHUTTING_DOWN_ERROR_CODES.has(err.code));\n}\nexports.isNodeShuttingDownError = isNodeShuttingDownError;\n/**\n * Determines whether SDAM can recover from a given error. If it cannot\n * then the pool will be cleared, and server state will completely reset\n * locally.\n *\n * @see https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-master-and-node-is-recovering\n */\nfunction isSDAMUnrecoverableError(error) {\n    // NOTE: null check is here for a strictly pre-CMAP world, a timeout or\n    //       close event are considered unrecoverable\n    if (error instanceof MongoParseError || error == null) {\n        return true;\n    }\n    return isRecoveringError(error) || isNotWritablePrimaryError(error);\n}\nexports.isSDAMUnrecoverableError = isSDAMUnrecoverableError;\nfunction isNetworkTimeoutError(err) {\n    return !!(err instanceof MongoNetworkError && err.message.match(/timed out/));\n}\nexports.isNetworkTimeoutError = isNetworkTimeoutError;\nfunction isResumableError(error, wireVersion) {\n    if (error == null || !(error instanceof MongoError)) {\n        return false;\n    }\n    if (error instanceof MongoNetworkError) {\n        return true;\n    }\n    if (wireVersion != null && wireVersion >= 9) {\n        // DRIVERS-1308: For 4.4 drivers running against 4.4 servers, drivers will add a special case to treat the CursorNotFound error code as resumable\n        if (error.code === exports.MONGODB_ERROR_CODES.CursorNotFound) {\n            return true;\n        }\n        return error.hasErrorLabel(exports.MongoErrorLabel.ResumableChangeStreamError);\n    }\n    if (typeof error.code === 'number') {\n        return exports.GET_MORE_RESUMABLE_CODES.has(error.code);\n    }\n    return false;\n}\nexports.isResumableError = isResumableError;\n//# sourceMappingURL=error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Explain = exports.ExplainVerbosity = void 0;\nconst error_1 = require(\"./error\");\n/** @public */\nexports.ExplainVerbosity = Object.freeze({\n    queryPlanner: 'queryPlanner',\n    queryPlannerExtended: 'queryPlannerExtended',\n    executionStats: 'executionStats',\n    allPlansExecution: 'allPlansExecution'\n});\n/** @internal */\nclass Explain {\n    constructor(verbosity) {\n        if (typeof verbosity === 'boolean') {\n            this.verbosity = verbosity\n                ? exports.ExplainVerbosity.allPlansExecution\n                : exports.ExplainVerbosity.queryPlanner;\n        }\n        else {\n            this.verbosity = verbosity;\n        }\n    }\n    static fromOptions(options) {\n        if (options?.explain == null)\n            return;\n        const explain = options.explain;\n        if (typeof explain === 'boolean' || typeof explain === 'string') {\n            return new Explain(explain);\n        }\n        throw new error_1.MongoInvalidArgumentError('Field \"explain\" must be a string or a boolean');\n    }\n}\nexports.Explain = Explain;\n//# sourceMappingURL=explain.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GridFSBucketReadStream = void 0;\nconst buffer_1 = require(\"buffer\");\nconst stream_1 = require(\"stream\");\nconst error_1 = require(\"../error\");\n/**\n * A readable stream that enables you to read buffers from GridFS.\n *\n * Do not instantiate this class directly. Use `openDownloadStream()` instead.\n * @public\n */\nclass GridFSBucketReadStream extends stream_1.Readable {\n    /**\n     * @param chunks - Handle for chunks collection\n     * @param files - Handle for files collection\n     * @param readPreference - The read preference to use\n     * @param filter - The filter to use to find the file document\n     * @internal\n     */\n    constructor(chunks, files, readPreference, filter, options) {\n        super();\n        this.s = {\n            bytesToTrim: 0,\n            bytesToSkip: 0,\n            bytesRead: 0,\n            chunks,\n            expected: 0,\n            files,\n            filter,\n            init: false,\n            expectedEnd: 0,\n            options: {\n                start: 0,\n                end: 0,\n                ...options\n            },\n            readPreference\n        };\n    }\n    /**\n     * Reads from the cursor and pushes to the stream.\n     * Private Impl, do not call directly\n     * @internal\n     */\n    _read() {\n        if (this.destroyed)\n            return;\n        waitForFile(this, () => doRead(this));\n    }\n    /**\n     * Sets the 0-based offset in bytes to start streaming from. Throws\n     * an error if this stream has entered flowing mode\n     * (e.g. if you've already called `on('data')`)\n     *\n     * @param start - 0-based offset in bytes to start streaming from\n     */\n    start(start = 0) {\n        throwIfInitialized(this);\n        this.s.options.start = start;\n        return this;\n    }\n    /**\n     * Sets the 0-based offset in bytes to start streaming from. Throws\n     * an error if this stream has entered flowing mode\n     * (e.g. if you've already called `on('data')`)\n     *\n     * @param end - Offset in bytes to stop reading at\n     */\n    end(end = 0) {\n        throwIfInitialized(this);\n        this.s.options.end = end;\n        return this;\n    }\n    /**\n     * Marks this stream as aborted (will never push another `data` event)\n     * and kills the underlying cursor. Will emit the 'end' event, and then\n     * the 'close' event once the cursor is successfully killed.\n     */\n    async abort() {\n        this.push(null);\n        this.destroyed = true;\n        if (this.s.cursor) {\n            try {\n                await this.s.cursor.close();\n            }\n            finally {\n                this.emit(GridFSBucketReadStream.CLOSE);\n            }\n        }\n        else {\n            if (!this.s.init) {\n                // If not initialized, fire close event because we will never\n                // get a cursor\n                this.emit(GridFSBucketReadStream.CLOSE);\n            }\n        }\n    }\n}\nexports.GridFSBucketReadStream = GridFSBucketReadStream;\n/**\n * An error occurred\n * @event\n */\nGridFSBucketReadStream.ERROR = 'error';\n/**\n * Fires when the stream loaded the file document corresponding to the provided id.\n * @event\n */\nGridFSBucketReadStream.FILE = 'file';\n/**\n * Emitted when a chunk of data is available to be consumed.\n * @event\n */\nGridFSBucketReadStream.DATA = 'data';\n/**\n * Fired when the stream is exhausted (no more data events).\n * @event\n */\nGridFSBucketReadStream.END = 'end';\n/**\n * Fired when the stream is exhausted and the underlying cursor is killed\n * @event\n */\nGridFSBucketReadStream.CLOSE = 'close';\nfunction throwIfInitialized(stream) {\n    if (stream.s.init) {\n        throw new error_1.MongoGridFSStreamError('Options cannot be changed after the stream is initialized');\n    }\n}\nfunction doRead(stream) {\n    if (stream.destroyed)\n        return;\n    if (!stream.s.cursor)\n        return;\n    if (!stream.s.file)\n        return;\n    const handleReadResult = ({ error, doc }) => {\n        if (stream.destroyed) {\n            return;\n        }\n        if (error) {\n            stream.emit(GridFSBucketReadStream.ERROR, error);\n            return;\n        }\n        if (!doc) {\n            stream.push(null);\n            stream.s.cursor?.close().then(() => {\n                stream.emit(GridFSBucketReadStream.CLOSE);\n            }, error => {\n                stream.emit(GridFSBucketReadStream.ERROR, error);\n            });\n            return;\n        }\n        if (!stream.s.file)\n            return;\n        const bytesRemaining = stream.s.file.length - stream.s.bytesRead;\n        const expectedN = stream.s.expected++;\n        const expectedLength = Math.min(stream.s.file.chunkSize, bytesRemaining);\n        if (doc.n > expectedN) {\n            return stream.emit(GridFSBucketReadStream.ERROR, new error_1.MongoGridFSChunkError(`ChunkIsMissing: Got unexpected n: ${doc.n}, expected: ${expectedN}`));\n        }\n        if (doc.n < expectedN) {\n            return stream.emit(GridFSBucketReadStream.ERROR, new error_1.MongoGridFSChunkError(`ExtraChunk: Got unexpected n: ${doc.n}, expected: ${expectedN}`));\n        }\n        let buf = buffer_1.Buffer.isBuffer(doc.data) ? doc.data : doc.data.buffer;\n        if (buf.byteLength !== expectedLength) {\n            if (bytesRemaining <= 0) {\n                return stream.emit(GridFSBucketReadStream.ERROR, new error_1.MongoGridFSChunkError(`ExtraChunk: Got unexpected n: ${doc.n}, expected file length ${stream.s.file.length} bytes but already read ${stream.s.bytesRead} bytes`));\n            }\n            return stream.emit(GridFSBucketReadStream.ERROR, new error_1.MongoGridFSChunkError(`ChunkIsWrongSize: Got unexpected length: ${buf.byteLength}, expected: ${expectedLength}`));\n        }\n        stream.s.bytesRead += buf.byteLength;\n        if (buf.byteLength === 0) {\n            return stream.push(null);\n        }\n        let sliceStart = null;\n        let sliceEnd = null;\n        if (stream.s.bytesToSkip != null) {\n            sliceStart = stream.s.bytesToSkip;\n            stream.s.bytesToSkip = 0;\n        }\n        const atEndOfStream = expectedN === stream.s.expectedEnd - 1;\n        const bytesLeftToRead = stream.s.options.end - stream.s.bytesToSkip;\n        if (atEndOfStream && stream.s.bytesToTrim != null) {\n            sliceEnd = stream.s.file.chunkSize - stream.s.bytesToTrim;\n        }\n        else if (stream.s.options.end && bytesLeftToRead < doc.data.byteLength) {\n            sliceEnd = bytesLeftToRead;\n        }\n        if (sliceStart != null || sliceEnd != null) {\n            buf = buf.slice(sliceStart || 0, sliceEnd || buf.byteLength);\n        }\n        stream.push(buf);\n        return;\n    };\n    stream.s.cursor.next().then(doc => handleReadResult({ error: null, doc }), error => handleReadResult({ error, doc: null }));\n}\nfunction init(stream) {\n    const findOneOptions = {};\n    if (stream.s.readPreference) {\n        findOneOptions.readPreference = stream.s.readPreference;\n    }\n    if (stream.s.options && stream.s.options.sort) {\n        findOneOptions.sort = stream.s.options.sort;\n    }\n    if (stream.s.options && stream.s.options.skip) {\n        findOneOptions.skip = stream.s.options.skip;\n    }\n    const handleReadResult = ({ error, doc }) => {\n        if (error) {\n            return stream.emit(GridFSBucketReadStream.ERROR, error);\n        }\n        if (!doc) {\n            const identifier = stream.s.filter._id\n                ? stream.s.filter._id.toString()\n                : stream.s.filter.filename;\n            const errmsg = `FileNotFound: file ${identifier} was not found`;\n            // TODO(NODE-3483)\n            const err = new error_1.MongoRuntimeError(errmsg);\n            err.code = 'ENOENT'; // TODO: NODE-3338 set property as part of constructor\n            return stream.emit(GridFSBucketReadStream.ERROR, err);\n        }\n        // If document is empty, kill the stream immediately and don't\n        // execute any reads\n        if (doc.length <= 0) {\n            stream.push(null);\n            return;\n        }\n        if (stream.destroyed) {\n            // If user destroys the stream before we have a cursor, wait\n            // until the query is done to say we're 'closed' because we can't\n            // cancel a query.\n            stream.emit(GridFSBucketReadStream.CLOSE);\n            return;\n        }\n        try {\n            stream.s.bytesToSkip = handleStartOption(stream, doc, stream.s.options);\n        }\n        catch (error) {\n            return stream.emit(GridFSBucketReadStream.ERROR, error);\n        }\n        const filter = { files_id: doc._id };\n        // Currently (MongoDB 3.4.4) skip function does not support the index,\n        // it needs to retrieve all the documents first and then skip them. (CS-25811)\n        // As work around we use $gte on the \"n\" field.\n        if (stream.s.options && stream.s.options.start != null) {\n            const skip = Math.floor(stream.s.options.start / doc.chunkSize);\n            if (skip > 0) {\n                filter['n'] = { $gte: skip };\n            }\n        }\n        stream.s.cursor = stream.s.chunks.find(filter).sort({ n: 1 });\n        if (stream.s.readPreference) {\n            stream.s.cursor.withReadPreference(stream.s.readPreference);\n        }\n        stream.s.expectedEnd = Math.ceil(doc.length / doc.chunkSize);\n        stream.s.file = doc;\n        try {\n            stream.s.bytesToTrim = handleEndOption(stream, doc, stream.s.cursor, stream.s.options);\n        }\n        catch (error) {\n            return stream.emit(GridFSBucketReadStream.ERROR, error);\n        }\n        stream.emit(GridFSBucketReadStream.FILE, doc);\n        return;\n    };\n    stream.s.files.findOne(stream.s.filter, findOneOptions).then(doc => handleReadResult({ error: null, doc }), error => handleReadResult({ error, doc: null }));\n}\nfunction waitForFile(stream, callback) {\n    if (stream.s.file) {\n        return callback();\n    }\n    if (!stream.s.init) {\n        init(stream);\n        stream.s.init = true;\n    }\n    stream.once('file', () => {\n        callback();\n    });\n}\nfunction handleStartOption(stream, doc, options) {\n    if (options && options.start != null) {\n        if (options.start > doc.length) {\n            throw new error_1.MongoInvalidArgumentError(`Stream start (${options.start}) must not be more than the length of the file (${doc.length})`);\n        }\n        if (options.start < 0) {\n            throw new error_1.MongoInvalidArgumentError(`Stream start (${options.start}) must not be negative`);\n        }\n        if (options.end != null && options.end < options.start) {\n            throw new error_1.MongoInvalidArgumentError(`Stream start (${options.start}) must not be greater than stream end (${options.end})`);\n        }\n        stream.s.bytesRead = Math.floor(options.start / doc.chunkSize) * doc.chunkSize;\n        stream.s.expected = Math.floor(options.start / doc.chunkSize);\n        return options.start - stream.s.bytesRead;\n    }\n    throw new error_1.MongoInvalidArgumentError('Start option must be defined');\n}\nfunction handleEndOption(stream, doc, cursor, options) {\n    if (options && options.end != null) {\n        if (options.end > doc.length) {\n            throw new error_1.MongoInvalidArgumentError(`Stream end (${options.end}) must not be more than the length of the file (${doc.length})`);\n        }\n        if (options.start == null || options.start < 0) {\n            throw new error_1.MongoInvalidArgumentError(`Stream end (${options.end}) must not be negative`);\n        }\n        const start = options.start != null ? Math.floor(options.start / doc.chunkSize) : 0;\n        cursor.limit(Math.ceil(options.end / doc.chunkSize) - start);\n        stream.s.expectedEnd = Math.ceil(options.end / doc.chunkSize);\n        return Math.ceil(options.end / doc.chunkSize) * doc.chunkSize - options.end;\n    }\n    throw new error_1.MongoInvalidArgumentError('End option must be defined');\n}\n//# sourceMappingURL=download.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GridFSBucket = void 0;\nconst error_1 = require(\"../error\");\nconst mongo_types_1 = require(\"../mongo_types\");\nconst write_concern_1 = require(\"../write_concern\");\nconst download_1 = require(\"./download\");\nconst upload_1 = require(\"./upload\");\nconst DEFAULT_GRIDFS_BUCKET_OPTIONS = {\n    bucketName: 'fs',\n    chunkSizeBytes: 255 * 1024\n};\n/**\n * Constructor for a streaming GridFS interface\n * @public\n */\nclass GridFSBucket extends mongo_types_1.TypedEventEmitter {\n    constructor(db, options) {\n        super();\n        this.setMaxListeners(0);\n        const privateOptions = {\n            ...DEFAULT_GRIDFS_BUCKET_OPTIONS,\n            ...options,\n            writeConcern: write_concern_1.WriteConcern.fromOptions(options)\n        };\n        this.s = {\n            db,\n            options: privateOptions,\n            _chunksCollection: db.collection(privateOptions.bucketName + '.chunks'),\n            _filesCollection: db.collection(privateOptions.bucketName + '.files'),\n            checkedIndexes: false,\n            calledOpenUploadStream: false\n        };\n    }\n    /**\n     * Returns a writable stream (GridFSBucketWriteStream) for writing\n     * buffers to GridFS. The stream's 'id' property contains the resulting\n     * file's id.\n     *\n     * @param filename - The value of the 'filename' key in the files doc\n     * @param options - Optional settings.\n     */\n    openUploadStream(filename, options) {\n        return new upload_1.GridFSBucketWriteStream(this, filename, options);\n    }\n    /**\n     * Returns a writable stream (GridFSBucketWriteStream) for writing\n     * buffers to GridFS for a custom file id. The stream's 'id' property contains the resulting\n     * file's id.\n     */\n    openUploadStreamWithId(id, filename, options) {\n        return new upload_1.GridFSBucketWriteStream(this, filename, { ...options, id });\n    }\n    /** Returns a readable stream (GridFSBucketReadStream) for streaming file data from GridFS. */\n    openDownloadStream(id, options) {\n        return new download_1.GridFSBucketReadStream(this.s._chunksCollection, this.s._filesCollection, this.s.options.readPreference, { _id: id }, options);\n    }\n    /**\n     * Deletes a file with the given id\n     *\n     * @param id - The id of the file doc\n     */\n    async delete(id) {\n        const { deletedCount } = await this.s._filesCollection.deleteOne({ _id: id });\n        // Delete orphaned chunks before returning FileNotFound\n        await this.s._chunksCollection.deleteMany({ files_id: id });\n        if (deletedCount === 0) {\n            // TODO(NODE-3483): Replace with more appropriate error\n            // Consider creating new error MongoGridFSFileNotFoundError\n            throw new error_1.MongoRuntimeError(`File not found for id ${id}`);\n        }\n    }\n    /** Convenience wrapper around find on the files collection */\n    find(filter = {}, options = {}) {\n        return this.s._filesCollection.find(filter, options);\n    }\n    /**\n     * Returns a readable stream (GridFSBucketReadStream) for streaming the\n     * file with the given name from GridFS. If there are multiple files with\n     * the same name, this will stream the most recent file with the given name\n     * (as determined by the `uploadDate` field). You can set the `revision`\n     * option to change this behavior.\n     */\n    openDownloadStreamByName(filename, options) {\n        let sort = { uploadDate: -1 };\n        let skip = undefined;\n        if (options && options.revision != null) {\n            if (options.revision >= 0) {\n                sort = { uploadDate: 1 };\n                skip = options.revision;\n            }\n            else {\n                skip = -options.revision - 1;\n            }\n        }\n        return new download_1.GridFSBucketReadStream(this.s._chunksCollection, this.s._filesCollection, this.s.options.readPreference, { filename }, { ...options, sort, skip });\n    }\n    /**\n     * Renames the file with the given _id to the given string\n     *\n     * @param id - the id of the file to rename\n     * @param filename - new name for the file\n     */\n    async rename(id, filename) {\n        const filter = { _id: id };\n        const update = { $set: { filename } };\n        const { matchedCount } = await this.s._filesCollection.updateOne(filter, update);\n        if (matchedCount === 0) {\n            throw new error_1.MongoRuntimeError(`File with id ${id} not found`);\n        }\n    }\n    /** Removes this bucket's files collection, followed by its chunks collection. */\n    async drop() {\n        await this.s._filesCollection.drop();\n        await this.s._chunksCollection.drop();\n    }\n}\nexports.GridFSBucket = GridFSBucket;\n/**\n * When the first call to openUploadStream is made, the upload stream will\n * check to see if it needs to create the proper indexes on the chunks and\n * files collections. This event is fired either when 1) it determines that\n * no index creation is necessary, 2) when it successfully creates the\n * necessary indexes.\n * @event\n */\nGridFSBucket.INDEX = 'index';\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GridFSBucketWriteStream = void 0;\nconst buffer_1 = require(\"buffer\");\nconst stream_1 = require(\"stream\");\nconst bson_1 = require(\"../bson\");\nconst error_1 = require(\"../error\");\nconst write_concern_1 = require(\"./../write_concern\");\n/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n * @public\n */\nclass GridFSBucketWriteStream extends stream_1.Writable {\n    /**\n     * @param bucket - Handle for this stream's corresponding bucket\n     * @param filename - The value of the 'filename' key in the files doc\n     * @param options - Optional settings.\n     * @internal\n     */\n    constructor(bucket, filename, options) {\n        super();\n        options = options ?? {};\n        this.bucket = bucket;\n        this.chunks = bucket.s._chunksCollection;\n        this.filename = filename;\n        this.files = bucket.s._filesCollection;\n        this.options = options;\n        this.writeConcern = write_concern_1.WriteConcern.fromOptions(options) || bucket.s.options.writeConcern;\n        // Signals the write is all done\n        this.done = false;\n        this.id = options.id ? options.id : new bson_1.ObjectId();\n        // properly inherit the default chunksize from parent\n        this.chunkSizeBytes = options.chunkSizeBytes || this.bucket.s.options.chunkSizeBytes;\n        this.bufToStore = buffer_1.Buffer.alloc(this.chunkSizeBytes);\n        this.length = 0;\n        this.n = 0;\n        this.pos = 0;\n        this.state = {\n            streamEnd: false,\n            outstandingRequests: 0,\n            errored: false,\n            aborted: false\n        };\n        if (!this.bucket.s.calledOpenUploadStream) {\n            this.bucket.s.calledOpenUploadStream = true;\n            checkIndexes(this).then(() => {\n                this.bucket.s.checkedIndexes = true;\n                this.bucket.emit('index');\n            }, () => null);\n        }\n    }\n    write(chunk, encodingOrCallback, callback) {\n        const encoding = typeof encodingOrCallback === 'function' ? undefined : encodingOrCallback;\n        callback = typeof encodingOrCallback === 'function' ? encodingOrCallback : callback;\n        return waitForIndexes(this, () => doWrite(this, chunk, encoding, callback));\n    }\n    /**\n     * Places this write stream into an aborted state (all future writes fail)\n     * and deletes all chunks that have already been written.\n     */\n    async abort() {\n        if (this.state.streamEnd) {\n            // TODO(NODE-3485): Replace with MongoGridFSStreamClosed\n            throw new error_1.MongoAPIError('Cannot abort a stream that has already completed');\n        }\n        if (this.state.aborted) {\n            // TODO(NODE-3485): Replace with MongoGridFSStreamClosed\n            throw new error_1.MongoAPIError('Cannot call abort() on a stream twice');\n        }\n        this.state.aborted = true;\n        await this.chunks.deleteMany({ files_id: this.id });\n    }\n    end(chunkOrCallback, encodingOrCallback, callback) {\n        const chunk = typeof chunkOrCallback === 'function' ? undefined : chunkOrCallback;\n        const encoding = typeof encodingOrCallback === 'function' ? undefined : encodingOrCallback;\n        callback =\n            typeof chunkOrCallback === 'function'\n                ? chunkOrCallback\n                : typeof encodingOrCallback === 'function'\n                    ? encodingOrCallback\n                    : callback;\n        if (this.state.streamEnd || checkAborted(this, callback))\n            return this;\n        this.state.streamEnd = true;\n        if (callback) {\n            this.once(GridFSBucketWriteStream.FINISH, (result) => {\n                if (callback)\n                    callback(undefined, result);\n            });\n        }\n        if (!chunk) {\n            waitForIndexes(this, () => !!writeRemnant(this));\n            return this;\n        }\n        this.write(chunk, encoding, () => {\n            writeRemnant(this);\n        });\n        return this;\n    }\n}\nexports.GridFSBucketWriteStream = GridFSBucketWriteStream;\n/** @event */\nGridFSBucketWriteStream.CLOSE = 'close';\n/** @event */\nGridFSBucketWriteStream.ERROR = 'error';\n/**\n * `end()` was called and the write stream successfully wrote the file metadata and all the chunks to MongoDB.\n * @event\n */\nGridFSBucketWriteStream.FINISH = 'finish';\nfunction __handleError(stream, error, callback) {\n    if (stream.state.errored) {\n        return;\n    }\n    stream.state.errored = true;\n    if (callback) {\n        return callback(error);\n    }\n    stream.emit(GridFSBucketWriteStream.ERROR, error);\n}\nfunction createChunkDoc(filesId, n, data) {\n    return {\n        _id: new bson_1.ObjectId(),\n        files_id: filesId,\n        n,\n        data\n    };\n}\nasync function checkChunksIndex(stream) {\n    const index = { files_id: 1, n: 1 };\n    let indexes;\n    try {\n        indexes = await stream.chunks.listIndexes().toArray();\n    }\n    catch (error) {\n        if (error instanceof error_1.MongoError && error.code === error_1.MONGODB_ERROR_CODES.NamespaceNotFound) {\n            indexes = [];\n        }\n        else {\n            throw error;\n        }\n    }\n    const hasChunksIndex = !!indexes.find(index => {\n        const keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.files_id === 1 && index.key.n === 1) {\n            return true;\n        }\n        return false;\n    });\n    if (!hasChunksIndex) {\n        const writeConcernOptions = getWriteOptions(stream);\n        await stream.chunks.createIndex(index, {\n            ...writeConcernOptions,\n            background: true,\n            unique: true\n        });\n    }\n}\nfunction checkDone(stream, callback) {\n    if (stream.done)\n        return true;\n    if (stream.state.streamEnd && stream.state.outstandingRequests === 0 && !stream.state.errored) {\n        // Set done so we do not trigger duplicate createFilesDoc\n        stream.done = true;\n        // Create a new files doc\n        const filesDoc = createFilesDoc(stream.id, stream.length, stream.chunkSizeBytes, stream.filename, stream.options.contentType, stream.options.aliases, stream.options.metadata);\n        if (checkAborted(stream, callback)) {\n            return false;\n        }\n        stream.files.insertOne(filesDoc, getWriteOptions(stream)).then(() => {\n            stream.emit(GridFSBucketWriteStream.FINISH, filesDoc);\n            stream.emit(GridFSBucketWriteStream.CLOSE);\n        }, error => {\n            return __handleError(stream, error, callback);\n        });\n        return true;\n    }\n    return false;\n}\nasync function checkIndexes(stream) {\n    const doc = await stream.files.findOne({}, { projection: { _id: 1 } });\n    if (doc != null) {\n        // If at least one document exists assume the collection has the required index\n        return;\n    }\n    const index = { filename: 1, uploadDate: 1 };\n    let indexes;\n    try {\n        indexes = await stream.files.listIndexes().toArray();\n    }\n    catch (error) {\n        if (error instanceof error_1.MongoError && error.code === error_1.MONGODB_ERROR_CODES.NamespaceNotFound) {\n            indexes = [];\n        }\n        else {\n            throw error;\n        }\n    }\n    const hasFileIndex = !!indexes.find(index => {\n        const keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.filename === 1 && index.key.uploadDate === 1) {\n            return true;\n        }\n        return false;\n    });\n    if (!hasFileIndex) {\n        await stream.files.createIndex(index, { background: false });\n    }\n    await checkChunksIndex(stream);\n}\nfunction createFilesDoc(_id, length, chunkSize, filename, contentType, aliases, metadata) {\n    const ret = {\n        _id,\n        length,\n        chunkSize,\n        uploadDate: new Date(),\n        filename\n    };\n    if (contentType) {\n        ret.contentType = contentType;\n    }\n    if (aliases) {\n        ret.aliases = aliases;\n    }\n    if (metadata) {\n        ret.metadata = metadata;\n    }\n    return ret;\n}\nfunction doWrite(stream, chunk, encoding, callback) {\n    if (checkAborted(stream, callback)) {\n        return false;\n    }\n    const inputBuf = buffer_1.Buffer.isBuffer(chunk) ? chunk : buffer_1.Buffer.from(chunk, encoding);\n    stream.length += inputBuf.length;\n    // Input is small enough to fit in our buffer\n    if (stream.pos + inputBuf.length < stream.chunkSizeBytes) {\n        inputBuf.copy(stream.bufToStore, stream.pos);\n        stream.pos += inputBuf.length;\n        callback && callback();\n        // Note that we reverse the typical semantics of write's return value\n        // to be compatible with node's `.pipe()` function.\n        // True means client can keep writing.\n        return true;\n    }\n    // Otherwise, buffer is too big for current chunk, so we need to flush\n    // to MongoDB.\n    let inputBufRemaining = inputBuf.length;\n    let spaceRemaining = stream.chunkSizeBytes - stream.pos;\n    let numToCopy = Math.min(spaceRemaining, inputBuf.length);\n    let outstandingRequests = 0;\n    while (inputBufRemaining > 0) {\n        const inputBufPos = inputBuf.length - inputBufRemaining;\n        inputBuf.copy(stream.bufToStore, stream.pos, inputBufPos, inputBufPos + numToCopy);\n        stream.pos += numToCopy;\n        spaceRemaining -= numToCopy;\n        let doc;\n        if (spaceRemaining === 0) {\n            doc = createChunkDoc(stream.id, stream.n, buffer_1.Buffer.from(stream.bufToStore));\n            ++stream.state.outstandingRequests;\n            ++outstandingRequests;\n            if (checkAborted(stream, callback)) {\n                return false;\n            }\n            stream.chunks.insertOne(doc, getWriteOptions(stream)).then(() => {\n                --stream.state.outstandingRequests;\n                --outstandingRequests;\n                if (!outstandingRequests) {\n                    stream.emit('drain', doc);\n                    callback && callback();\n                    checkDone(stream);\n                }\n            }, error => {\n                return __handleError(stream, error);\n            });\n            spaceRemaining = stream.chunkSizeBytes;\n            stream.pos = 0;\n            ++stream.n;\n        }\n        inputBufRemaining -= numToCopy;\n        numToCopy = Math.min(spaceRemaining, inputBufRemaining);\n    }\n    // Note that we reverse the typical semantics of write's return value\n    // to be compatible with node's `.pipe()` function.\n    // False means the client should wait for the 'drain' event.\n    return false;\n}\nfunction getWriteOptions(stream) {\n    const obj = {};\n    if (stream.writeConcern) {\n        obj.writeConcern = {\n            w: stream.writeConcern.w,\n            wtimeout: stream.writeConcern.wtimeout,\n            j: stream.writeConcern.j\n        };\n    }\n    return obj;\n}\nfunction waitForIndexes(stream, callback) {\n    if (stream.bucket.s.checkedIndexes) {\n        return callback(false);\n    }\n    stream.bucket.once('index', () => {\n        callback(true);\n    });\n    return true;\n}\nfunction writeRemnant(stream, callback) {\n    // Buffer is empty, so don't bother to insert\n    if (stream.pos === 0) {\n        return checkDone(stream, callback);\n    }\n    ++stream.state.outstandingRequests;\n    // Create a new buffer to make sure the buffer isn't bigger than it needs\n    // to be.\n    const remnant = buffer_1.Buffer.alloc(stream.pos);\n    stream.bufToStore.copy(remnant, 0, 0, stream.pos);\n    const doc = createChunkDoc(stream.id, stream.n, remnant);\n    // If the stream was aborted, do not write remnant\n    if (checkAborted(stream, callback)) {\n        return false;\n    }\n    stream.chunks.insertOne(doc, getWriteOptions(stream)).then(() => {\n        --stream.state.outstandingRequests;\n        checkDone(stream);\n    }, error => {\n        return __handleError(stream, error);\n    });\n    return true;\n}\nfunction checkAborted(stream, callback) {\n    if (stream.state.aborted) {\n        if (typeof callback === 'function') {\n            // TODO(NODE-3485): Replace with MongoGridFSStreamClosedError\n            callback(new error_1.MongoAPIError('Stream has been aborted'));\n        }\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=upload.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Admin = exports.AbstractCursor = exports.MongoWriteConcernError = exports.MongoUnexpectedServerResponseError = exports.MongoTransactionError = exports.MongoTopologyClosedError = exports.MongoTailableCursorError = exports.MongoSystemError = exports.MongoServerSelectionError = exports.MongoServerError = exports.MongoServerClosedError = exports.MongoRuntimeError = exports.MongoParseError = exports.MongoNotConnectedError = exports.MongoNetworkTimeoutError = exports.MongoNetworkError = exports.MongoMissingDependencyError = exports.MongoMissingCredentialsError = exports.MongoKerberosError = exports.MongoInvalidArgumentError = exports.MongoGridFSStreamError = exports.MongoGridFSChunkError = exports.MongoExpiredSessionError = exports.MongoError = exports.MongoDriverError = exports.MongoDecompressionError = exports.MongoCursorInUseError = exports.MongoCursorExhaustedError = exports.MongoCompatibilityError = exports.MongoChangeStreamError = exports.MongoBatchReExecutionError = exports.MongoAWSError = exports.MongoAPIError = exports.ChangeStreamCursor = exports.MongoBulkWriteError = exports.Timestamp = exports.ObjectId = exports.MinKey = exports.MaxKey = exports.Long = exports.Int32 = exports.Double = exports.Decimal128 = exports.DBRef = exports.Code = exports.BSONType = exports.BSONSymbol = exports.BSONRegExp = exports.Binary = exports.BSON = void 0;\nexports.ServerDescriptionChangedEvent = exports.ServerClosedEvent = exports.ConnectionReadyEvent = exports.ConnectionPoolReadyEvent = exports.ConnectionPoolMonitoringEvent = exports.ConnectionPoolCreatedEvent = exports.ConnectionPoolClosedEvent = exports.ConnectionPoolClearedEvent = exports.ConnectionCreatedEvent = exports.ConnectionClosedEvent = exports.ConnectionCheckOutStartedEvent = exports.ConnectionCheckOutFailedEvent = exports.ConnectionCheckedOutEvent = exports.ConnectionCheckedInEvent = exports.CommandSucceededEvent = exports.CommandStartedEvent = exports.CommandFailedEvent = exports.WriteConcern = exports.ReadPreference = exports.ReadConcern = exports.TopologyType = exports.ServerType = exports.ReadPreferenceMode = exports.ReadConcernLevel = exports.ProfilingLevel = exports.ReturnDocument = exports.ServerApiVersion = exports.ExplainVerbosity = exports.MongoErrorLabel = exports.AutoEncryptionLoggerLevel = exports.CURSOR_FLAGS = exports.Compressor = exports.AuthMechanism = exports.GSSAPICanonicalizationValue = exports.BatchType = exports.UnorderedBulkOperation = exports.OrderedBulkOperation = exports.MongoClient = exports.ListIndexesCursor = exports.ListCollectionsCursor = exports.GridFSBucketWriteStream = exports.GridFSBucketReadStream = exports.GridFSBucket = exports.FindCursor = exports.Db = exports.Collection = exports.ClientSession = exports.ChangeStream = exports.CancellationToken = exports.AggregationCursor = void 0;\nexports.SrvPollingEvent = exports.TopologyOpeningEvent = exports.TopologyDescriptionChangedEvent = exports.TopologyClosedEvent = exports.ServerOpeningEvent = exports.ServerHeartbeatSucceededEvent = exports.ServerHeartbeatStartedEvent = exports.ServerHeartbeatFailedEvent = void 0;\nconst admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"Admin\", { enumerable: true, get: function () { return admin_1.Admin; } });\nconst ordered_1 = require(\"./bulk/ordered\");\nObject.defineProperty(exports, \"OrderedBulkOperation\", { enumerable: true, get: function () { return ordered_1.OrderedBulkOperation; } });\nconst unordered_1 = require(\"./bulk/unordered\");\nObject.defineProperty(exports, \"UnorderedBulkOperation\", { enumerable: true, get: function () { return unordered_1.UnorderedBulkOperation; } });\nconst change_stream_1 = require(\"./change_stream\");\nObject.defineProperty(exports, \"ChangeStream\", { enumerable: true, get: function () { return change_stream_1.ChangeStream; } });\nconst collection_1 = require(\"./collection\");\nObject.defineProperty(exports, \"Collection\", { enumerable: true, get: function () { return collection_1.Collection; } });\nconst abstract_cursor_1 = require(\"./cursor/abstract_cursor\");\nObject.defineProperty(exports, \"AbstractCursor\", { enumerable: true, get: function () { return abstract_cursor_1.AbstractCursor; } });\nconst aggregation_cursor_1 = require(\"./cursor/aggregation_cursor\");\nObject.defineProperty(exports, \"AggregationCursor\", { enumerable: true, get: function () { return aggregation_cursor_1.AggregationCursor; } });\nconst find_cursor_1 = require(\"./cursor/find_cursor\");\nObject.defineProperty(exports, \"FindCursor\", { enumerable: true, get: function () { return find_cursor_1.FindCursor; } });\nconst list_collections_cursor_1 = require(\"./cursor/list_collections_cursor\");\nObject.defineProperty(exports, \"ListCollectionsCursor\", { enumerable: true, get: function () { return list_collections_cursor_1.ListCollectionsCursor; } });\nconst list_indexes_cursor_1 = require(\"./cursor/list_indexes_cursor\");\nObject.defineProperty(exports, \"ListIndexesCursor\", { enumerable: true, get: function () { return list_indexes_cursor_1.ListIndexesCursor; } });\nconst db_1 = require(\"./db\");\nObject.defineProperty(exports, \"Db\", { enumerable: true, get: function () { return db_1.Db; } });\nconst gridfs_1 = require(\"./gridfs\");\nObject.defineProperty(exports, \"GridFSBucket\", { enumerable: true, get: function () { return gridfs_1.GridFSBucket; } });\nconst download_1 = require(\"./gridfs/download\");\nObject.defineProperty(exports, \"GridFSBucketReadStream\", { enumerable: true, get: function () { return download_1.GridFSBucketReadStream; } });\nconst upload_1 = require(\"./gridfs/upload\");\nObject.defineProperty(exports, \"GridFSBucketWriteStream\", { enumerable: true, get: function () { return upload_1.GridFSBucketWriteStream; } });\nconst mongo_client_1 = require(\"./mongo_client\");\nObject.defineProperty(exports, \"MongoClient\", { enumerable: true, get: function () { return mongo_client_1.MongoClient; } });\nconst mongo_types_1 = require(\"./mongo_types\");\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return mongo_types_1.CancellationToken; } });\nconst sessions_1 = require(\"./sessions\");\nObject.defineProperty(exports, \"ClientSession\", { enumerable: true, get: function () { return sessions_1.ClientSession; } });\n/** @public */\nvar bson_1 = require(\"./bson\");\nObject.defineProperty(exports, \"BSON\", { enumerable: true, get: function () { return bson_1.BSON; } });\nvar bson_2 = require(\"./bson\");\nObject.defineProperty(exports, \"Binary\", { enumerable: true, get: function () { return bson_2.Binary; } });\nObject.defineProperty(exports, \"BSONRegExp\", { enumerable: true, get: function () { return bson_2.BSONRegExp; } });\nObject.defineProperty(exports, \"BSONSymbol\", { enumerable: true, get: function () { return bson_2.BSONSymbol; } });\nObject.defineProperty(exports, \"BSONType\", { enumerable: true, get: function () { return bson_2.BSONType; } });\nObject.defineProperty(exports, \"Code\", { enumerable: true, get: function () { return bson_2.Code; } });\nObject.defineProperty(exports, \"DBRef\", { enumerable: true, get: function () { return bson_2.DBRef; } });\nObject.defineProperty(exports, \"Decimal128\", { enumerable: true, get: function () { return bson_2.Decimal128; } });\nObject.defineProperty(exports, \"Double\", { enumerable: true, get: function () { return bson_2.Double; } });\nObject.defineProperty(exports, \"Int32\", { enumerable: true, get: function () { return bson_2.Int32; } });\nObject.defineProperty(exports, \"Long\", { enumerable: true, get: function () { return bson_2.Long; } });\nObject.defineProperty(exports, \"MaxKey\", { enumerable: true, get: function () { return bson_2.MaxKey; } });\nObject.defineProperty(exports, \"MinKey\", { enumerable: true, get: function () { return bson_2.MinKey; } });\nObject.defineProperty(exports, \"ObjectId\", { enumerable: true, get: function () { return bson_2.ObjectId; } });\nObject.defineProperty(exports, \"Timestamp\", { enumerable: true, get: function () { return bson_2.Timestamp; } });\nvar common_1 = require(\"./bulk/common\");\nObject.defineProperty(exports, \"MongoBulkWriteError\", { enumerable: true, get: function () { return common_1.MongoBulkWriteError; } });\nvar change_stream_cursor_1 = require(\"./cursor/change_stream_cursor\");\nObject.defineProperty(exports, \"ChangeStreamCursor\", { enumerable: true, get: function () { return change_stream_cursor_1.ChangeStreamCursor; } });\nvar error_1 = require(\"./error\");\nObject.defineProperty(exports, \"MongoAPIError\", { enumerable: true, get: function () { return error_1.MongoAPIError; } });\nObject.defineProperty(exports, \"MongoAWSError\", { enumerable: true, get: function () { return error_1.MongoAWSError; } });\nObject.defineProperty(exports, \"MongoBatchReExecutionError\", { enumerable: true, get: function () { return error_1.MongoBatchReExecutionError; } });\nObject.defineProperty(exports, \"MongoChangeStreamError\", { enumerable: true, get: function () { return error_1.MongoChangeStreamError; } });\nObject.defineProperty(exports, \"MongoCompatibilityError\", { enumerable: true, get: function () { return error_1.MongoCompatibilityError; } });\nObject.defineProperty(exports, \"MongoCursorExhaustedError\", { enumerable: true, get: function () { return error_1.MongoCursorExhaustedError; } });\nObject.defineProperty(exports, \"MongoCursorInUseError\", { enumerable: true, get: function () { return error_1.MongoCursorInUseError; } });\nObject.defineProperty(exports, \"MongoDecompressionError\", { enumerable: true, get: function () { return error_1.MongoDecompressionError; } });\nObject.defineProperty(exports, \"MongoDriverError\", { enumerable: true, get: function () { return error_1.MongoDriverError; } });\nObject.defineProperty(exports, \"MongoError\", { enumerable: true, get: function () { return error_1.MongoError; } });\nObject.defineProperty(exports, \"MongoExpiredSessionError\", { enumerable: true, get: function () { return error_1.MongoExpiredSessionError; } });\nObject.defineProperty(exports, \"MongoGridFSChunkError\", { enumerable: true, get: function () { return error_1.MongoGridFSChunkError; } });\nObject.defineProperty(exports, \"MongoGridFSStreamError\", { enumerable: true, get: function () { return error_1.MongoGridFSStreamError; } });\nObject.defineProperty(exports, \"MongoInvalidArgumentError\", { enumerable: true, get: function () { return error_1.MongoInvalidArgumentError; } });\nObject.defineProperty(exports, \"MongoKerberosError\", { enumerable: true, get: function () { return error_1.MongoKerberosError; } });\nObject.defineProperty(exports, \"MongoMissingCredentialsError\", { enumerable: true, get: function () { return error_1.MongoMissingCredentialsError; } });\nObject.defineProperty(exports, \"MongoMissingDependencyError\", { enumerable: true, get: function () { return error_1.MongoMissingDependencyError; } });\nObject.defineProperty(exports, \"MongoNetworkError\", { enumerable: true, get: function () { return error_1.MongoNetworkError; } });\nObject.defineProperty(exports, \"MongoNetworkTimeoutError\", { enumerable: true, get: function () { return error_1.MongoNetworkTimeoutError; } });\nObject.defineProperty(exports, \"MongoNotConnectedError\", { enumerable: true, get: function () { return error_1.MongoNotConnectedError; } });\nObject.defineProperty(exports, \"MongoParseError\", { enumerable: true, get: function () { return error_1.MongoParseError; } });\nObject.defineProperty(exports, \"MongoRuntimeError\", { enumerable: true, get: function () { return error_1.MongoRuntimeError; } });\nObject.defineProperty(exports, \"MongoServerClosedError\", { enumerable: true, get: function () { return error_1.MongoServerClosedError; } });\nObject.defineProperty(exports, \"MongoServerError\", { enumerable: true, get: function () { return error_1.MongoServerError; } });\nObject.defineProperty(exports, \"MongoServerSelectionError\", { enumerable: true, get: function () { return error_1.MongoServerSelectionError; } });\nObject.defineProperty(exports, \"MongoSystemError\", { enumerable: true, get: function () { return error_1.MongoSystemError; } });\nObject.defineProperty(exports, \"MongoTailableCursorError\", { enumerable: true, get: function () { return error_1.MongoTailableCursorError; } });\nObject.defineProperty(exports, \"MongoTopologyClosedError\", { enumerable: true, get: function () { return error_1.MongoTopologyClosedError; } });\nObject.defineProperty(exports, \"MongoTransactionError\", { enumerable: true, get: function () { return error_1.MongoTransactionError; } });\nObject.defineProperty(exports, \"MongoUnexpectedServerResponseError\", { enumerable: true, get: function () { return error_1.MongoUnexpectedServerResponseError; } });\nObject.defineProperty(exports, \"MongoWriteConcernError\", { enumerable: true, get: function () { return error_1.MongoWriteConcernError; } });\n// enums\nvar common_2 = require(\"./bulk/common\");\nObject.defineProperty(exports, \"BatchType\", { enumerable: true, get: function () { return common_2.BatchType; } });\nvar gssapi_1 = require(\"./cmap/auth/gssapi\");\nObject.defineProperty(exports, \"GSSAPICanonicalizationValue\", { enumerable: true, get: function () { return gssapi_1.GSSAPICanonicalizationValue; } });\nvar providers_1 = require(\"./cmap/auth/providers\");\nObject.defineProperty(exports, \"AuthMechanism\", { enumerable: true, get: function () { return providers_1.AuthMechanism; } });\nvar compression_1 = require(\"./cmap/wire_protocol/compression\");\nObject.defineProperty(exports, \"Compressor\", { enumerable: true, get: function () { return compression_1.Compressor; } });\nvar abstract_cursor_2 = require(\"./cursor/abstract_cursor\");\nObject.defineProperty(exports, \"CURSOR_FLAGS\", { enumerable: true, get: function () { return abstract_cursor_2.CURSOR_FLAGS; } });\nvar deps_1 = require(\"./deps\");\nObject.defineProperty(exports, \"AutoEncryptionLoggerLevel\", { enumerable: true, get: function () { return deps_1.AutoEncryptionLoggerLevel; } });\nvar error_2 = require(\"./error\");\nObject.defineProperty(exports, \"MongoErrorLabel\", { enumerable: true, get: function () { return error_2.MongoErrorLabel; } });\nvar explain_1 = require(\"./explain\");\nObject.defineProperty(exports, \"ExplainVerbosity\", { enumerable: true, get: function () { return explain_1.ExplainVerbosity; } });\nvar mongo_client_2 = require(\"./mongo_client\");\nObject.defineProperty(exports, \"ServerApiVersion\", { enumerable: true, get: function () { return mongo_client_2.ServerApiVersion; } });\nvar find_and_modify_1 = require(\"./operations/find_and_modify\");\nObject.defineProperty(exports, \"ReturnDocument\", { enumerable: true, get: function () { return find_and_modify_1.ReturnDocument; } });\nvar set_profiling_level_1 = require(\"./operations/set_profiling_level\");\nObject.defineProperty(exports, \"ProfilingLevel\", { enumerable: true, get: function () { return set_profiling_level_1.ProfilingLevel; } });\nvar read_concern_1 = require(\"./read_concern\");\nObject.defineProperty(exports, \"ReadConcernLevel\", { enumerable: true, get: function () { return read_concern_1.ReadConcernLevel; } });\nvar read_preference_1 = require(\"./read_preference\");\nObject.defineProperty(exports, \"ReadPreferenceMode\", { enumerable: true, get: function () { return read_preference_1.ReadPreferenceMode; } });\nvar common_3 = require(\"./sdam/common\");\nObject.defineProperty(exports, \"ServerType\", { enumerable: true, get: function () { return common_3.ServerType; } });\nObject.defineProperty(exports, \"TopologyType\", { enumerable: true, get: function () { return common_3.TopologyType; } });\n// Helper classes\nvar read_concern_2 = require(\"./read_concern\");\nObject.defineProperty(exports, \"ReadConcern\", { enumerable: true, get: function () { return read_concern_2.ReadConcern; } });\nvar read_preference_2 = require(\"./read_preference\");\nObject.defineProperty(exports, \"ReadPreference\", { enumerable: true, get: function () { return read_preference_2.ReadPreference; } });\nvar write_concern_1 = require(\"./write_concern\");\nObject.defineProperty(exports, \"WriteConcern\", { enumerable: true, get: function () { return write_concern_1.WriteConcern; } });\n// events\nvar command_monitoring_events_1 = require(\"./cmap/command_monitoring_events\");\nObject.defineProperty(exports, \"CommandFailedEvent\", { enumerable: true, get: function () { return command_monitoring_events_1.CommandFailedEvent; } });\nObject.defineProperty(exports, \"CommandStartedEvent\", { enumerable: true, get: function () { return command_monitoring_events_1.CommandStartedEvent; } });\nObject.defineProperty(exports, \"CommandSucceededEvent\", { enumerable: true, get: function () { return command_monitoring_events_1.CommandSucceededEvent; } });\nvar connection_pool_events_1 = require(\"./cmap/connection_pool_events\");\nObject.defineProperty(exports, \"ConnectionCheckedInEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionCheckedInEvent; } });\nObject.defineProperty(exports, \"ConnectionCheckedOutEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionCheckedOutEvent; } });\nObject.defineProperty(exports, \"ConnectionCheckOutFailedEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionCheckOutFailedEvent; } });\nObject.defineProperty(exports, \"ConnectionCheckOutStartedEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionCheckOutStartedEvent; } });\nObject.defineProperty(exports, \"ConnectionClosedEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionClosedEvent; } });\nObject.defineProperty(exports, \"ConnectionCreatedEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionCreatedEvent; } });\nObject.defineProperty(exports, \"ConnectionPoolClearedEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionPoolClearedEvent; } });\nObject.defineProperty(exports, \"ConnectionPoolClosedEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionPoolClosedEvent; } });\nObject.defineProperty(exports, \"ConnectionPoolCreatedEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionPoolCreatedEvent; } });\nObject.defineProperty(exports, \"ConnectionPoolMonitoringEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionPoolMonitoringEvent; } });\nObject.defineProperty(exports, \"ConnectionPoolReadyEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionPoolReadyEvent; } });\nObject.defineProperty(exports, \"ConnectionReadyEvent\", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionReadyEvent; } });\nvar events_1 = require(\"./sdam/events\");\nObject.defineProperty(exports, \"ServerClosedEvent\", { enumerable: true, get: function () { return events_1.ServerClosedEvent; } });\nObject.defineProperty(exports, \"ServerDescriptionChangedEvent\", { enumerable: true, get: function () { return events_1.ServerDescriptionChangedEvent; } });\nObject.defineProperty(exports, \"ServerHeartbeatFailedEvent\", { enumerable: true, get: function () { return events_1.ServerHeartbeatFailedEvent; } });\nObject.defineProperty(exports, \"ServerHeartbeatStartedEvent\", { enumerable: true, get: function () { return events_1.ServerHeartbeatStartedEvent; } });\nObject.defineProperty(exports, \"ServerHeartbeatSucceededEvent\", { enumerable: true, get: function () { return events_1.ServerHeartbeatSucceededEvent; } });\nObject.defineProperty(exports, \"ServerOpeningEvent\", { enumerable: true, get: function () { return events_1.ServerOpeningEvent; } });\nObject.defineProperty(exports, \"TopologyClosedEvent\", { enumerable: true, get: function () { return events_1.TopologyClosedEvent; } });\nObject.defineProperty(exports, \"TopologyDescriptionChangedEvent\", { enumerable: true, get: function () { return events_1.TopologyDescriptionChangedEvent; } });\nObject.defineProperty(exports, \"TopologyOpeningEvent\", { enumerable: true, get: function () { return events_1.TopologyOpeningEvent; } });\nvar srv_polling_1 = require(\"./sdam/srv_polling\");\nObject.defineProperty(exports, \"SrvPollingEvent\", { enumerable: true, get: function () { return srv_polling_1.SrvPollingEvent; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MongoClient = exports.ServerApiVersion = void 0;\nconst util_1 = require(\"util\");\nconst bson_1 = require(\"./bson\");\nconst change_stream_1 = require(\"./change_stream\");\nconst connection_string_1 = require(\"./connection_string\");\nconst constants_1 = require(\"./constants\");\nconst db_1 = require(\"./db\");\nconst error_1 = require(\"./error\");\nconst mongo_logger_1 = require(\"./mongo_logger\");\nconst mongo_types_1 = require(\"./mongo_types\");\nconst read_preference_1 = require(\"./read_preference\");\nconst server_selection_1 = require(\"./sdam/server_selection\");\nconst topology_1 = require(\"./sdam/topology\");\nconst sessions_1 = require(\"./sessions\");\nconst utils_1 = require(\"./utils\");\n/** @public */\nexports.ServerApiVersion = Object.freeze({\n    v1: '1'\n});\n/** @internal */\nconst kOptions = Symbol('options');\n/**\n * The **MongoClient** class is a class that allows for making Connections to MongoDB.\n * @public\n *\n * @remarks\n * The programmatically provided options take precedence over the URI options.\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * // Enable command monitoring for debugging\n * const client = new MongoClient('mongodb://localhost:27017', { monitorCommands: true });\n *\n * client.on('commandStarted', started => console.log(started));\n * client.db().collection('pets');\n * await client.insertOne({ name: 'spot', kind: 'dog' });\n * ```\n */\nclass MongoClient extends mongo_types_1.TypedEventEmitter {\n    constructor(url, options) {\n        super();\n        this[kOptions] = (0, connection_string_1.parseOptions)(url, this, options);\n        this.mongoLogger = new mongo_logger_1.MongoLogger(this[kOptions].mongoLoggerOptions);\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const client = this;\n        // The internal state\n        this.s = {\n            url,\n            bsonOptions: (0, bson_1.resolveBSONOptions)(this[kOptions]),\n            namespace: (0, utils_1.ns)('admin'),\n            hasBeenClosed: false,\n            sessionPool: new sessions_1.ServerSessionPool(this),\n            activeSessions: new Set(),\n            get options() {\n                return client[kOptions];\n            },\n            get readConcern() {\n                return client[kOptions].readConcern;\n            },\n            get writeConcern() {\n                return client[kOptions].writeConcern;\n            },\n            get readPreference() {\n                return client[kOptions].readPreference;\n            },\n            get isMongoClient() {\n                return true;\n            }\n        };\n    }\n    get options() {\n        return Object.freeze({ ...this[kOptions] });\n    }\n    get serverApi() {\n        return this[kOptions].serverApi && Object.freeze({ ...this[kOptions].serverApi });\n    }\n    /**\n     * Intended for APM use only\n     * @internal\n     */\n    get monitorCommands() {\n        return this[kOptions].monitorCommands;\n    }\n    set monitorCommands(value) {\n        this[kOptions].monitorCommands = value;\n    }\n    get autoEncrypter() {\n        return this[kOptions].autoEncrypter;\n    }\n    get readConcern() {\n        return this.s.readConcern;\n    }\n    get writeConcern() {\n        return this.s.writeConcern;\n    }\n    get readPreference() {\n        return this.s.readPreference;\n    }\n    get bsonOptions() {\n        return this.s.bsonOptions;\n    }\n    /**\n     * Connect to MongoDB using a url\n     *\n     * @see docs.mongodb.org/manual/reference/connection-string/\n     */\n    async connect() {\n        if (this.topology && this.topology.isConnected()) {\n            return this;\n        }\n        const options = this[kOptions];\n        if (typeof options.srvHost === 'string') {\n            const hosts = await (0, connection_string_1.resolveSRVRecord)(options);\n            for (const [index, host] of hosts.entries()) {\n                options.hosts[index] = host;\n            }\n        }\n        const topology = new topology_1.Topology(options.hosts, options);\n        // Events can be emitted before initialization is complete so we have to\n        // save the reference to the topology on the client ASAP if the event handlers need to access it\n        this.topology = topology;\n        topology.client = this;\n        topology.once(topology_1.Topology.OPEN, () => this.emit('open', this));\n        for (const event of constants_1.MONGO_CLIENT_EVENTS) {\n            topology.on(event, (...args) => this.emit(event, ...args));\n        }\n        const topologyConnect = async () => {\n            try {\n                await (0, util_1.promisify)(callback => topology.connect(options, callback))();\n            }\n            catch (error) {\n                topology.close({ force: true });\n                throw error;\n            }\n        };\n        if (this.autoEncrypter) {\n            const initAutoEncrypter = (0, util_1.promisify)(callback => this.autoEncrypter?.init(callback));\n            await initAutoEncrypter();\n            await topologyConnect();\n            await options.encrypter.connectInternalClient();\n        }\n        else {\n            await topologyConnect();\n        }\n        return this;\n    }\n    /**\n     * Close the client and its underlying connections\n     *\n     * @param force - Force close, emitting no events\n     */\n    async close(force = false) {\n        // There's no way to set hasBeenClosed back to false\n        Object.defineProperty(this.s, 'hasBeenClosed', {\n            value: true,\n            enumerable: true,\n            configurable: false,\n            writable: false\n        });\n        const activeSessionEnds = Array.from(this.s.activeSessions, session => session.endSession());\n        this.s.activeSessions.clear();\n        await Promise.all(activeSessionEnds);\n        if (this.topology == null) {\n            return;\n        }\n        // If we would attempt to select a server and get nothing back we short circuit\n        // to avoid the server selection timeout.\n        const selector = (0, server_selection_1.readPreferenceServerSelector)(read_preference_1.ReadPreference.primaryPreferred);\n        const topologyDescription = this.topology.description;\n        const serverDescriptions = Array.from(topologyDescription.servers.values());\n        const servers = selector(topologyDescription, serverDescriptions);\n        if (servers.length !== 0) {\n            const endSessions = Array.from(this.s.sessionPool.sessions, ({ id }) => id);\n            if (endSessions.length !== 0) {\n                await this.db('admin')\n                    .command({ endSessions }, { readPreference: read_preference_1.ReadPreference.primaryPreferred, noResponse: true })\n                    .catch(() => null); // outcome does not matter\n            }\n        }\n        // clear out references to old topology\n        const topology = this.topology;\n        this.topology = undefined;\n        await new Promise((resolve, reject) => {\n            topology.close({ force }, error => {\n                if (error)\n                    return reject(error);\n                const { encrypter } = this[kOptions];\n                if (encrypter) {\n                    return encrypter.close(this, force, error => {\n                        if (error)\n                            return reject(error);\n                        resolve();\n                    });\n                }\n                resolve();\n            });\n        });\n    }\n    /**\n     * Create a new Db instance sharing the current socket connections.\n     *\n     * @param dbName - The name of the database we want to use. If not provided, use database name from connection string.\n     * @param options - Optional settings for Db construction\n     */\n    db(dbName, options) {\n        options = options ?? {};\n        // Default to db from connection string if not provided\n        if (!dbName) {\n            dbName = this.options.dbName;\n        }\n        // Copy the options and add out internal override of the not shared flag\n        const finalOptions = Object.assign({}, this[kOptions], options);\n        // Return the db object\n        const db = new db_1.Db(this, dbName, finalOptions);\n        // Return the database\n        return db;\n    }\n    /**\n     * Connect to MongoDB using a url\n     *\n     * @remarks\n     * The programmatically provided options take precedence over the URI options.\n     *\n     * @see https://www.mongodb.com/docs/manual/reference/connection-string/\n     */\n    static async connect(url, options) {\n        const client = new this(url, options);\n        return client.connect();\n    }\n    /** Starts a new session on the server */\n    startSession(options) {\n        const session = new sessions_1.ClientSession(this, this.s.sessionPool, { explicit: true, ...options }, this[kOptions]);\n        this.s.activeSessions.add(session);\n        session.once('ended', () => {\n            this.s.activeSessions.delete(session);\n        });\n        return session;\n    }\n    async withSession(optionsOrOperation, callback) {\n        const options = {\n            // Always define an owner\n            owner: Symbol(),\n            // If it's an object inherit the options\n            ...(typeof optionsOrOperation === 'object' ? optionsOrOperation : {})\n        };\n        const withSessionCallback = typeof optionsOrOperation === 'function' ? optionsOrOperation : callback;\n        if (withSessionCallback == null) {\n            throw new error_1.MongoInvalidArgumentError('Missing required callback parameter');\n        }\n        const session = this.startSession(options);\n        try {\n            await withSessionCallback(session);\n        }\n        finally {\n            try {\n                await session.endSession();\n            }\n            catch {\n                // We are not concerned with errors from endSession()\n            }\n        }\n    }\n    /**\n     * Create a new Change Stream, watching for new changes (insertions, updates,\n     * replacements, deletions, and invalidations) in this cluster. Will ignore all\n     * changes to system collections, as well as the local, admin, and config databases.\n     *\n     * @remarks\n     * watch() accepts two generic arguments for distinct use cases:\n     * - The first is to provide the schema that may be defined for all the data within the current cluster\n     * - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n     *\n     * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n     * @param options - Optional settings for the command\n     * @typeParam TSchema - Type of the data being detected by the change stream\n     * @typeParam TChange - Type of the whole change stream document emitted\n     */\n    watch(pipeline = [], options = {}) {\n        // Allow optionally not specifying a pipeline\n        if (!Array.isArray(pipeline)) {\n            options = pipeline;\n            pipeline = [];\n        }\n        return new change_stream_1.ChangeStream(this, pipeline, (0, utils_1.resolveOptions)(this, options));\n    }\n}\nexports.MongoClient = MongoClient;\n//# sourceMappingURL=mongo_client.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MongoLogger = exports.MongoLoggableComponent = exports.SeverityLevel = void 0;\nconst process = require(\"process\");\nconst stream_1 = require(\"stream\");\nconst utils_1 = require(\"./utils\");\n/** @internal */\nexports.SeverityLevel = Object.freeze({\n    EMERGENCY: 'emergency',\n    ALERT: 'alert',\n    CRITICAL: 'critical',\n    ERROR: 'error',\n    WARNING: 'warn',\n    NOTICE: 'notice',\n    INFORMATIONAL: 'info',\n    DEBUG: 'debug',\n    TRACE: 'trace',\n    OFF: 'off'\n});\n/** @internal */\nexports.MongoLoggableComponent = Object.freeze({\n    COMMAND: 'command',\n    TOPOLOGY: 'topology',\n    SERVER_SELECTION: 'serverSelection',\n    CONNECTION: 'connection'\n});\n/**\n * Parses a string as one of SeverityLevel\n *\n * @param s - the value to be parsed\n * @returns one of SeverityLevel if value can be parsed as such, otherwise null\n */\nfunction parseSeverityFromString(s) {\n    const validSeverities = Object.values(exports.SeverityLevel);\n    const lowerSeverity = s?.toLowerCase();\n    if (lowerSeverity != null && validSeverities.includes(lowerSeverity)) {\n        return lowerSeverity;\n    }\n    return null;\n}\n/**\n * resolves the MONGODB_LOG_PATH and mongodbLogPath options from the environment and the\n * mongo client options respectively.\n *\n * @returns the Writable stream to write logs to\n */\nfunction resolveLogPath({ MONGODB_LOG_PATH }, { mongodbLogPath }) {\n    const isValidLogDestinationString = (destination) => ['stdout', 'stderr'].includes(destination.toLowerCase());\n    if (typeof mongodbLogPath === 'string' && isValidLogDestinationString(mongodbLogPath)) {\n        return mongodbLogPath.toLowerCase() === 'stderr' ? process.stderr : process.stdout;\n    }\n    // TODO(NODE-4813): check for minimal interface instead of instanceof Writable\n    if (typeof mongodbLogPath === 'object' && mongodbLogPath instanceof stream_1.Writable) {\n        return mongodbLogPath;\n    }\n    if (typeof MONGODB_LOG_PATH === 'string' && isValidLogDestinationString(MONGODB_LOG_PATH)) {\n        return MONGODB_LOG_PATH.toLowerCase() === 'stderr' ? process.stderr : process.stdout;\n    }\n    return process.stderr;\n}\n/** @internal */\nclass MongoLogger {\n    constructor(options) {\n        this.componentSeverities = options.componentSeverities;\n        this.maxDocumentLength = options.maxDocumentLength;\n        this.logDestination = options.logDestination;\n    }\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    emergency(component, message) { }\n    alert(component, message) { }\n    critical(component, message) { }\n    error(component, message) { }\n    warn(component, message) { }\n    notice(component, message) { }\n    info(component, message) { }\n    debug(component, message) { }\n    trace(component, message) { }\n    /**\n     * Merges options set through environment variables and the MongoClient, preferring environment\n     * variables when both are set, and substituting defaults for values not set. Options set in\n     * constructor take precedence over both environment variables and MongoClient options.\n     *\n     * @remarks\n     * When parsing component severity levels, invalid values are treated as unset and replaced with\n     * the default severity.\n     *\n     * @param envOptions - options set for the logger from the environment\n     * @param clientOptions - options set for the logger in the MongoClient options\n     * @returns a MongoLoggerOptions object to be used when instantiating a new MongoLogger\n     */\n    static resolveOptions(envOptions, clientOptions) {\n        // client options take precedence over env options\n        const combinedOptions = {\n            ...envOptions,\n            ...clientOptions,\n            mongodbLogPath: resolveLogPath(envOptions, clientOptions)\n        };\n        const defaultSeverity = parseSeverityFromString(combinedOptions.MONGODB_LOG_ALL) ?? exports.SeverityLevel.OFF;\n        return {\n            componentSeverities: {\n                command: parseSeverityFromString(combinedOptions.MONGODB_LOG_COMMAND) ?? defaultSeverity,\n                topology: parseSeverityFromString(combinedOptions.MONGODB_LOG_TOPOLOGY) ?? defaultSeverity,\n                serverSelection: parseSeverityFromString(combinedOptions.MONGODB_LOG_SERVER_SELECTION) ?? defaultSeverity,\n                connection: parseSeverityFromString(combinedOptions.MONGODB_LOG_CONNECTION) ?? defaultSeverity,\n                default: defaultSeverity\n            },\n            maxDocumentLength: (0, utils_1.parseUnsignedInteger)(combinedOptions.MONGODB_LOG_MAX_DOCUMENT_LENGTH) ?? 1000,\n            logDestination: combinedOptions.mongodbLogPath\n        };\n    }\n}\nexports.MongoLogger = MongoLogger;\n//# sourceMappingURL=mongo_logger.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationToken = exports.TypedEventEmitter = void 0;\nconst events_1 = require(\"events\");\n/**\n * Typescript type safe event emitter\n * @public\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass TypedEventEmitter extends events_1.EventEmitter {\n}\nexports.TypedEventEmitter = TypedEventEmitter;\n/** @public */\nclass CancellationToken extends TypedEventEmitter {\n}\nexports.CancellationToken = CancellationToken;\n//# sourceMappingURL=mongo_types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddUserOperation = void 0;\nconst crypto = require(\"crypto\");\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass AddUserOperation extends command_1.CommandOperation {\n    constructor(db, username, password, options) {\n        super(db, options);\n        this.db = db;\n        this.username = username;\n        this.password = password;\n        this.options = options ?? {};\n    }\n    execute(server, session, callback) {\n        const db = this.db;\n        const username = this.username;\n        const password = this.password;\n        const options = this.options;\n        // Error out if digestPassword set\n        // v5 removed the digestPassword option from AddUserOptions but we still want to throw\n        // an error when digestPassword is provided.\n        if ('digestPassword' in options && options.digestPassword != null) {\n            return callback(new error_1.MongoInvalidArgumentError('Option \"digestPassword\" not supported via addUser, use db.command(...) instead'));\n        }\n        let roles;\n        if (!options.roles || (Array.isArray(options.roles) && options.roles.length === 0)) {\n            (0, utils_1.emitWarningOnce)('Creating a user without roles is deprecated. Defaults to \"root\" if db is \"admin\" or \"dbOwner\" otherwise');\n            if (db.databaseName.toLowerCase() === 'admin') {\n                roles = ['root'];\n            }\n            else {\n                roles = ['dbOwner'];\n            }\n        }\n        else {\n            roles = Array.isArray(options.roles) ? options.roles : [options.roles];\n        }\n        let topology;\n        try {\n            topology = (0, utils_1.getTopology)(db);\n        }\n        catch (error) {\n            return callback(error);\n        }\n        const digestPassword = topology.lastHello().maxWireVersion >= 7;\n        let userPassword = password;\n        if (!digestPassword) {\n            // Use node md5 generator\n            const md5 = crypto.createHash('md5');\n            // Generate keys used for authentication\n            md5.update(`${username}:mongo:${password}`);\n            userPassword = md5.digest('hex');\n        }\n        // Build the command to execute\n        const command = {\n            createUser: username,\n            customData: options.customData || {},\n            roles: roles,\n            digestPassword\n        };\n        // No password\n        if (typeof password === 'string') {\n            command.pwd = userPassword;\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.AddUserOperation = AddUserOperation;\n(0, operation_1.defineAspects)(AddUserOperation, [operation_1.Aspect.WRITE_OPERATION]);\n//# sourceMappingURL=add_user.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AggregateOperation = exports.DB_AGGREGATE_COLLECTION = void 0;\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nexports.DB_AGGREGATE_COLLECTION = 1;\nconst MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT = 8;\n/** @internal */\nclass AggregateOperation extends command_1.CommandOperation {\n    constructor(ns, pipeline, options) {\n        super(undefined, { ...options, dbName: ns.db });\n        this.options = { ...options };\n        // Covers when ns.collection is null, undefined or the empty string, use DB_AGGREGATE_COLLECTION\n        this.target = ns.collection || exports.DB_AGGREGATE_COLLECTION;\n        this.pipeline = pipeline;\n        // determine if we have a write stage, override read preference if so\n        this.hasWriteStage = false;\n        if (typeof options?.out === 'string') {\n            this.pipeline = this.pipeline.concat({ $out: options.out });\n            this.hasWriteStage = true;\n        }\n        else if (pipeline.length > 0) {\n            const finalStage = pipeline[pipeline.length - 1];\n            if (finalStage.$out || finalStage.$merge) {\n                this.hasWriteStage = true;\n            }\n        }\n        if (this.hasWriteStage) {\n            this.trySecondaryWrite = true;\n        }\n        else {\n            delete this.options.writeConcern;\n        }\n        if (this.explain && this.writeConcern) {\n            throw new error_1.MongoInvalidArgumentError('Option \"explain\" cannot be used on an aggregate call with writeConcern');\n        }\n        if (options?.cursor != null && typeof options.cursor !== 'object') {\n            throw new error_1.MongoInvalidArgumentError('Cursor options must be an object');\n        }\n    }\n    get canRetryRead() {\n        return !this.hasWriteStage;\n    }\n    addToPipeline(stage) {\n        this.pipeline.push(stage);\n    }\n    execute(server, session, callback) {\n        const options = this.options;\n        const serverWireVersion = (0, utils_1.maxWireVersion)(server);\n        const command = { aggregate: this.target, pipeline: this.pipeline };\n        if (this.hasWriteStage && serverWireVersion < MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT) {\n            this.readConcern = undefined;\n        }\n        if (this.hasWriteStage && this.writeConcern) {\n            Object.assign(command, { writeConcern: this.writeConcern });\n        }\n        if (options.bypassDocumentValidation === true) {\n            command.bypassDocumentValidation = options.bypassDocumentValidation;\n        }\n        if (typeof options.allowDiskUse === 'boolean') {\n            command.allowDiskUse = options.allowDiskUse;\n        }\n        if (options.hint) {\n            command.hint = options.hint;\n        }\n        if (options.let) {\n            command.let = options.let;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (options.comment !== undefined) {\n            command.comment = options.comment;\n        }\n        command.cursor = options.cursor || {};\n        if (options.batchSize && !this.hasWriteStage) {\n            command.cursor.batchSize = options.batchSize;\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.AggregateOperation = AggregateOperation;\n(0, operation_1.defineAspects)(AggregateOperation, [\n    operation_1.Aspect.READ_OPERATION,\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.EXPLAINABLE,\n    operation_1.Aspect.CURSOR_CREATING\n]);\n//# sourceMappingURL=aggregate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkWriteOperation = void 0;\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass BulkWriteOperation extends operation_1.AbstractOperation {\n    constructor(collection, operations, options) {\n        super(options);\n        this.options = options;\n        this.collection = collection;\n        this.operations = operations;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        const operations = this.operations;\n        const options = { ...this.options, ...this.bsonOptions, readPreference: this.readPreference };\n        // Create the bulk operation\n        const bulk = options.ordered === false\n            ? coll.initializeUnorderedBulkOp(options)\n            : coll.initializeOrderedBulkOp(options);\n        // for each op go through and add to the bulk\n        try {\n            for (let i = 0; i < operations.length; i++) {\n                bulk.raw(operations[i]);\n            }\n        }\n        catch (err) {\n            return callback(err);\n        }\n        // Execute the bulk\n        bulk.execute({ ...options, session }).then(result => callback(undefined, result), error => callback(error));\n    }\n}\nexports.BulkWriteOperation = BulkWriteOperation;\n(0, operation_1.defineAspects)(BulkWriteOperation, [operation_1.Aspect.WRITE_OPERATION]);\n//# sourceMappingURL=bulk_write.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectionsOperation = void 0;\nconst collection_1 = require(\"../collection\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass CollectionsOperation extends operation_1.AbstractOperation {\n    constructor(db, options) {\n        super(options);\n        this.options = options;\n        this.db = db;\n    }\n    execute(server, session, callback) {\n        // Let's get the collection names\n        this.db\n            .listCollections({}, { ...this.options, nameOnly: true, readPreference: this.readPreference, session })\n            .toArray()\n            .then(documents => {\n            const collections = [];\n            for (const { name } of documents) {\n                if (!name.includes('$')) {\n                    // Filter collections removing any illegal ones\n                    collections.push(new collection_1.Collection(this.db, name, this.db.s.options));\n                }\n            }\n            // Return the collection objects\n            callback(undefined, collections);\n        }, error => callback(error));\n    }\n}\nexports.CollectionsOperation = CollectionsOperation;\n//# sourceMappingURL=collections.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandOperation = void 0;\nconst error_1 = require(\"../error\");\nconst explain_1 = require(\"../explain\");\nconst read_concern_1 = require(\"../read_concern\");\nconst server_selection_1 = require(\"../sdam/server_selection\");\nconst utils_1 = require(\"../utils\");\nconst write_concern_1 = require(\"../write_concern\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass CommandOperation extends operation_1.AbstractOperation {\n    constructor(parent, options) {\n        super(options);\n        this.options = options ?? {};\n        // NOTE: this was explicitly added for the add/remove user operations, it's likely\n        //       something we'd want to reconsider. Perhaps those commands can use `Admin`\n        //       as a parent?\n        const dbNameOverride = options?.dbName || options?.authdb;\n        if (dbNameOverride) {\n            this.ns = new utils_1.MongoDBNamespace(dbNameOverride, '$cmd');\n        }\n        else {\n            this.ns = parent\n                ? parent.s.namespace.withCollection('$cmd')\n                : new utils_1.MongoDBNamespace('admin', '$cmd');\n        }\n        this.readConcern = read_concern_1.ReadConcern.fromOptions(options);\n        this.writeConcern = write_concern_1.WriteConcern.fromOptions(options);\n        if (this.hasAspect(operation_1.Aspect.EXPLAINABLE)) {\n            this.explain = explain_1.Explain.fromOptions(options);\n        }\n        else if (options?.explain != null) {\n            throw new error_1.MongoInvalidArgumentError(`Option \"explain\" is not supported on this command`);\n        }\n    }\n    get canRetryWrite() {\n        if (this.hasAspect(operation_1.Aspect.EXPLAINABLE)) {\n            return this.explain == null;\n        }\n        return true;\n    }\n    executeCommand(server, session, cmd, callback) {\n        // TODO: consider making this a non-enumerable property\n        this.server = server;\n        const options = {\n            ...this.options,\n            ...this.bsonOptions,\n            readPreference: this.readPreference,\n            session\n        };\n        const serverWireVersion = (0, utils_1.maxWireVersion)(server);\n        const inTransaction = this.session && this.session.inTransaction();\n        if (this.readConcern && (0, utils_1.commandSupportsReadConcern)(cmd) && !inTransaction) {\n            Object.assign(cmd, { readConcern: this.readConcern });\n        }\n        if (this.trySecondaryWrite && serverWireVersion < server_selection_1.MIN_SECONDARY_WRITE_WIRE_VERSION) {\n            options.omitReadPreference = true;\n        }\n        if (this.writeConcern && this.hasAspect(operation_1.Aspect.WRITE_OPERATION) && !inTransaction) {\n            Object.assign(cmd, { writeConcern: this.writeConcern });\n        }\n        if (options.collation &&\n            typeof options.collation === 'object' &&\n            !this.hasAspect(operation_1.Aspect.SKIP_COLLATION)) {\n            Object.assign(cmd, { collation: options.collation });\n        }\n        if (typeof options.maxTimeMS === 'number') {\n            cmd.maxTimeMS = options.maxTimeMS;\n        }\n        if (this.hasAspect(operation_1.Aspect.EXPLAINABLE) && this.explain) {\n            cmd = (0, utils_1.decorateWithExplain)(cmd, this.explain);\n        }\n        server.command(this.ns, cmd, options, callback);\n    }\n}\nexports.CommandOperation = CommandOperation;\n//# sourceMappingURL=command.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareDocs = exports.indexInformation = void 0;\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nfunction indexInformation(db, name, _optionsOrCallback, _callback) {\n    let options = _optionsOrCallback;\n    let callback = _callback;\n    if ('function' === typeof _optionsOrCallback) {\n        callback = _optionsOrCallback;\n        options = {};\n    }\n    // If we specified full information\n    const full = options.full == null ? false : options.full;\n    let topology;\n    try {\n        topology = (0, utils_1.getTopology)(db);\n    }\n    catch (error) {\n        return callback(error);\n    }\n    // Did the user destroy the topology\n    if (topology.isDestroyed())\n        return callback(new error_1.MongoTopologyClosedError());\n    // Process all the results from the index command and collection\n    function processResults(indexes) {\n        // Contains all the information\n        const info = {};\n        // Process all the indexes\n        for (let i = 0; i < indexes.length; i++) {\n            const index = indexes[i];\n            // Let's unpack the object\n            info[index.name] = [];\n            for (const name in index.key) {\n                info[index.name].push([name, index.key[name]]);\n            }\n        }\n        return info;\n    }\n    // Get the list of indexes of the specified collection\n    db.collection(name)\n        .listIndexes(options)\n        .toArray()\n        .then(indexes => {\n        if (!Array.isArray(indexes))\n            return callback(undefined, []);\n        if (full)\n            return callback(undefined, indexes);\n        callback(undefined, processResults(indexes));\n    }, error => callback(error));\n}\nexports.indexInformation = indexInformation;\nfunction prepareDocs(coll, docs, options) {\n    const forceServerObjectId = typeof options.forceServerObjectId === 'boolean'\n        ? options.forceServerObjectId\n        : coll.s.db.options?.forceServerObjectId;\n    // no need to modify the docs if server sets the ObjectId\n    if (forceServerObjectId === true) {\n        return docs;\n    }\n    return docs.map(doc => {\n        if (doc._id == null) {\n            doc._id = coll.s.pkFactory.createPk();\n        }\n        return doc;\n    });\n}\nexports.prepareDocs = prepareDocs;\n//# sourceMappingURL=common_functions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CountOperation = void 0;\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass CountOperation extends command_1.CommandOperation {\n    constructor(namespace, filter, options) {\n        super({ s: { namespace: namespace } }, options);\n        this.options = options;\n        this.collectionName = namespace.collection;\n        this.query = filter;\n    }\n    execute(server, session, callback) {\n        const options = this.options;\n        const cmd = {\n            count: this.collectionName,\n            query: this.query\n        };\n        if (typeof options.limit === 'number') {\n            cmd.limit = options.limit;\n        }\n        if (typeof options.skip === 'number') {\n            cmd.skip = options.skip;\n        }\n        if (options.hint != null) {\n            cmd.hint = options.hint;\n        }\n        if (typeof options.maxTimeMS === 'number') {\n            cmd.maxTimeMS = options.maxTimeMS;\n        }\n        super.executeCommand(server, session, cmd, (err, result) => {\n            callback(err, result ? result.n : 0);\n        });\n    }\n}\nexports.CountOperation = CountOperation;\n(0, operation_1.defineAspects)(CountOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);\n//# sourceMappingURL=count.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CountDocumentsOperation = void 0;\nconst aggregate_1 = require(\"./aggregate\");\n/** @internal */\nclass CountDocumentsOperation extends aggregate_1.AggregateOperation {\n    constructor(collection, query, options) {\n        const pipeline = [];\n        pipeline.push({ $match: query });\n        if (typeof options.skip === 'number') {\n            pipeline.push({ $skip: options.skip });\n        }\n        if (typeof options.limit === 'number') {\n            pipeline.push({ $limit: options.limit });\n        }\n        pipeline.push({ $group: { _id: 1, n: { $sum: 1 } } });\n        super(collection.s.namespace, pipeline, options);\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, result) => {\n            if (err || !result) {\n                callback(err);\n                return;\n            }\n            // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n            const response = result;\n            if (response.cursor == null || response.cursor.firstBatch == null) {\n                callback(undefined, 0);\n                return;\n            }\n            const docs = response.cursor.firstBatch;\n            callback(undefined, docs.length ? docs[0].n : 0);\n        });\n    }\n}\nexports.CountDocumentsOperation = CountDocumentsOperation;\n//# sourceMappingURL=count_documents.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateCollectionOperation = void 0;\nconst collection_1 = require(\"../collection\");\nconst command_1 = require(\"./command\");\nconst indexes_1 = require(\"./indexes\");\nconst operation_1 = require(\"./operation\");\nconst ILLEGAL_COMMAND_FIELDS = new Set([\n    'w',\n    'wtimeout',\n    'j',\n    'fsync',\n    'autoIndexId',\n    'pkFactory',\n    'raw',\n    'readPreference',\n    'session',\n    'readConcern',\n    'writeConcern',\n    'raw',\n    'fieldsAsRaw',\n    'useBigInt64',\n    'promoteLongs',\n    'promoteValues',\n    'promoteBuffers',\n    'bsonRegExp',\n    'serializeFunctions',\n    'ignoreUndefined',\n    'enableUtf8Validation'\n]);\n/** @internal */\nclass CreateCollectionOperation extends command_1.CommandOperation {\n    constructor(db, name, options = {}) {\n        super(db, options);\n        this.options = options;\n        this.db = db;\n        this.name = name;\n    }\n    execute(server, session, callback) {\n        (async () => {\n            const db = this.db;\n            const name = this.name;\n            const options = this.options;\n            const encryptedFields = options.encryptedFields ??\n                db.s.client.options.autoEncryption?.encryptedFieldsMap?.[`${db.databaseName}.${name}`];\n            if (encryptedFields) {\n                // Create auxilliary collections for queryable encryption support.\n                const escCollection = encryptedFields.escCollection ?? `enxcol_.${name}.esc`;\n                const eccCollection = encryptedFields.eccCollection ?? `enxcol_.${name}.ecc`;\n                const ecocCollection = encryptedFields.ecocCollection ?? `enxcol_.${name}.ecoc`;\n                for (const collectionName of [escCollection, eccCollection, ecocCollection]) {\n                    const createOp = new CreateCollectionOperation(db, collectionName, {\n                        clusteredIndex: {\n                            key: { _id: 1 },\n                            unique: true\n                        }\n                    });\n                    await createOp.executeWithoutEncryptedFieldsCheck(server, session);\n                }\n                if (!options.encryptedFields) {\n                    this.options = { ...this.options, encryptedFields };\n                }\n            }\n            const coll = await this.executeWithoutEncryptedFieldsCheck(server, session);\n            if (encryptedFields) {\n                // Create the required index for queryable encryption support.\n                const createIndexOp = new indexes_1.CreateIndexOperation(db, name, { __safeContent__: 1 }, {});\n                await new Promise((resolve, reject) => {\n                    createIndexOp.execute(server, session, err => (err ? reject(err) : resolve()));\n                });\n            }\n            return coll;\n        })().then(coll => callback(undefined, coll), err => callback(err));\n    }\n    executeWithoutEncryptedFieldsCheck(server, session) {\n        return new Promise((resolve, reject) => {\n            const db = this.db;\n            const name = this.name;\n            const options = this.options;\n            const done = err => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(new collection_1.Collection(db, name, options));\n            };\n            const cmd = { create: name };\n            for (const n in options) {\n                if (options[n] != null &&\n                    typeof options[n] !== 'function' &&\n                    !ILLEGAL_COMMAND_FIELDS.has(n)) {\n                    cmd[n] = options[n];\n                }\n            }\n            // otherwise just execute the command\n            super.executeCommand(server, session, cmd, done);\n        });\n    }\n}\nexports.CreateCollectionOperation = CreateCollectionOperation;\n(0, operation_1.defineAspects)(CreateCollectionOperation, [operation_1.Aspect.WRITE_OPERATION]);\n//# sourceMappingURL=create_collection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeDeleteStatement = exports.DeleteManyOperation = exports.DeleteOneOperation = exports.DeleteOperation = void 0;\nconst error_1 = require(\"../error\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass DeleteOperation extends command_1.CommandOperation {\n    constructor(ns, statements, options) {\n        super(undefined, options);\n        this.options = options;\n        this.ns = ns;\n        this.statements = statements;\n    }\n    get canRetryWrite() {\n        if (super.canRetryWrite === false) {\n            return false;\n        }\n        return this.statements.every(op => (op.limit != null ? op.limit > 0 : true));\n    }\n    execute(server, session, callback) {\n        const options = this.options ?? {};\n        const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n        const command = {\n            delete: this.ns.collection,\n            deletes: this.statements,\n            ordered\n        };\n        if (options.let) {\n            command.let = options.let;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (options.comment !== undefined) {\n            command.comment = options.comment;\n        }\n        const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n        if (unacknowledgedWrite) {\n            if (this.statements.find((o) => o.hint)) {\n                // TODO(NODE-3541): fix error for hint with unacknowledged writes\n                callback(new error_1.MongoCompatibilityError(`hint is not supported with unacknowledged writes`));\n                return;\n            }\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.DeleteOperation = DeleteOperation;\nclass DeleteOneOperation extends DeleteOperation {\n    constructor(collection, filter, options) {\n        super(collection.s.namespace, [makeDeleteStatement(filter, { ...options, limit: 1 })], options);\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, res) => {\n            if (err || res == null)\n                return callback(err);\n            if (res.code)\n                return callback(new error_1.MongoServerError(res));\n            if (res.writeErrors)\n                return callback(new error_1.MongoServerError(res.writeErrors[0]));\n            if (this.explain)\n                return callback(undefined, res);\n            callback(undefined, {\n                acknowledged: this.writeConcern?.w !== 0 ?? true,\n                deletedCount: res.n\n            });\n        });\n    }\n}\nexports.DeleteOneOperation = DeleteOneOperation;\nclass DeleteManyOperation extends DeleteOperation {\n    constructor(collection, filter, options) {\n        super(collection.s.namespace, [makeDeleteStatement(filter, options)], options);\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, res) => {\n            if (err || res == null)\n                return callback(err);\n            if (res.code)\n                return callback(new error_1.MongoServerError(res));\n            if (res.writeErrors)\n                return callback(new error_1.MongoServerError(res.writeErrors[0]));\n            if (this.explain)\n                return callback(undefined, res);\n            callback(undefined, {\n                acknowledged: this.writeConcern?.w !== 0 ?? true,\n                deletedCount: res.n\n            });\n        });\n    }\n}\nexports.DeleteManyOperation = DeleteManyOperation;\nfunction makeDeleteStatement(filter, options) {\n    const op = {\n        q: filter,\n        limit: typeof options.limit === 'number' ? options.limit : 0\n    };\n    if (options.collation) {\n        op.collation = options.collation;\n    }\n    if (options.hint) {\n        op.hint = options.hint;\n    }\n    return op;\n}\nexports.makeDeleteStatement = makeDeleteStatement;\n(0, operation_1.defineAspects)(DeleteOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DeleteOneOperation, [\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.WRITE_OPERATION,\n    operation_1.Aspect.EXPLAINABLE,\n    operation_1.Aspect.SKIP_COLLATION\n]);\n(0, operation_1.defineAspects)(DeleteManyOperation, [\n    operation_1.Aspect.WRITE_OPERATION,\n    operation_1.Aspect.EXPLAINABLE,\n    operation_1.Aspect.SKIP_COLLATION\n]);\n//# sourceMappingURL=delete.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DistinctOperation = void 0;\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/**\n * Return a list of distinct values for the given key across a collection.\n * @internal\n */\nclass DistinctOperation extends command_1.CommandOperation {\n    /**\n     * Construct a Distinct operation.\n     *\n     * @param collection - Collection instance.\n     * @param key - Field of the document to find distinct values for.\n     * @param query - The query for filtering the set of documents to which we apply the distinct filter.\n     * @param options - Optional settings. See Collection.prototype.distinct for a list of options.\n     */\n    constructor(collection, key, query, options) {\n        super(collection, options);\n        this.options = options ?? {};\n        this.collection = collection;\n        this.key = key;\n        this.query = query;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        const key = this.key;\n        const query = this.query;\n        const options = this.options;\n        // Distinct command\n        const cmd = {\n            distinct: coll.collectionName,\n            key: key,\n            query: query\n        };\n        // Add maxTimeMS if defined\n        if (typeof options.maxTimeMS === 'number') {\n            cmd.maxTimeMS = options.maxTimeMS;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (typeof options.comment !== 'undefined') {\n            cmd.comment = options.comment;\n        }\n        // Do we have a readConcern specified\n        (0, utils_1.decorateWithReadConcern)(cmd, coll, options);\n        // Have we specified collation\n        try {\n            (0, utils_1.decorateWithCollation)(cmd, coll, options);\n        }\n        catch (err) {\n            return callback(err);\n        }\n        super.executeCommand(server, session, cmd, (err, result) => {\n            if (err) {\n                callback(err);\n                return;\n            }\n            callback(undefined, this.explain ? result : result.values);\n        });\n    }\n}\nexports.DistinctOperation = DistinctOperation;\n(0, operation_1.defineAspects)(DistinctOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.EXPLAINABLE]);\n//# sourceMappingURL=distinct.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DropDatabaseOperation = exports.DropCollectionOperation = void 0;\nconst error_1 = require(\"../error\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass DropCollectionOperation extends command_1.CommandOperation {\n    constructor(db, name, options = {}) {\n        super(db, options);\n        this.db = db;\n        this.options = options;\n        this.name = name;\n    }\n    execute(server, session, callback) {\n        (async () => {\n            const db = this.db;\n            const options = this.options;\n            const name = this.name;\n            const encryptedFieldsMap = db.s.client.options.autoEncryption?.encryptedFieldsMap;\n            let encryptedFields = options.encryptedFields ?? encryptedFieldsMap?.[`${db.databaseName}.${name}`];\n            if (!encryptedFields && encryptedFieldsMap) {\n                // If the MongoClient was configured with an encryptedFieldsMap,\n                // and no encryptedFields config was available in it or explicitly\n                // passed as an argument, the spec tells us to look one up using\n                // listCollections().\n                const listCollectionsResult = await db\n                    .listCollections({ name }, { nameOnly: false })\n                    .toArray();\n                encryptedFields = listCollectionsResult?.[0]?.options?.encryptedFields;\n            }\n            if (encryptedFields) {\n                const escCollection = encryptedFields.escCollection || `enxcol_.${name}.esc`;\n                const eccCollection = encryptedFields.eccCollection || `enxcol_.${name}.ecc`;\n                const ecocCollection = encryptedFields.ecocCollection || `enxcol_.${name}.ecoc`;\n                for (const collectionName of [escCollection, eccCollection, ecocCollection]) {\n                    // Drop auxilliary collections, ignoring potential NamespaceNotFound errors.\n                    const dropOp = new DropCollectionOperation(db, collectionName);\n                    try {\n                        await dropOp.executeWithoutEncryptedFieldsCheck(server, session);\n                    }\n                    catch (err) {\n                        if (!(err instanceof error_1.MongoServerError) ||\n                            err.code !== error_1.MONGODB_ERROR_CODES.NamespaceNotFound) {\n                            throw err;\n                        }\n                    }\n                }\n            }\n            return this.executeWithoutEncryptedFieldsCheck(server, session);\n        })().then(result => callback(undefined, result), err => callback(err));\n    }\n    executeWithoutEncryptedFieldsCheck(server, session) {\n        return new Promise((resolve, reject) => {\n            super.executeCommand(server, session, { drop: this.name }, (err, result) => {\n                if (err)\n                    return reject(err);\n                resolve(!!result.ok);\n            });\n        });\n    }\n}\nexports.DropCollectionOperation = DropCollectionOperation;\n/** @internal */\nclass DropDatabaseOperation extends command_1.CommandOperation {\n    constructor(db, options) {\n        super(db, options);\n        this.options = options;\n    }\n    execute(server, session, callback) {\n        super.executeCommand(server, session, { dropDatabase: 1 }, (err, result) => {\n            if (err)\n                return callback(err);\n            if (result.ok)\n                return callback(undefined, true);\n            callback(undefined, false);\n        });\n    }\n}\nexports.DropDatabaseOperation = DropDatabaseOperation;\n(0, operation_1.defineAspects)(DropCollectionOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DropDatabaseOperation, [operation_1.Aspect.WRITE_OPERATION]);\n//# sourceMappingURL=drop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EstimatedDocumentCountOperation = void 0;\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass EstimatedDocumentCountOperation extends command_1.CommandOperation {\n    constructor(collection, options = {}) {\n        super(collection, options);\n        this.options = options;\n        this.collectionName = collection.collectionName;\n    }\n    execute(server, session, callback) {\n        const cmd = { count: this.collectionName };\n        if (typeof this.options.maxTimeMS === 'number') {\n            cmd.maxTimeMS = this.options.maxTimeMS;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (this.options.comment !== undefined) {\n            cmd.comment = this.options.comment;\n        }\n        super.executeCommand(server, session, cmd, (err, response) => {\n            if (err) {\n                callback(err);\n                return;\n            }\n            callback(undefined, response?.n || 0);\n        });\n    }\n}\nexports.EstimatedDocumentCountOperation = EstimatedDocumentCountOperation;\n(0, operation_1.defineAspects)(EstimatedDocumentCountOperation, [\n    operation_1.Aspect.READ_OPERATION,\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.CURSOR_CREATING\n]);\n//# sourceMappingURL=estimated_document_count.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.executeOperation = void 0;\nconst error_1 = require(\"../error\");\nconst read_preference_1 = require(\"../read_preference\");\nconst server_selection_1 = require(\"../sdam/server_selection\");\nconst utils_1 = require(\"../utils\");\nconst operation_1 = require(\"./operation\");\nconst MMAPv1_RETRY_WRITES_ERROR_CODE = error_1.MONGODB_ERROR_CODES.IllegalOperation;\nconst MMAPv1_RETRY_WRITES_ERROR_MESSAGE = 'This MongoDB deployment does not support retryable writes. Please add retryWrites=false to your connection string.';\nfunction executeOperation(client, operation, callback) {\n    return (0, utils_1.maybeCallback)(() => executeOperationAsync(client, operation), callback);\n}\nexports.executeOperation = executeOperation;\nasync function executeOperationAsync(client, operation) {\n    if (!(operation instanceof operation_1.AbstractOperation)) {\n        // TODO(NODE-3483): Extend MongoRuntimeError\n        throw new error_1.MongoRuntimeError('This method requires a valid operation instance');\n    }\n    if (client.topology == null) {\n        // Auto connect on operation\n        if (client.s.hasBeenClosed) {\n            throw new error_1.MongoNotConnectedError('Client must be connected before running operations');\n        }\n        client.s.options[Symbol.for('@@mdb.skipPingOnConnect')] = true;\n        try {\n            await client.connect();\n        }\n        finally {\n            delete client.s.options[Symbol.for('@@mdb.skipPingOnConnect')];\n        }\n    }\n    const { topology } = client;\n    if (topology == null) {\n        throw new error_1.MongoRuntimeError('client.connect did not create a topology but also did not throw');\n    }\n    // The driver sessions spec mandates that we implicitly create sessions for operations\n    // that are not explicitly provided with a session.\n    let session = operation.session;\n    let owner;\n    if (session == null) {\n        owner = Symbol();\n        session = client.startSession({ owner, explicit: false });\n    }\n    else if (session.hasEnded) {\n        throw new error_1.MongoExpiredSessionError('Use of expired sessions is not permitted');\n    }\n    else if (session.snapshotEnabled && !topology.capabilities.supportsSnapshotReads) {\n        throw new error_1.MongoCompatibilityError('Snapshot reads require MongoDB 5.0 or later');\n    }\n    const readPreference = operation.readPreference ?? read_preference_1.ReadPreference.primary;\n    const inTransaction = !!session?.inTransaction();\n    if (inTransaction && !readPreference.equals(read_preference_1.ReadPreference.primary)) {\n        throw new error_1.MongoTransactionError(`Read preference in a transaction must be primary, not: ${readPreference.mode}`);\n    }\n    if (session?.isPinned && session.transaction.isCommitted && !operation.bypassPinningCheck) {\n        session.unpin();\n    }\n    let selector;\n    if (operation.hasAspect(operation_1.Aspect.MUST_SELECT_SAME_SERVER)) {\n        // GetMore and KillCursor operations must always select the same server, but run through\n        // server selection to potentially force monitor checks if the server is\n        // in an unknown state.\n        selector = (0, server_selection_1.sameServerSelector)(operation.server?.description);\n    }\n    else if (operation.trySecondaryWrite) {\n        // If operation should try to write to secondary use the custom server selector\n        // otherwise provide the read preference.\n        selector = (0, server_selection_1.secondaryWritableServerSelector)(topology.commonWireVersion, readPreference);\n    }\n    else {\n        selector = readPreference;\n    }\n    const server = await topology.selectServerAsync(selector, { session });\n    if (session == null) {\n        // No session also means it is not retryable, early exit\n        return operation.executeAsync(server, undefined);\n    }\n    if (!operation.hasAspect(operation_1.Aspect.RETRYABLE)) {\n        // non-retryable operation, early exit\n        try {\n            return await operation.executeAsync(server, session);\n        }\n        finally {\n            if (session?.owner != null && session.owner === owner) {\n                await session.endSession().catch(() => null);\n            }\n        }\n    }\n    const willRetryRead = topology.s.options.retryReads && !inTransaction && operation.canRetryRead;\n    const willRetryWrite = topology.s.options.retryWrites &&\n        !inTransaction &&\n        (0, utils_1.supportsRetryableWrites)(server) &&\n        operation.canRetryWrite;\n    const hasReadAspect = operation.hasAspect(operation_1.Aspect.READ_OPERATION);\n    const hasWriteAspect = operation.hasAspect(operation_1.Aspect.WRITE_OPERATION);\n    const willRetry = (hasReadAspect && willRetryRead) || (hasWriteAspect && willRetryWrite);\n    if (hasWriteAspect && willRetryWrite) {\n        operation.options.willRetryWrite = true;\n        session.incrementTransactionNumber();\n    }\n    try {\n        return await operation.executeAsync(server, session);\n    }\n    catch (operationError) {\n        if (willRetry && operationError instanceof error_1.MongoError) {\n            return await retryOperation(operation, operationError, {\n                session,\n                topology,\n                selector\n            });\n        }\n        throw operationError;\n    }\n    finally {\n        if (session?.owner != null && session.owner === owner) {\n            await session.endSession().catch(() => null);\n        }\n    }\n}\nasync function retryOperation(operation, originalError, { session, topology, selector }) {\n    const isWriteOperation = operation.hasAspect(operation_1.Aspect.WRITE_OPERATION);\n    const isReadOperation = operation.hasAspect(operation_1.Aspect.READ_OPERATION);\n    if (isWriteOperation && originalError.code === MMAPv1_RETRY_WRITES_ERROR_CODE) {\n        throw new error_1.MongoServerError({\n            message: MMAPv1_RETRY_WRITES_ERROR_MESSAGE,\n            errmsg: MMAPv1_RETRY_WRITES_ERROR_MESSAGE,\n            originalError\n        });\n    }\n    if (isWriteOperation && !(0, error_1.isRetryableWriteError)(originalError)) {\n        throw originalError;\n    }\n    if (isReadOperation && !(0, error_1.isRetryableReadError)(originalError)) {\n        throw originalError;\n    }\n    if (originalError instanceof error_1.MongoNetworkError &&\n        session.isPinned &&\n        !session.inTransaction() &&\n        operation.hasAspect(operation_1.Aspect.CURSOR_CREATING)) {\n        // If we have a cursor and the initial command fails with a network error,\n        // we can retry it on another connection. So we need to check it back in, clear the\n        // pool for the service id, and retry again.\n        session.unpin({ force: true, forceClear: true });\n    }\n    // select a new server, and attempt to retry the operation\n    const server = await topology.selectServerAsync(selector, { session });\n    if (isWriteOperation && !(0, utils_1.supportsRetryableWrites)(server)) {\n        throw new error_1.MongoUnexpectedServerResponseError('Selected server does not support retryable writes');\n    }\n    try {\n        return await operation.executeAsync(server, session);\n    }\n    catch (retryError) {\n        if (retryError instanceof error_1.MongoError &&\n            retryError.hasErrorLabel(error_1.MongoErrorLabel.NoWritesPerformed)) {\n            throw originalError;\n        }\n        throw retryError;\n    }\n}\n//# sourceMappingURL=execute_operation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FindOperation = void 0;\nconst buffer_1 = require(\"buffer\");\nconst error_1 = require(\"../error\");\nconst read_concern_1 = require(\"../read_concern\");\nconst sort_1 = require(\"../sort\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass FindOperation extends command_1.CommandOperation {\n    constructor(collection, ns, filter = {}, options = {}) {\n        super(collection, options);\n        this.options = { ...options };\n        delete this.options.writeConcern;\n        this.ns = ns;\n        if (typeof filter !== 'object' || Array.isArray(filter)) {\n            throw new error_1.MongoInvalidArgumentError('Query filter must be a plain object or ObjectId');\n        }\n        // If the filter is a buffer, validate that is a valid BSON document\n        if (buffer_1.Buffer.isBuffer(filter)) {\n            const objectSize = filter[0] | (filter[1] << 8) | (filter[2] << 16) | (filter[3] << 24);\n            if (objectSize !== filter.length) {\n                throw new error_1.MongoInvalidArgumentError(`Query filter raw message size does not match message header size [${filter.length}] != [${objectSize}]`);\n            }\n        }\n        // special case passing in an ObjectId as a filter\n        this.filter = filter != null && filter._bsontype === 'ObjectID' ? { _id: filter } : filter;\n    }\n    execute(server, session, callback) {\n        this.server = server;\n        const options = this.options;\n        let findCommand = makeFindCommand(this.ns, this.filter, options);\n        if (this.explain) {\n            findCommand = (0, utils_1.decorateWithExplain)(findCommand, this.explain);\n        }\n        server.command(this.ns, findCommand, {\n            ...this.options,\n            ...this.bsonOptions,\n            documentsReturnedIn: 'firstBatch',\n            session\n        }, callback);\n    }\n}\nexports.FindOperation = FindOperation;\nfunction makeFindCommand(ns, filter, options) {\n    const findCommand = {\n        find: ns.collection,\n        filter\n    };\n    if (options.sort) {\n        findCommand.sort = (0, sort_1.formatSort)(options.sort);\n    }\n    if (options.projection) {\n        let projection = options.projection;\n        if (projection && Array.isArray(projection)) {\n            projection = projection.length\n                ? projection.reduce((result, field) => {\n                    result[field] = 1;\n                    return result;\n                }, {})\n                : { _id: 1 };\n        }\n        findCommand.projection = projection;\n    }\n    if (options.hint) {\n        findCommand.hint = (0, utils_1.normalizeHintField)(options.hint);\n    }\n    if (typeof options.skip === 'number') {\n        findCommand.skip = options.skip;\n    }\n    if (typeof options.limit === 'number') {\n        if (options.limit < 0) {\n            findCommand.limit = -options.limit;\n            findCommand.singleBatch = true;\n        }\n        else {\n            findCommand.limit = options.limit;\n        }\n    }\n    if (typeof options.batchSize === 'number') {\n        if (options.batchSize < 0) {\n            if (options.limit &&\n                options.limit !== 0 &&\n                Math.abs(options.batchSize) < Math.abs(options.limit)) {\n                findCommand.limit = -options.batchSize;\n            }\n            findCommand.singleBatch = true;\n        }\n        else {\n            findCommand.batchSize = options.batchSize;\n        }\n    }\n    if (typeof options.singleBatch === 'boolean') {\n        findCommand.singleBatch = options.singleBatch;\n    }\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n        findCommand.comment = options.comment;\n    }\n    if (typeof options.maxTimeMS === 'number') {\n        findCommand.maxTimeMS = options.maxTimeMS;\n    }\n    const readConcern = read_concern_1.ReadConcern.fromOptions(options);\n    if (readConcern) {\n        findCommand.readConcern = readConcern.toJSON();\n    }\n    if (options.max) {\n        findCommand.max = options.max;\n    }\n    if (options.min) {\n        findCommand.min = options.min;\n    }\n    if (typeof options.returnKey === 'boolean') {\n        findCommand.returnKey = options.returnKey;\n    }\n    if (typeof options.showRecordId === 'boolean') {\n        findCommand.showRecordId = options.showRecordId;\n    }\n    if (typeof options.tailable === 'boolean') {\n        findCommand.tailable = options.tailable;\n    }\n    if (typeof options.oplogReplay === 'boolean') {\n        findCommand.oplogReplay = options.oplogReplay;\n    }\n    if (typeof options.timeout === 'boolean') {\n        findCommand.noCursorTimeout = !options.timeout;\n    }\n    else if (typeof options.noCursorTimeout === 'boolean') {\n        findCommand.noCursorTimeout = options.noCursorTimeout;\n    }\n    if (typeof options.awaitData === 'boolean') {\n        findCommand.awaitData = options.awaitData;\n    }\n    if (typeof options.allowPartialResults === 'boolean') {\n        findCommand.allowPartialResults = options.allowPartialResults;\n    }\n    if (options.collation) {\n        findCommand.collation = options.collation;\n    }\n    if (typeof options.allowDiskUse === 'boolean') {\n        findCommand.allowDiskUse = options.allowDiskUse;\n    }\n    if (options.let) {\n        findCommand.let = options.let;\n    }\n    return findCommand;\n}\n(0, operation_1.defineAspects)(FindOperation, [\n    operation_1.Aspect.READ_OPERATION,\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.EXPLAINABLE,\n    operation_1.Aspect.CURSOR_CREATING\n]);\n//# sourceMappingURL=find.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FindOneAndUpdateOperation = exports.FindOneAndReplaceOperation = exports.FindOneAndDeleteOperation = exports.ReturnDocument = void 0;\nconst error_1 = require(\"../error\");\nconst read_preference_1 = require(\"../read_preference\");\nconst sort_1 = require(\"../sort\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @public */\nexports.ReturnDocument = Object.freeze({\n    BEFORE: 'before',\n    AFTER: 'after'\n});\nfunction configureFindAndModifyCmdBaseUpdateOpts(cmdBase, options) {\n    cmdBase.new = options.returnDocument === exports.ReturnDocument.AFTER;\n    cmdBase.upsert = options.upsert === true;\n    if (options.bypassDocumentValidation === true) {\n        cmdBase.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n    return cmdBase;\n}\n/** @internal */\nclass FindAndModifyOperation extends command_1.CommandOperation {\n    constructor(collection, query, options) {\n        super(collection, options);\n        this.options = options ?? {};\n        this.cmdBase = {\n            remove: false,\n            new: false,\n            upsert: false\n        };\n        const sort = (0, sort_1.formatSort)(options.sort);\n        if (sort) {\n            this.cmdBase.sort = sort;\n        }\n        if (options.projection) {\n            this.cmdBase.fields = options.projection;\n        }\n        if (options.maxTimeMS) {\n            this.cmdBase.maxTimeMS = options.maxTimeMS;\n        }\n        // Decorate the findAndModify command with the write Concern\n        if (options.writeConcern) {\n            this.cmdBase.writeConcern = options.writeConcern;\n        }\n        if (options.let) {\n            this.cmdBase.let = options.let;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (options.comment !== undefined) {\n            this.cmdBase.comment = options.comment;\n        }\n        // force primary read preference\n        this.readPreference = read_preference_1.ReadPreference.primary;\n        this.collection = collection;\n        this.query = query;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        const query = this.query;\n        const options = { ...this.options, ...this.bsonOptions };\n        // Create findAndModify command object\n        const cmd = {\n            findAndModify: coll.collectionName,\n            query: query,\n            ...this.cmdBase\n        };\n        // Have we specified collation\n        try {\n            (0, utils_1.decorateWithCollation)(cmd, coll, options);\n        }\n        catch (err) {\n            return callback(err);\n        }\n        if (options.hint) {\n            // TODO: once this method becomes a CommandOperation we will have the server\n            // in place to check.\n            const unacknowledgedWrite = this.writeConcern?.w === 0;\n            if (unacknowledgedWrite || (0, utils_1.maxWireVersion)(server) < 8) {\n                callback(new error_1.MongoCompatibilityError('The current topology does not support a hint on findAndModify commands'));\n                return;\n            }\n            cmd.hint = options.hint;\n        }\n        // Execute the command\n        super.executeCommand(server, session, cmd, (err, result) => {\n            if (err)\n                return callback(err);\n            return callback(undefined, result);\n        });\n    }\n}\n/** @internal */\nclass FindOneAndDeleteOperation extends FindAndModifyOperation {\n    constructor(collection, filter, options) {\n        // Basic validation\n        if (filter == null || typeof filter !== 'object') {\n            throw new error_1.MongoInvalidArgumentError('Argument \"filter\" must be an object');\n        }\n        super(collection, filter, options);\n        this.cmdBase.remove = true;\n    }\n}\nexports.FindOneAndDeleteOperation = FindOneAndDeleteOperation;\n/** @internal */\nclass FindOneAndReplaceOperation extends FindAndModifyOperation {\n    constructor(collection, filter, replacement, options) {\n        if (filter == null || typeof filter !== 'object') {\n            throw new error_1.MongoInvalidArgumentError('Argument \"filter\" must be an object');\n        }\n        if (replacement == null || typeof replacement !== 'object') {\n            throw new error_1.MongoInvalidArgumentError('Argument \"replacement\" must be an object');\n        }\n        if ((0, utils_1.hasAtomicOperators)(replacement)) {\n            throw new error_1.MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n        }\n        super(collection, filter, options);\n        this.cmdBase.update = replacement;\n        configureFindAndModifyCmdBaseUpdateOpts(this.cmdBase, options);\n    }\n}\nexports.FindOneAndReplaceOperation = FindOneAndReplaceOperation;\n/** @internal */\nclass FindOneAndUpdateOperation extends FindAndModifyOperation {\n    constructor(collection, filter, update, options) {\n        if (filter == null || typeof filter !== 'object') {\n            throw new error_1.MongoInvalidArgumentError('Argument \"filter\" must be an object');\n        }\n        if (update == null || typeof update !== 'object') {\n            throw new error_1.MongoInvalidArgumentError('Argument \"update\" must be an object');\n        }\n        if (!(0, utils_1.hasAtomicOperators)(update)) {\n            throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n        super(collection, filter, options);\n        this.cmdBase.update = update;\n        configureFindAndModifyCmdBaseUpdateOpts(this.cmdBase, options);\n        if (options.arrayFilters) {\n            this.cmdBase.arrayFilters = options.arrayFilters;\n        }\n    }\n}\nexports.FindOneAndUpdateOperation = FindOneAndUpdateOperation;\n(0, operation_1.defineAspects)(FindAndModifyOperation, [\n    operation_1.Aspect.WRITE_OPERATION,\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.EXPLAINABLE\n]);\n//# sourceMappingURL=find_and_modify.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetMoreOperation = void 0;\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass GetMoreOperation extends operation_1.AbstractOperation {\n    constructor(ns, cursorId, server, options) {\n        super(options);\n        this.options = options;\n        this.ns = ns;\n        this.cursorId = cursorId;\n        this.server = server;\n    }\n    /**\n     * Although there is a server already associated with the get more operation, the signature\n     * for execute passes a server so we will just use that one.\n     */\n    execute(server, session, callback) {\n        if (server !== this.server) {\n            return callback(new error_1.MongoRuntimeError('Getmore must run on the same server operation began on'));\n        }\n        if (this.cursorId == null || this.cursorId.isZero()) {\n            return callback(new error_1.MongoRuntimeError('Unable to iterate cursor with no id'));\n        }\n        const collection = this.ns.collection;\n        if (collection == null) {\n            // Cursors should have adopted the namespace returned by MongoDB\n            // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n            return callback(new error_1.MongoRuntimeError('A collection name must be determined before getMore'));\n        }\n        const getMoreCmd = {\n            getMore: this.cursorId,\n            collection\n        };\n        if (typeof this.options.batchSize === 'number') {\n            getMoreCmd.batchSize = Math.abs(this.options.batchSize);\n        }\n        if (typeof this.options.maxAwaitTimeMS === 'number') {\n            getMoreCmd.maxTimeMS = this.options.maxAwaitTimeMS;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (this.options.comment !== undefined && (0, utils_1.maxWireVersion)(server) >= 9) {\n            getMoreCmd.comment = this.options.comment;\n        }\n        const commandOptions = {\n            returnFieldSelector: null,\n            documentsReturnedIn: 'nextBatch',\n            ...this.options\n        };\n        server.command(this.ns, getMoreCmd, commandOptions, callback);\n    }\n}\nexports.GetMoreOperation = GetMoreOperation;\n(0, operation_1.defineAspects)(GetMoreOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.MUST_SELECT_SAME_SERVER]);\n//# sourceMappingURL=get_more.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IndexInformationOperation = exports.IndexExistsOperation = exports.ListIndexesOperation = exports.DropIndexesOperation = exports.DropIndexOperation = exports.EnsureIndexOperation = exports.CreateIndexOperation = exports.CreateIndexesOperation = exports.IndexesOperation = void 0;\nconst error_1 = require(\"../error\");\nconst read_preference_1 = require(\"../read_preference\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst common_functions_1 = require(\"./common_functions\");\nconst operation_1 = require(\"./operation\");\nconst VALID_INDEX_OPTIONS = new Set([\n    'background',\n    'unique',\n    'name',\n    'partialFilterExpression',\n    'sparse',\n    'hidden',\n    'expireAfterSeconds',\n    'storageEngine',\n    'collation',\n    'version',\n    // text indexes\n    'weights',\n    'default_language',\n    'language_override',\n    'textIndexVersion',\n    // 2d-sphere indexes\n    '2dsphereIndexVersion',\n    // 2d indexes\n    'bits',\n    'min',\n    'max',\n    // geoHaystack Indexes\n    'bucketSize',\n    // wildcard indexes\n    'wildcardProjection'\n]);\nfunction isIndexDirection(x) {\n    return (typeof x === 'number' || x === '2d' || x === '2dsphere' || x === 'text' || x === 'geoHaystack');\n}\nfunction isSingleIndexTuple(t) {\n    return Array.isArray(t) && t.length === 2 && isIndexDirection(t[1]);\n}\nfunction makeIndexSpec(indexSpec, options) {\n    const key = new Map();\n    const indexSpecs = !Array.isArray(indexSpec) || isSingleIndexTuple(indexSpec) ? [indexSpec] : indexSpec;\n    // Iterate through array and handle different types\n    for (const spec of indexSpecs) {\n        if (typeof spec === 'string') {\n            key.set(spec, 1);\n        }\n        else if (Array.isArray(spec)) {\n            key.set(spec[0], spec[1] ?? 1);\n        }\n        else if (spec instanceof Map) {\n            for (const [property, value] of spec) {\n                key.set(property, value);\n            }\n        }\n        else if ((0, utils_1.isObject)(spec)) {\n            for (const [property, value] of Object.entries(spec)) {\n                key.set(property, value);\n            }\n        }\n    }\n    return { ...options, key };\n}\n/** @internal */\nclass IndexesOperation extends operation_1.AbstractOperation {\n    constructor(collection, options) {\n        super(options);\n        this.options = options;\n        this.collection = collection;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        const options = this.options;\n        (0, common_functions_1.indexInformation)(coll.s.db, coll.collectionName, { full: true, ...options, readPreference: this.readPreference, session }, callback);\n    }\n}\nexports.IndexesOperation = IndexesOperation;\n/** @internal */\nclass CreateIndexesOperation extends command_1.CommandOperation {\n    constructor(parent, collectionName, indexes, options) {\n        super(parent, options);\n        this.options = options ?? {};\n        this.collectionName = collectionName;\n        this.indexes = indexes.map(userIndex => {\n            // Ensure the key is a Map to preserve index key ordering\n            const key = userIndex.key instanceof Map ? userIndex.key : new Map(Object.entries(userIndex.key));\n            const name = userIndex.name != null ? userIndex.name : Array.from(key).flat().join('_');\n            const validIndexOptions = Object.fromEntries(Object.entries({ ...userIndex }).filter(([optionName]) => VALID_INDEX_OPTIONS.has(optionName)));\n            return {\n                ...validIndexOptions,\n                name,\n                key\n            };\n        });\n    }\n    execute(server, session, callback) {\n        const options = this.options;\n        const indexes = this.indexes;\n        const serverWireVersion = (0, utils_1.maxWireVersion)(server);\n        const cmd = { createIndexes: this.collectionName, indexes };\n        if (options.commitQuorum != null) {\n            if (serverWireVersion < 9) {\n                callback(new error_1.MongoCompatibilityError('Option `commitQuorum` for `createIndexes` not supported on servers < 4.4'));\n                return;\n            }\n            cmd.commitQuorum = options.commitQuorum;\n        }\n        // collation is set on each index, it should not be defined at the root\n        this.options.collation = undefined;\n        super.executeCommand(server, session, cmd, err => {\n            if (err) {\n                callback(err);\n                return;\n            }\n            const indexNames = indexes.map(index => index.name || '');\n            callback(undefined, indexNames);\n        });\n    }\n}\nexports.CreateIndexesOperation = CreateIndexesOperation;\n/** @internal */\nclass CreateIndexOperation extends CreateIndexesOperation {\n    constructor(parent, collectionName, indexSpec, options) {\n        super(parent, collectionName, [makeIndexSpec(indexSpec, options)], options);\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, indexNames) => {\n            if (err || !indexNames)\n                return callback(err);\n            return callback(undefined, indexNames[0]);\n        });\n    }\n}\nexports.CreateIndexOperation = CreateIndexOperation;\n/** @internal */\nclass EnsureIndexOperation extends CreateIndexOperation {\n    constructor(db, collectionName, indexSpec, options) {\n        super(db, collectionName, indexSpec, options);\n        this.readPreference = read_preference_1.ReadPreference.primary;\n        this.db = db;\n        this.collectionName = collectionName;\n    }\n    execute(server, session, callback) {\n        const indexName = this.indexes[0].name;\n        const cursor = this.db.collection(this.collectionName).listIndexes({ session });\n        cursor.toArray().then(indexes => {\n            indexes = Array.isArray(indexes) ? indexes : [indexes];\n            if (indexes.some(index => index.name === indexName)) {\n                callback(undefined, indexName);\n                return;\n            }\n            super.execute(server, session, callback);\n        }, error => {\n            if (error instanceof error_1.MongoError && error.code === error_1.MONGODB_ERROR_CODES.NamespaceNotFound) {\n                // ignore \"NamespaceNotFound\" errors\n                return super.execute(server, session, callback);\n            }\n            return callback(error);\n        });\n    }\n}\nexports.EnsureIndexOperation = EnsureIndexOperation;\n/** @internal */\nclass DropIndexOperation extends command_1.CommandOperation {\n    constructor(collection, indexName, options) {\n        super(collection, options);\n        this.options = options ?? {};\n        this.collection = collection;\n        this.indexName = indexName;\n    }\n    execute(server, session, callback) {\n        const cmd = { dropIndexes: this.collection.collectionName, index: this.indexName };\n        super.executeCommand(server, session, cmd, callback);\n    }\n}\nexports.DropIndexOperation = DropIndexOperation;\n/** @internal */\nclass DropIndexesOperation extends DropIndexOperation {\n    constructor(collection, options) {\n        super(collection, '*', options);\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, err => {\n            if (err)\n                return callback(err, false);\n            callback(undefined, true);\n        });\n    }\n}\nexports.DropIndexesOperation = DropIndexesOperation;\n/** @internal */\nclass ListIndexesOperation extends command_1.CommandOperation {\n    constructor(collection, options) {\n        super(collection, options);\n        this.options = { ...options };\n        delete this.options.writeConcern;\n        this.collectionNamespace = collection.s.namespace;\n    }\n    execute(server, session, callback) {\n        const serverWireVersion = (0, utils_1.maxWireVersion)(server);\n        const cursor = this.options.batchSize ? { batchSize: this.options.batchSize } : {};\n        const command = { listIndexes: this.collectionNamespace.collection, cursor };\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (serverWireVersion >= 9 && this.options.comment !== undefined) {\n            command.comment = this.options.comment;\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.ListIndexesOperation = ListIndexesOperation;\n/** @internal */\nclass IndexExistsOperation extends operation_1.AbstractOperation {\n    constructor(collection, indexes, options) {\n        super(options);\n        this.options = options;\n        this.collection = collection;\n        this.indexes = indexes;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        const indexes = this.indexes;\n        (0, common_functions_1.indexInformation)(coll.s.db, coll.collectionName, { ...this.options, readPreference: this.readPreference, session }, (err, indexInformation) => {\n            // If we have an error return\n            if (err != null)\n                return callback(err);\n            // Let's check for the index names\n            if (!Array.isArray(indexes))\n                return callback(undefined, indexInformation[indexes] != null);\n            // Check in list of indexes\n            for (let i = 0; i < indexes.length; i++) {\n                if (indexInformation[indexes[i]] == null) {\n                    return callback(undefined, false);\n                }\n            }\n            // All keys found return true\n            return callback(undefined, true);\n        });\n    }\n}\nexports.IndexExistsOperation = IndexExistsOperation;\n/** @internal */\nclass IndexInformationOperation extends operation_1.AbstractOperation {\n    constructor(db, name, options) {\n        super(options);\n        this.options = options ?? {};\n        this.db = db;\n        this.name = name;\n    }\n    execute(server, session, callback) {\n        const db = this.db;\n        const name = this.name;\n        (0, common_functions_1.indexInformation)(db, name, { ...this.options, readPreference: this.readPreference, session }, callback);\n    }\n}\nexports.IndexInformationOperation = IndexInformationOperation;\n(0, operation_1.defineAspects)(ListIndexesOperation, [\n    operation_1.Aspect.READ_OPERATION,\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.CURSOR_CREATING\n]);\n(0, operation_1.defineAspects)(CreateIndexesOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(CreateIndexOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(EnsureIndexOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DropIndexOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DropIndexesOperation, [operation_1.Aspect.WRITE_OPERATION]);\n//# sourceMappingURL=indexes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InsertManyOperation = exports.InsertOneOperation = exports.InsertOperation = void 0;\nconst error_1 = require(\"../error\");\nconst write_concern_1 = require(\"../write_concern\");\nconst bulk_write_1 = require(\"./bulk_write\");\nconst command_1 = require(\"./command\");\nconst common_functions_1 = require(\"./common_functions\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass InsertOperation extends command_1.CommandOperation {\n    constructor(ns, documents, options) {\n        super(undefined, options);\n        this.options = { ...options, checkKeys: options.checkKeys ?? false };\n        this.ns = ns;\n        this.documents = documents;\n    }\n    execute(server, session, callback) {\n        const options = this.options ?? {};\n        const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n        const command = {\n            insert: this.ns.collection,\n            documents: this.documents,\n            ordered\n        };\n        if (typeof options.bypassDocumentValidation === 'boolean') {\n            command.bypassDocumentValidation = options.bypassDocumentValidation;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (options.comment !== undefined) {\n            command.comment = options.comment;\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.InsertOperation = InsertOperation;\nclass InsertOneOperation extends InsertOperation {\n    constructor(collection, doc, options) {\n        super(collection.s.namespace, (0, common_functions_1.prepareDocs)(collection, [doc], options), options);\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, res) => {\n            if (err || res == null)\n                return callback(err);\n            if (res.code)\n                return callback(new error_1.MongoServerError(res));\n            if (res.writeErrors) {\n                // This should be a WriteError but we can't change it now because of error hierarchy\n                return callback(new error_1.MongoServerError(res.writeErrors[0]));\n            }\n            callback(undefined, {\n                acknowledged: this.writeConcern?.w !== 0 ?? true,\n                insertedId: this.documents[0]._id\n            });\n        });\n    }\n}\nexports.InsertOneOperation = InsertOneOperation;\n/** @internal */\nclass InsertManyOperation extends operation_1.AbstractOperation {\n    constructor(collection, docs, options) {\n        super(options);\n        if (!Array.isArray(docs)) {\n            throw new error_1.MongoInvalidArgumentError('Argument \"docs\" must be an array of documents');\n        }\n        this.options = options;\n        this.collection = collection;\n        this.docs = docs;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        const options = { ...this.options, ...this.bsonOptions, readPreference: this.readPreference };\n        const writeConcern = write_concern_1.WriteConcern.fromOptions(options);\n        const bulkWriteOperation = new bulk_write_1.BulkWriteOperation(coll, (0, common_functions_1.prepareDocs)(coll, this.docs, options).map(document => ({ insertOne: { document } })), options);\n        bulkWriteOperation.execute(server, session, (err, res) => {\n            if (err || res == null) {\n                if (err && err.message === 'Operation must be an object with an operation key') {\n                    err = new error_1.MongoInvalidArgumentError('Collection.insertMany() cannot be called with an array that has null/undefined values');\n                }\n                return callback(err);\n            }\n            callback(undefined, {\n                acknowledged: writeConcern?.w !== 0 ?? true,\n                insertedCount: res.insertedCount,\n                insertedIds: res.insertedIds\n            });\n        });\n    }\n}\nexports.InsertManyOperation = InsertManyOperation;\n(0, operation_1.defineAspects)(InsertOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(InsertOneOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(InsertManyOperation, [operation_1.Aspect.WRITE_OPERATION]);\n//# sourceMappingURL=insert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IsCappedOperation = void 0;\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass IsCappedOperation extends operation_1.AbstractOperation {\n    constructor(collection, options) {\n        super(options);\n        this.options = options;\n        this.collection = collection;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        coll.s.db\n            .listCollections({ name: coll.collectionName }, { ...this.options, nameOnly: false, readPreference: this.readPreference, session })\n            .toArray()\n            .then(collections => {\n            if (collections.length === 0) {\n                // TODO(NODE-3485)\n                return callback(new error_1.MongoAPIError(`collection ${coll.namespace} not found`));\n            }\n            callback(undefined, !!collections[0].options?.capped);\n        }, error => callback(error));\n    }\n}\nexports.IsCappedOperation = IsCappedOperation;\n//# sourceMappingURL=is_capped.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KillCursorsOperation = void 0;\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\nclass KillCursorsOperation extends operation_1.AbstractOperation {\n    constructor(cursorId, ns, server, options) {\n        super(options);\n        this.ns = ns;\n        this.cursorId = cursorId;\n        this.server = server;\n    }\n    execute(server, session, callback) {\n        if (server !== this.server) {\n            return callback(new error_1.MongoRuntimeError('Killcursor must run on the same server operation began on'));\n        }\n        const killCursors = this.ns.collection;\n        if (killCursors == null) {\n            // Cursors should have adopted the namespace returned by MongoDB\n            // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n            return callback(new error_1.MongoRuntimeError('A collection name must be determined before killCursors'));\n        }\n        const killCursorsCommand = {\n            killCursors,\n            cursors: [this.cursorId]\n        };\n        server.command(this.ns, killCursorsCommand, { session }, () => callback());\n    }\n}\nexports.KillCursorsOperation = KillCursorsOperation;\n(0, operation_1.defineAspects)(KillCursorsOperation, [operation_1.Aspect.MUST_SELECT_SAME_SERVER]);\n//# sourceMappingURL=kill_cursors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCollectionsOperation = void 0;\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass ListCollectionsOperation extends command_1.CommandOperation {\n    constructor(db, filter, options) {\n        super(db, options);\n        this.options = { ...options };\n        delete this.options.writeConcern;\n        this.db = db;\n        this.filter = filter;\n        this.nameOnly = !!this.options.nameOnly;\n        this.authorizedCollections = !!this.options.authorizedCollections;\n        if (typeof this.options.batchSize === 'number') {\n            this.batchSize = this.options.batchSize;\n        }\n    }\n    execute(server, session, callback) {\n        return super.executeCommand(server, session, this.generateCommand((0, utils_1.maxWireVersion)(server)), callback);\n    }\n    /* This is here for the purpose of unit testing the final command that gets sent. */\n    generateCommand(wireVersion) {\n        const command = {\n            listCollections: 1,\n            filter: this.filter,\n            cursor: this.batchSize ? { batchSize: this.batchSize } : {},\n            nameOnly: this.nameOnly,\n            authorizedCollections: this.authorizedCollections\n        };\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (wireVersion >= 9 && this.options.comment !== undefined) {\n            command.comment = this.options.comment;\n        }\n        return command;\n    }\n}\nexports.ListCollectionsOperation = ListCollectionsOperation;\n(0, operation_1.defineAspects)(ListCollectionsOperation, [\n    operation_1.Aspect.READ_OPERATION,\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.CURSOR_CREATING\n]);\n//# sourceMappingURL=list_collections.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDatabasesOperation = void 0;\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass ListDatabasesOperation extends command_1.CommandOperation {\n    constructor(db, options) {\n        super(db, options);\n        this.options = options ?? {};\n        this.ns = new utils_1.MongoDBNamespace('admin', '$cmd');\n    }\n    execute(server, session, callback) {\n        const cmd = { listDatabases: 1 };\n        if (this.options.nameOnly) {\n            cmd.nameOnly = Number(cmd.nameOnly);\n        }\n        if (this.options.filter) {\n            cmd.filter = this.options.filter;\n        }\n        if (typeof this.options.authorizedDatabases === 'boolean') {\n            cmd.authorizedDatabases = this.options.authorizedDatabases;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if ((0, utils_1.maxWireVersion)(server) >= 9 && this.options.comment !== undefined) {\n            cmd.comment = this.options.comment;\n        }\n        super.executeCommand(server, session, cmd, callback);\n    }\n}\nexports.ListDatabasesOperation = ListDatabasesOperation;\n(0, operation_1.defineAspects)(ListDatabasesOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);\n//# sourceMappingURL=list_databases.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineAspects = exports.AbstractOperation = exports.Aspect = void 0;\nconst util_1 = require(\"util\");\nconst bson_1 = require(\"../bson\");\nconst read_preference_1 = require(\"../read_preference\");\nexports.Aspect = {\n    READ_OPERATION: Symbol('READ_OPERATION'),\n    WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n    RETRYABLE: Symbol('RETRYABLE'),\n    EXPLAINABLE: Symbol('EXPLAINABLE'),\n    SKIP_COLLATION: Symbol('SKIP_COLLATION'),\n    CURSOR_CREATING: Symbol('CURSOR_CREATING'),\n    MUST_SELECT_SAME_SERVER: Symbol('MUST_SELECT_SAME_SERVER')\n};\n/** @internal */\nconst kSession = Symbol('session');\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n * @internal\n */\nclass AbstractOperation {\n    constructor(options = {}) {\n        this.executeAsync = (0, util_1.promisify)((server, session, callback) => {\n            this.execute(server, session, callback);\n        });\n        this.readPreference = this.hasAspect(exports.Aspect.WRITE_OPERATION)\n            ? read_preference_1.ReadPreference.primary\n            : read_preference_1.ReadPreference.fromOptions(options) ?? read_preference_1.ReadPreference.primary;\n        // Pull the BSON serialize options from the already-resolved options\n        this.bsonOptions = (0, bson_1.resolveBSONOptions)(options);\n        this[kSession] = options.session != null ? options.session : undefined;\n        this.options = options;\n        this.bypassPinningCheck = !!options.bypassPinningCheck;\n        this.trySecondaryWrite = false;\n    }\n    hasAspect(aspect) {\n        const ctor = this.constructor;\n        if (ctor.aspects == null) {\n            return false;\n        }\n        return ctor.aspects.has(aspect);\n    }\n    get session() {\n        return this[kSession];\n    }\n    clearSession() {\n        this[kSession] = undefined;\n    }\n    get canRetryRead() {\n        return true;\n    }\n    get canRetryWrite() {\n        return true;\n    }\n}\nexports.AbstractOperation = AbstractOperation;\nfunction defineAspects(operation, aspects) {\n    if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n        aspects = [aspects];\n    }\n    aspects = new Set(aspects);\n    Object.defineProperty(operation, 'aspects', {\n        value: aspects,\n        writable: false\n    });\n    return aspects;\n}\nexports.defineAspects = defineAspects;\n//# sourceMappingURL=operation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsOperation = void 0;\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass OptionsOperation extends operation_1.AbstractOperation {\n    constructor(collection, options) {\n        super(options);\n        this.options = options;\n        this.collection = collection;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        coll.s.db\n            .listCollections({ name: coll.collectionName }, { ...this.options, nameOnly: false, readPreference: this.readPreference, session })\n            .toArray()\n            .then(collections => {\n            if (collections.length === 0) {\n                // TODO(NODE-3485)\n                return callback(new error_1.MongoAPIError(`collection ${coll.namespace} not found`));\n            }\n            callback(undefined, collections[0].options);\n        }, error => callback(error));\n    }\n}\nexports.OptionsOperation = OptionsOperation;\n//# sourceMappingURL=options_operation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProfilingLevelOperation = void 0;\nconst error_1 = require(\"../error\");\nconst command_1 = require(\"./command\");\n/** @internal */\nclass ProfilingLevelOperation extends command_1.CommandOperation {\n    constructor(db, options) {\n        super(db, options);\n        this.options = options;\n    }\n    execute(server, session, callback) {\n        super.executeCommand(server, session, { profile: -1 }, (err, doc) => {\n            if (err == null && doc.ok === 1) {\n                const was = doc.was;\n                if (was === 0)\n                    return callback(undefined, 'off');\n                if (was === 1)\n                    return callback(undefined, 'slow_only');\n                if (was === 2)\n                    return callback(undefined, 'all');\n                // TODO(NODE-3483)\n                return callback(new error_1.MongoRuntimeError(`Illegal profiling level value ${was}`));\n            }\n            else {\n                // TODO(NODE-3483): Consider MongoUnexpectedServerResponseError\n                err != null ? callback(err) : callback(new error_1.MongoRuntimeError('Error with profile command'));\n            }\n        });\n    }\n}\nexports.ProfilingLevelOperation = ProfilingLevelOperation;\n//# sourceMappingURL=profiling_level.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoveUserOperation = void 0;\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass RemoveUserOperation extends command_1.CommandOperation {\n    constructor(db, username, options) {\n        super(db, options);\n        this.options = options;\n        this.username = username;\n    }\n    execute(server, session, callback) {\n        super.executeCommand(server, session, { dropUser: this.username }, err => {\n            callback(err, err ? false : true);\n        });\n    }\n}\nexports.RemoveUserOperation = RemoveUserOperation;\n(0, operation_1.defineAspects)(RemoveUserOperation, [operation_1.Aspect.WRITE_OPERATION]);\n//# sourceMappingURL=remove_user.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RenameOperation = void 0;\nconst collection_1 = require(\"../collection\");\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst operation_1 = require(\"./operation\");\nconst run_command_1 = require(\"./run_command\");\n/** @internal */\nclass RenameOperation extends run_command_1.RunAdminCommandOperation {\n    constructor(collection, newName, options) {\n        // Check the collection name\n        (0, utils_1.checkCollectionName)(newName);\n        // Build the command\n        const renameCollection = collection.namespace;\n        const toCollection = collection.s.namespace.withCollection(newName).toString();\n        const dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n        const cmd = { renameCollection: renameCollection, to: toCollection, dropTarget: dropTarget };\n        super(collection, cmd, options);\n        this.options = options;\n        this.collection = collection;\n        this.newName = newName;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        super.execute(server, session, (err, doc) => {\n            if (err)\n                return callback(err);\n            // We have an error\n            if (doc?.errmsg) {\n                return callback(new error_1.MongoServerError(doc));\n            }\n            let newColl;\n            try {\n                newColl = new collection_1.Collection(coll.s.db, this.newName, coll.s.options);\n            }\n            catch (err) {\n                return callback(err);\n            }\n            return callback(undefined, newColl);\n        });\n    }\n}\nexports.RenameOperation = RenameOperation;\n(0, operation_1.defineAspects)(RenameOperation, [operation_1.Aspect.WRITE_OPERATION]);\n//# sourceMappingURL=rename.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RunAdminCommandOperation = exports.RunCommandOperation = void 0;\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\n/** @internal */\nclass RunCommandOperation extends command_1.CommandOperation {\n    constructor(parent, command, options) {\n        super(parent, options);\n        this.options = options ?? {};\n        this.command = command;\n    }\n    execute(server, session, callback) {\n        const command = this.command;\n        this.executeCommand(server, session, command, callback);\n    }\n}\nexports.RunCommandOperation = RunCommandOperation;\nclass RunAdminCommandOperation extends RunCommandOperation {\n    constructor(parent, command, options) {\n        super(parent, command, options);\n        this.ns = new utils_1.MongoDBNamespace('admin');\n    }\n}\nexports.RunAdminCommandOperation = RunAdminCommandOperation;\n//# sourceMappingURL=run_command.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetProfilingLevelOperation = exports.ProfilingLevel = void 0;\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst levelValues = new Set(['off', 'slow_only', 'all']);\n/** @public */\nexports.ProfilingLevel = Object.freeze({\n    off: 'off',\n    slowOnly: 'slow_only',\n    all: 'all'\n});\n/** @internal */\nclass SetProfilingLevelOperation extends command_1.CommandOperation {\n    constructor(db, level, options) {\n        super(db, options);\n        this.options = options;\n        switch (level) {\n            case exports.ProfilingLevel.off:\n                this.profile = 0;\n                break;\n            case exports.ProfilingLevel.slowOnly:\n                this.profile = 1;\n                break;\n            case exports.ProfilingLevel.all:\n                this.profile = 2;\n                break;\n            default:\n                this.profile = 0;\n                break;\n        }\n        this.level = level;\n    }\n    execute(server, session, callback) {\n        const level = this.level;\n        if (!levelValues.has(level)) {\n            return callback(new error_1.MongoInvalidArgumentError(`Profiling level must be one of \"${(0, utils_1.enumToString)(exports.ProfilingLevel)}\"`));\n        }\n        // TODO(NODE-3483): Determine error to put here\n        super.executeCommand(server, session, { profile: this.profile }, (err, doc) => {\n            if (err == null && doc.ok === 1)\n                return callback(undefined, level);\n            return err != null\n                ? callback(err)\n                : callback(new error_1.MongoRuntimeError('Error with profile command'));\n        });\n    }\n}\nexports.SetProfilingLevelOperation = SetProfilingLevelOperation;\n//# sourceMappingURL=set_profiling_level.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DbStatsOperation = exports.CollStatsOperation = void 0;\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/**\n * Get all the collection statistics.\n * @internal\n */\nclass CollStatsOperation extends command_1.CommandOperation {\n    /**\n     * Construct a Stats operation.\n     *\n     * @param collection - Collection instance\n     * @param options - Optional settings. See Collection.prototype.stats for a list of options.\n     */\n    constructor(collection, options) {\n        super(collection, options);\n        this.options = options ?? {};\n        this.collectionName = collection.collectionName;\n    }\n    execute(server, session, callback) {\n        const command = { collStats: this.collectionName };\n        if (this.options.scale != null) {\n            command.scale = this.options.scale;\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.CollStatsOperation = CollStatsOperation;\n/** @internal */\nclass DbStatsOperation extends command_1.CommandOperation {\n    constructor(db, options) {\n        super(db, options);\n        this.options = options;\n    }\n    execute(server, session, callback) {\n        const command = { dbStats: true };\n        if (this.options.scale != null) {\n            command.scale = this.options.scale;\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.DbStatsOperation = DbStatsOperation;\n(0, operation_1.defineAspects)(CollStatsOperation, [operation_1.Aspect.READ_OPERATION]);\n(0, operation_1.defineAspects)(DbStatsOperation, [operation_1.Aspect.READ_OPERATION]);\n//# sourceMappingURL=stats.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeUpdateStatement = exports.ReplaceOneOperation = exports.UpdateManyOperation = exports.UpdateOneOperation = exports.UpdateOperation = void 0;\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass UpdateOperation extends command_1.CommandOperation {\n    constructor(ns, statements, options) {\n        super(undefined, options);\n        this.options = options;\n        this.ns = ns;\n        this.statements = statements;\n    }\n    get canRetryWrite() {\n        if (super.canRetryWrite === false) {\n            return false;\n        }\n        return this.statements.every(op => op.multi == null || op.multi === false);\n    }\n    execute(server, session, callback) {\n        const options = this.options ?? {};\n        const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n        const command = {\n            update: this.ns.collection,\n            updates: this.statements,\n            ordered\n        };\n        if (typeof options.bypassDocumentValidation === 'boolean') {\n            command.bypassDocumentValidation = options.bypassDocumentValidation;\n        }\n        if (options.let) {\n            command.let = options.let;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (options.comment !== undefined) {\n            command.comment = options.comment;\n        }\n        const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n        if (unacknowledgedWrite) {\n            if (this.statements.find((o) => o.hint)) {\n                // TODO(NODE-3541): fix error for hint with unacknowledged writes\n                callback(new error_1.MongoCompatibilityError(`hint is not supported with unacknowledged writes`));\n                return;\n            }\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.UpdateOperation = UpdateOperation;\n/** @internal */\nclass UpdateOneOperation extends UpdateOperation {\n    constructor(collection, filter, update, options) {\n        super(collection.s.namespace, [makeUpdateStatement(filter, update, { ...options, multi: false })], options);\n        if (!(0, utils_1.hasAtomicOperators)(update)) {\n            throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, res) => {\n            if (err || !res)\n                return callback(err);\n            if (this.explain != null)\n                return callback(undefined, res);\n            if (res.code)\n                return callback(new error_1.MongoServerError(res));\n            if (res.writeErrors)\n                return callback(new error_1.MongoServerError(res.writeErrors[0]));\n            callback(undefined, {\n                acknowledged: this.writeConcern?.w !== 0 ?? true,\n                modifiedCount: res.nModified != null ? res.nModified : res.n,\n                upsertedId: Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n                upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n                matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n            });\n        });\n    }\n}\nexports.UpdateOneOperation = UpdateOneOperation;\n/** @internal */\nclass UpdateManyOperation extends UpdateOperation {\n    constructor(collection, filter, update, options) {\n        super(collection.s.namespace, [makeUpdateStatement(filter, update, { ...options, multi: true })], options);\n        if (!(0, utils_1.hasAtomicOperators)(update)) {\n            throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, res) => {\n            if (err || !res)\n                return callback(err);\n            if (this.explain != null)\n                return callback(undefined, res);\n            if (res.code)\n                return callback(new error_1.MongoServerError(res));\n            if (res.writeErrors)\n                return callback(new error_1.MongoServerError(res.writeErrors[0]));\n            callback(undefined, {\n                acknowledged: this.writeConcern?.w !== 0 ?? true,\n                modifiedCount: res.nModified != null ? res.nModified : res.n,\n                upsertedId: Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n                upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n                matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n            });\n        });\n    }\n}\nexports.UpdateManyOperation = UpdateManyOperation;\n/** @internal */\nclass ReplaceOneOperation extends UpdateOperation {\n    constructor(collection, filter, replacement, options) {\n        super(collection.s.namespace, [makeUpdateStatement(filter, replacement, { ...options, multi: false })], options);\n        if ((0, utils_1.hasAtomicOperators)(replacement)) {\n            throw new error_1.MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n        }\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, res) => {\n            if (err || !res)\n                return callback(err);\n            if (this.explain != null)\n                return callback(undefined, res);\n            if (res.code)\n                return callback(new error_1.MongoServerError(res));\n            if (res.writeErrors)\n                return callback(new error_1.MongoServerError(res.writeErrors[0]));\n            callback(undefined, {\n                acknowledged: this.writeConcern?.w !== 0 ?? true,\n                modifiedCount: res.nModified != null ? res.nModified : res.n,\n                upsertedId: Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n                upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n                matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n            });\n        });\n    }\n}\nexports.ReplaceOneOperation = ReplaceOneOperation;\nfunction makeUpdateStatement(filter, update, options) {\n    if (filter == null || typeof filter !== 'object') {\n        throw new error_1.MongoInvalidArgumentError('Selector must be a valid JavaScript object');\n    }\n    if (update == null || typeof update !== 'object') {\n        throw new error_1.MongoInvalidArgumentError('Document must be a valid JavaScript object');\n    }\n    const op = { q: filter, u: update };\n    if (typeof options.upsert === 'boolean') {\n        op.upsert = options.upsert;\n    }\n    if (options.multi) {\n        op.multi = options.multi;\n    }\n    if (options.hint) {\n        op.hint = options.hint;\n    }\n    if (options.arrayFilters) {\n        op.arrayFilters = options.arrayFilters;\n    }\n    if (options.collation) {\n        op.collation = options.collation;\n    }\n    return op;\n}\nexports.makeUpdateStatement = makeUpdateStatement;\n(0, operation_1.defineAspects)(UpdateOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.SKIP_COLLATION]);\n(0, operation_1.defineAspects)(UpdateOneOperation, [\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.WRITE_OPERATION,\n    operation_1.Aspect.EXPLAINABLE,\n    operation_1.Aspect.SKIP_COLLATION\n]);\n(0, operation_1.defineAspects)(UpdateManyOperation, [\n    operation_1.Aspect.WRITE_OPERATION,\n    operation_1.Aspect.EXPLAINABLE,\n    operation_1.Aspect.SKIP_COLLATION\n]);\n(0, operation_1.defineAspects)(ReplaceOneOperation, [\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.WRITE_OPERATION,\n    operation_1.Aspect.SKIP_COLLATION\n]);\n//# sourceMappingURL=update.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValidateCollectionOperation = void 0;\nconst error_1 = require(\"../error\");\nconst command_1 = require(\"./command\");\n/** @internal */\nclass ValidateCollectionOperation extends command_1.CommandOperation {\n    constructor(admin, collectionName, options) {\n        // Decorate command with extra options\n        const command = { validate: collectionName };\n        const keys = Object.keys(options);\n        for (let i = 0; i < keys.length; i++) {\n            if (Object.prototype.hasOwnProperty.call(options, keys[i]) && keys[i] !== 'session') {\n                command[keys[i]] = options[keys[i]];\n            }\n        }\n        super(admin.s.db, options);\n        this.options = options;\n        this.command = command;\n        this.collectionName = collectionName;\n    }\n    execute(server, session, callback) {\n        const collectionName = this.collectionName;\n        super.executeCommand(server, session, this.command, (err, doc) => {\n            if (err != null)\n                return callback(err);\n            // TODO(NODE-3483): Replace these with MongoUnexpectedServerResponseError\n            if (doc.ok === 0)\n                return callback(new error_1.MongoRuntimeError('Error with validate command'));\n            if (doc.result != null && typeof doc.result !== 'string')\n                return callback(new error_1.MongoRuntimeError('Error with validation data'));\n            if (doc.result != null && doc.result.match(/exception|corrupt/) != null)\n                return callback(new error_1.MongoRuntimeError(`Invalid collection ${collectionName}`));\n            if (doc.valid != null && !doc.valid)\n                return callback(new error_1.MongoRuntimeError(`Invalid collection ${collectionName}`));\n            return callback(undefined, doc);\n        });\n    }\n}\nexports.ValidateCollectionOperation = ValidateCollectionOperation;\n//# sourceMappingURL=validate_collection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadConcern = exports.ReadConcernLevel = void 0;\n/** @public */\nexports.ReadConcernLevel = Object.freeze({\n    local: 'local',\n    majority: 'majority',\n    linearizable: 'linearizable',\n    available: 'available',\n    snapshot: 'snapshot'\n});\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/reference/read-concern/index.html\n */\nclass ReadConcern {\n    /** Constructs a ReadConcern from the read concern level.*/\n    constructor(level) {\n        /**\n         * A spec test exists that allows level to be any string.\n         * \"invalid readConcern with out stage\"\n         * @see ./test/spec/crud/v2/aggregate-out-readConcern.json\n         * @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#unknown-levels-and-additional-options-for-string-based-readconcerns\n         */\n        this.level = exports.ReadConcernLevel[level] ?? level;\n    }\n    /**\n     * Construct a ReadConcern given an options object.\n     *\n     * @param options - The options object from which to extract the write concern.\n     */\n    static fromOptions(options) {\n        if (options == null) {\n            return;\n        }\n        if (options.readConcern) {\n            const { readConcern } = options;\n            if (readConcern instanceof ReadConcern) {\n                return readConcern;\n            }\n            else if (typeof readConcern === 'string') {\n                return new ReadConcern(readConcern);\n            }\n            else if ('level' in readConcern && readConcern.level) {\n                return new ReadConcern(readConcern.level);\n            }\n        }\n        if (options.level) {\n            return new ReadConcern(options.level);\n        }\n        return;\n    }\n    static get MAJORITY() {\n        return exports.ReadConcernLevel.majority;\n    }\n    static get AVAILABLE() {\n        return exports.ReadConcernLevel.available;\n    }\n    static get LINEARIZABLE() {\n        return exports.ReadConcernLevel.linearizable;\n    }\n    static get SNAPSHOT() {\n        return exports.ReadConcernLevel.snapshot;\n    }\n    toJSON() {\n        return { level: this.level };\n    }\n}\nexports.ReadConcern = ReadConcern;\n//# sourceMappingURL=read_concern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadPreference = exports.ReadPreferenceMode = void 0;\nconst error_1 = require(\"./error\");\n/** @public */\nexports.ReadPreferenceMode = Object.freeze({\n    primary: 'primary',\n    primaryPreferred: 'primaryPreferred',\n    secondary: 'secondary',\n    secondaryPreferred: 'secondaryPreferred',\n    nearest: 'nearest'\n});\n/**\n * The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is\n * used to construct connections.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/core/read-preference/\n */\nclass ReadPreference {\n    /**\n     * @param mode - A string describing the read preference mode (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n     * @param tags - A tag set used to target reads to members with the specified tag(s). tagSet is not available if using read preference mode primary.\n     * @param options - Additional read preference options\n     */\n    constructor(mode, tags, options) {\n        if (!ReadPreference.isValid(mode)) {\n            throw new error_1.MongoInvalidArgumentError(`Invalid read preference mode ${JSON.stringify(mode)}`);\n        }\n        if (options == null && typeof tags === 'object' && !Array.isArray(tags)) {\n            options = tags;\n            tags = undefined;\n        }\n        else if (tags && !Array.isArray(tags)) {\n            throw new error_1.MongoInvalidArgumentError('ReadPreference tags must be an array');\n        }\n        this.mode = mode;\n        this.tags = tags;\n        this.hedge = options?.hedge;\n        this.maxStalenessSeconds = undefined;\n        this.minWireVersion = undefined;\n        options = options ?? {};\n        if (options.maxStalenessSeconds != null) {\n            if (options.maxStalenessSeconds <= 0) {\n                throw new error_1.MongoInvalidArgumentError('maxStalenessSeconds must be a positive integer');\n            }\n            this.maxStalenessSeconds = options.maxStalenessSeconds;\n            // NOTE: The minimum required wire version is 5 for this read preference. If the existing\n            //       topology has a lower value then a MongoError will be thrown during server selection.\n            this.minWireVersion = 5;\n        }\n        if (this.mode === ReadPreference.PRIMARY) {\n            if (this.tags && Array.isArray(this.tags) && this.tags.length > 0) {\n                throw new error_1.MongoInvalidArgumentError('Primary read preference cannot be combined with tags');\n            }\n            if (this.maxStalenessSeconds) {\n                throw new error_1.MongoInvalidArgumentError('Primary read preference cannot be combined with maxStalenessSeconds');\n            }\n            if (this.hedge) {\n                throw new error_1.MongoInvalidArgumentError('Primary read preference cannot be combined with hedge');\n            }\n        }\n    }\n    // Support the deprecated `preference` property introduced in the porcelain layer\n    get preference() {\n        return this.mode;\n    }\n    static fromString(mode) {\n        return new ReadPreference(mode);\n    }\n    /**\n     * Construct a ReadPreference given an options object.\n     *\n     * @param options - The options object from which to extract the read preference.\n     */\n    static fromOptions(options) {\n        if (!options)\n            return;\n        const readPreference = options.readPreference ?? options.session?.transaction.options.readPreference;\n        const readPreferenceTags = options.readPreferenceTags;\n        if (readPreference == null) {\n            return;\n        }\n        if (typeof readPreference === 'string') {\n            return new ReadPreference(readPreference, readPreferenceTags, {\n                maxStalenessSeconds: options.maxStalenessSeconds,\n                hedge: options.hedge\n            });\n        }\n        else if (!(readPreference instanceof ReadPreference) && typeof readPreference === 'object') {\n            const mode = readPreference.mode || readPreference.preference;\n            if (mode && typeof mode === 'string') {\n                return new ReadPreference(mode, readPreference.tags ?? readPreferenceTags, {\n                    maxStalenessSeconds: readPreference.maxStalenessSeconds,\n                    hedge: options.hedge\n                });\n            }\n        }\n        if (readPreferenceTags) {\n            readPreference.tags = readPreferenceTags;\n        }\n        return readPreference;\n    }\n    /**\n     * Replaces options.readPreference with a ReadPreference instance\n     */\n    static translate(options) {\n        if (options.readPreference == null)\n            return options;\n        const r = options.readPreference;\n        if (typeof r === 'string') {\n            options.readPreference = new ReadPreference(r);\n        }\n        else if (r && !(r instanceof ReadPreference) && typeof r === 'object') {\n            const mode = r.mode || r.preference;\n            if (mode && typeof mode === 'string') {\n                options.readPreference = new ReadPreference(mode, r.tags, {\n                    maxStalenessSeconds: r.maxStalenessSeconds\n                });\n            }\n        }\n        else if (!(r instanceof ReadPreference)) {\n            throw new error_1.MongoInvalidArgumentError(`Invalid read preference: ${r}`);\n        }\n        return options;\n    }\n    /**\n     * Validate if a mode is legal\n     *\n     * @param mode - The string representing the read preference mode.\n     */\n    static isValid(mode) {\n        const VALID_MODES = new Set([\n            ReadPreference.PRIMARY,\n            ReadPreference.PRIMARY_PREFERRED,\n            ReadPreference.SECONDARY,\n            ReadPreference.SECONDARY_PREFERRED,\n            ReadPreference.NEAREST,\n            null\n        ]);\n        return VALID_MODES.has(mode);\n    }\n    /**\n     * Validate if a mode is legal\n     *\n     * @param mode - The string representing the read preference mode.\n     */\n    isValid(mode) {\n        return ReadPreference.isValid(typeof mode === 'string' ? mode : this.mode);\n    }\n    /**\n     * Indicates that this readPreference needs the \"SecondaryOk\" bit when sent over the wire\n     * @see https://www.mongodb.com/docs/manual/reference/mongodb-wire-protocol/#op-query\n     */\n    secondaryOk() {\n        const NEEDS_SECONDARYOK = new Set([\n            ReadPreference.PRIMARY_PREFERRED,\n            ReadPreference.SECONDARY,\n            ReadPreference.SECONDARY_PREFERRED,\n            ReadPreference.NEAREST\n        ]);\n        return NEEDS_SECONDARYOK.has(this.mode);\n    }\n    /**\n     * Check if the two ReadPreferences are equivalent\n     *\n     * @param readPreference - The read preference with which to check equality\n     */\n    equals(readPreference) {\n        return readPreference.mode === this.mode;\n    }\n    /** Return JSON representation */\n    toJSON() {\n        const readPreference = { mode: this.mode };\n        if (Array.isArray(this.tags))\n            readPreference.tags = this.tags;\n        if (this.maxStalenessSeconds)\n            readPreference.maxStalenessSeconds = this.maxStalenessSeconds;\n        if (this.hedge)\n            readPreference.hedge = this.hedge;\n        return readPreference;\n    }\n}\nexports.ReadPreference = ReadPreference;\nReadPreference.PRIMARY = exports.ReadPreferenceMode.primary;\nReadPreference.PRIMARY_PREFERRED = exports.ReadPreferenceMode.primaryPreferred;\nReadPreference.SECONDARY = exports.ReadPreferenceMode.secondary;\nReadPreference.SECONDARY_PREFERRED = exports.ReadPreferenceMode.secondaryPreferred;\nReadPreference.NEAREST = exports.ReadPreferenceMode.nearest;\nReadPreference.primary = new ReadPreference(exports.ReadPreferenceMode.primary);\nReadPreference.primaryPreferred = new ReadPreference(exports.ReadPreferenceMode.primaryPreferred);\nReadPreference.secondary = new ReadPreference(exports.ReadPreferenceMode.secondary);\nReadPreference.secondaryPreferred = new ReadPreference(exports.ReadPreferenceMode.secondaryPreferred);\nReadPreference.nearest = new ReadPreference(exports.ReadPreferenceMode.nearest);\n//# sourceMappingURL=read_preference.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._advanceClusterTime = exports.drainTimerQueue = exports.ServerType = exports.TopologyType = exports.STATE_CONNECTED = exports.STATE_CONNECTING = exports.STATE_CLOSED = exports.STATE_CLOSING = void 0;\nconst timers_1 = require(\"timers\");\n// shared state names\nexports.STATE_CLOSING = 'closing';\nexports.STATE_CLOSED = 'closed';\nexports.STATE_CONNECTING = 'connecting';\nexports.STATE_CONNECTED = 'connected';\n/**\n * An enumeration of topology types we know about\n * @public\n */\nexports.TopologyType = Object.freeze({\n    Single: 'Single',\n    ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n    ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n    Sharded: 'Sharded',\n    Unknown: 'Unknown',\n    LoadBalanced: 'LoadBalanced'\n});\n/**\n * An enumeration of server types we know about\n * @public\n */\nexports.ServerType = Object.freeze({\n    Standalone: 'Standalone',\n    Mongos: 'Mongos',\n    PossiblePrimary: 'PossiblePrimary',\n    RSPrimary: 'RSPrimary',\n    RSSecondary: 'RSSecondary',\n    RSArbiter: 'RSArbiter',\n    RSOther: 'RSOther',\n    RSGhost: 'RSGhost',\n    Unknown: 'Unknown',\n    LoadBalancer: 'LoadBalancer'\n});\n/** @internal */\nfunction drainTimerQueue(queue) {\n    queue.forEach(timers_1.clearTimeout);\n    queue.clear();\n}\nexports.drainTimerQueue = drainTimerQueue;\n/** Shared function to determine clusterTime for a given topology or session */\nfunction _advanceClusterTime(entity, $clusterTime) {\n    if (entity.clusterTime == null) {\n        entity.clusterTime = $clusterTime;\n    }\n    else {\n        if ($clusterTime.clusterTime.greaterThan(entity.clusterTime.clusterTime)) {\n            entity.clusterTime = $clusterTime;\n        }\n    }\n}\nexports._advanceClusterTime = _advanceClusterTime;\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerHeartbeatFailedEvent = exports.ServerHeartbeatSucceededEvent = exports.ServerHeartbeatStartedEvent = exports.TopologyClosedEvent = exports.TopologyOpeningEvent = exports.TopologyDescriptionChangedEvent = exports.ServerClosedEvent = exports.ServerOpeningEvent = exports.ServerDescriptionChangedEvent = void 0;\n/**\n * Emitted when server description changes, but does NOT include changes to the RTT.\n * @public\n * @category Event\n */\nclass ServerDescriptionChangedEvent {\n    /** @internal */\n    constructor(topologyId, address, previousDescription, newDescription) {\n        this.topologyId = topologyId;\n        this.address = address;\n        this.previousDescription = previousDescription;\n        this.newDescription = newDescription;\n    }\n}\nexports.ServerDescriptionChangedEvent = ServerDescriptionChangedEvent;\n/**\n * Emitted when server is initialized.\n * @public\n * @category Event\n */\nclass ServerOpeningEvent {\n    /** @internal */\n    constructor(topologyId, address) {\n        this.topologyId = topologyId;\n        this.address = address;\n    }\n}\nexports.ServerOpeningEvent = ServerOpeningEvent;\n/**\n * Emitted when server is closed.\n * @public\n * @category Event\n */\nclass ServerClosedEvent {\n    /** @internal */\n    constructor(topologyId, address) {\n        this.topologyId = topologyId;\n        this.address = address;\n    }\n}\nexports.ServerClosedEvent = ServerClosedEvent;\n/**\n * Emitted when topology description changes.\n * @public\n * @category Event\n */\nclass TopologyDescriptionChangedEvent {\n    /** @internal */\n    constructor(topologyId, previousDescription, newDescription) {\n        this.topologyId = topologyId;\n        this.previousDescription = previousDescription;\n        this.newDescription = newDescription;\n    }\n}\nexports.TopologyDescriptionChangedEvent = TopologyDescriptionChangedEvent;\n/**\n * Emitted when topology is initialized.\n * @public\n * @category Event\n */\nclass TopologyOpeningEvent {\n    /** @internal */\n    constructor(topologyId) {\n        this.topologyId = topologyId;\n    }\n}\nexports.TopologyOpeningEvent = TopologyOpeningEvent;\n/**\n * Emitted when topology is closed.\n * @public\n * @category Event\n */\nclass TopologyClosedEvent {\n    /** @internal */\n    constructor(topologyId) {\n        this.topologyId = topologyId;\n    }\n}\nexports.TopologyClosedEvent = TopologyClosedEvent;\n/**\n * Emitted when the server monitor’s hello command is started - immediately before\n * the hello command is serialized into raw BSON and written to the socket.\n *\n * @public\n * @category Event\n */\nclass ServerHeartbeatStartedEvent {\n    /** @internal */\n    constructor(connectionId) {\n        this.connectionId = connectionId;\n    }\n}\nexports.ServerHeartbeatStartedEvent = ServerHeartbeatStartedEvent;\n/**\n * Emitted when the server monitor’s hello succeeds.\n * @public\n * @category Event\n */\nclass ServerHeartbeatSucceededEvent {\n    /** @internal */\n    constructor(connectionId, duration, reply) {\n        this.connectionId = connectionId;\n        this.duration = duration;\n        this.reply = reply ?? {};\n    }\n}\nexports.ServerHeartbeatSucceededEvent = ServerHeartbeatSucceededEvent;\n/**\n * Emitted when the server monitor’s hello fails, either with an “ok: 0” or a socket exception.\n * @public\n * @category Event\n */\nclass ServerHeartbeatFailedEvent {\n    /** @internal */\n    constructor(connectionId, duration, failure) {\n        this.connectionId = connectionId;\n        this.duration = duration;\n        this.failure = failure;\n    }\n}\nexports.ServerHeartbeatFailedEvent = ServerHeartbeatFailedEvent;\n//# sourceMappingURL=events.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonitorInterval = exports.RTTPinger = exports.Monitor = void 0;\nconst process = require(\"process\");\nconst timers_1 = require(\"timers\");\nconst bson_1 = require(\"../bson\");\nconst connect_1 = require(\"../cmap/connect\");\nconst connection_1 = require(\"../cmap/connection\");\nconst constants_1 = require(\"../constants\");\nconst error_1 = require(\"../error\");\nconst mongo_types_1 = require(\"../mongo_types\");\nconst utils_1 = require(\"../utils\");\nconst common_1 = require(\"./common\");\nconst events_1 = require(\"./events\");\nconst server_1 = require(\"./server\");\n/** @internal */\nconst kServer = Symbol('server');\n/** @internal */\nconst kMonitorId = Symbol('monitorId');\n/** @internal */\nconst kConnection = Symbol('connection');\n/** @internal */\nconst kCancellationToken = Symbol('cancellationToken');\n/** @internal */\nconst kRTTPinger = Symbol('rttPinger');\n/** @internal */\nconst kRoundTripTime = Symbol('roundTripTime');\nconst STATE_IDLE = 'idle';\nconst STATE_MONITORING = 'monitoring';\nconst stateTransition = (0, utils_1.makeStateMachine)({\n    [common_1.STATE_CLOSING]: [common_1.STATE_CLOSING, STATE_IDLE, common_1.STATE_CLOSED],\n    [common_1.STATE_CLOSED]: [common_1.STATE_CLOSED, STATE_MONITORING],\n    [STATE_IDLE]: [STATE_IDLE, STATE_MONITORING, common_1.STATE_CLOSING],\n    [STATE_MONITORING]: [STATE_MONITORING, STATE_IDLE, common_1.STATE_CLOSING]\n});\nconst INVALID_REQUEST_CHECK_STATES = new Set([common_1.STATE_CLOSING, common_1.STATE_CLOSED, STATE_MONITORING]);\nfunction isInCloseState(monitor) {\n    return monitor.s.state === common_1.STATE_CLOSED || monitor.s.state === common_1.STATE_CLOSING;\n}\n/** @internal */\nclass Monitor extends mongo_types_1.TypedEventEmitter {\n    get connection() {\n        return this[kConnection];\n    }\n    constructor(server, options) {\n        super();\n        this[kServer] = server;\n        this[kConnection] = undefined;\n        this[kCancellationToken] = new mongo_types_1.CancellationToken();\n        this[kCancellationToken].setMaxListeners(Infinity);\n        this[kMonitorId] = undefined;\n        this.s = {\n            state: common_1.STATE_CLOSED\n        };\n        this.address = server.description.address;\n        this.options = Object.freeze({\n            connectTimeoutMS: options.connectTimeoutMS ?? 10000,\n            heartbeatFrequencyMS: options.heartbeatFrequencyMS ?? 10000,\n            minHeartbeatFrequencyMS: options.minHeartbeatFrequencyMS ?? 500\n        });\n        const cancellationToken = this[kCancellationToken];\n        // TODO: refactor this to pull it directly from the pool, requires new ConnectionPool integration\n        const connectOptions = Object.assign({\n            id: '<monitor>',\n            generation: server.s.pool.generation,\n            connectionType: connection_1.Connection,\n            cancellationToken,\n            hostAddress: server.description.hostAddress\n        }, options, \n        // force BSON serialization options\n        {\n            raw: false,\n            useBigInt64: false,\n            promoteLongs: true,\n            promoteValues: true,\n            promoteBuffers: true\n        });\n        // ensure no authentication is used for monitoring\n        delete connectOptions.credentials;\n        if (connectOptions.autoEncrypter) {\n            delete connectOptions.autoEncrypter;\n        }\n        this.connectOptions = Object.freeze(connectOptions);\n    }\n    connect() {\n        if (this.s.state !== common_1.STATE_CLOSED) {\n            return;\n        }\n        // start\n        const heartbeatFrequencyMS = this.options.heartbeatFrequencyMS;\n        const minHeartbeatFrequencyMS = this.options.minHeartbeatFrequencyMS;\n        this[kMonitorId] = new MonitorInterval(monitorServer(this), {\n            heartbeatFrequencyMS: heartbeatFrequencyMS,\n            minHeartbeatFrequencyMS: minHeartbeatFrequencyMS,\n            immediate: true\n        });\n    }\n    requestCheck() {\n        if (INVALID_REQUEST_CHECK_STATES.has(this.s.state)) {\n            return;\n        }\n        this[kMonitorId]?.wake();\n    }\n    reset() {\n        const topologyVersion = this[kServer].description.topologyVersion;\n        if (isInCloseState(this) || topologyVersion == null) {\n            return;\n        }\n        stateTransition(this, common_1.STATE_CLOSING);\n        resetMonitorState(this);\n        // restart monitor\n        stateTransition(this, STATE_IDLE);\n        // restart monitoring\n        const heartbeatFrequencyMS = this.options.heartbeatFrequencyMS;\n        const minHeartbeatFrequencyMS = this.options.minHeartbeatFrequencyMS;\n        this[kMonitorId] = new MonitorInterval(monitorServer(this), {\n            heartbeatFrequencyMS: heartbeatFrequencyMS,\n            minHeartbeatFrequencyMS: minHeartbeatFrequencyMS\n        });\n    }\n    close() {\n        if (isInCloseState(this)) {\n            return;\n        }\n        stateTransition(this, common_1.STATE_CLOSING);\n        resetMonitorState(this);\n        // close monitor\n        this.emit('close');\n        stateTransition(this, common_1.STATE_CLOSED);\n    }\n}\nexports.Monitor = Monitor;\nfunction resetMonitorState(monitor) {\n    monitor[kMonitorId]?.stop();\n    monitor[kMonitorId] = undefined;\n    monitor[kRTTPinger]?.close();\n    monitor[kRTTPinger] = undefined;\n    monitor[kCancellationToken].emit('cancel');\n    monitor[kConnection]?.destroy({ force: true });\n    monitor[kConnection] = undefined;\n}\nfunction checkServer(monitor, callback) {\n    let start = (0, utils_1.now)();\n    monitor.emit(server_1.Server.SERVER_HEARTBEAT_STARTED, new events_1.ServerHeartbeatStartedEvent(monitor.address));\n    function failureHandler(err) {\n        monitor[kConnection]?.destroy({ force: true });\n        monitor[kConnection] = undefined;\n        monitor.emit(server_1.Server.SERVER_HEARTBEAT_FAILED, new events_1.ServerHeartbeatFailedEvent(monitor.address, (0, utils_1.calculateDurationInMs)(start), err));\n        const error = !(err instanceof error_1.MongoError) ? new error_1.MongoError(err) : err;\n        error.addErrorLabel(error_1.MongoErrorLabel.ResetPool);\n        if (error instanceof error_1.MongoNetworkTimeoutError) {\n            error.addErrorLabel(error_1.MongoErrorLabel.InterruptInUseConnections);\n        }\n        monitor.emit('resetServer', error);\n        callback(err);\n    }\n    const connection = monitor[kConnection];\n    if (connection && !connection.closed) {\n        const { serverApi, helloOk } = connection;\n        const connectTimeoutMS = monitor.options.connectTimeoutMS;\n        const maxAwaitTimeMS = monitor.options.heartbeatFrequencyMS;\n        const topologyVersion = monitor[kServer].description.topologyVersion;\n        const isAwaitable = topologyVersion != null;\n        const cmd = {\n            [serverApi?.version || helloOk ? 'hello' : constants_1.LEGACY_HELLO_COMMAND]: 1,\n            ...(isAwaitable && topologyVersion\n                ? { maxAwaitTimeMS, topologyVersion: makeTopologyVersion(topologyVersion) }\n                : {})\n        };\n        const options = isAwaitable\n            ? {\n                socketTimeoutMS: connectTimeoutMS ? connectTimeoutMS + maxAwaitTimeMS : 0,\n                exhaustAllowed: true\n            }\n            : { socketTimeoutMS: connectTimeoutMS };\n        if (isAwaitable && monitor[kRTTPinger] == null) {\n            monitor[kRTTPinger] = new RTTPinger(monitor[kCancellationToken], Object.assign({ heartbeatFrequencyMS: monitor.options.heartbeatFrequencyMS }, monitor.connectOptions));\n        }\n        connection.command((0, utils_1.ns)('admin.$cmd'), cmd, options, (err, hello) => {\n            if (err) {\n                return failureHandler(err);\n            }\n            if (!('isWritablePrimary' in hello)) {\n                // Provide hello-style response document.\n                hello.isWritablePrimary = hello[constants_1.LEGACY_HELLO_COMMAND];\n            }\n            const rttPinger = monitor[kRTTPinger];\n            const duration = isAwaitable && rttPinger ? rttPinger.roundTripTime : (0, utils_1.calculateDurationInMs)(start);\n            monitor.emit(server_1.Server.SERVER_HEARTBEAT_SUCCEEDED, new events_1.ServerHeartbeatSucceededEvent(monitor.address, duration, hello));\n            // if we are using the streaming protocol then we immediately issue another `started`\n            // event, otherwise the \"check\" is complete and return to the main monitor loop\n            if (isAwaitable && hello.topologyVersion) {\n                monitor.emit(server_1.Server.SERVER_HEARTBEAT_STARTED, new events_1.ServerHeartbeatStartedEvent(monitor.address));\n                start = (0, utils_1.now)();\n            }\n            else {\n                monitor[kRTTPinger]?.close();\n                monitor[kRTTPinger] = undefined;\n                callback(undefined, hello);\n            }\n        });\n        return;\n    }\n    // connecting does an implicit `hello`\n    (0, connect_1.connect)(monitor.connectOptions, (err, conn) => {\n        if (err) {\n            monitor[kConnection] = undefined;\n            failureHandler(err);\n            return;\n        }\n        if (conn) {\n            // Tell the connection that we are using the streaming protocol so that the\n            // connection's message stream will only read the last hello on the buffer.\n            conn.isMonitoringConnection = true;\n            if (isInCloseState(monitor)) {\n                conn.destroy({ force: true });\n                return;\n            }\n            monitor[kConnection] = conn;\n            monitor.emit(server_1.Server.SERVER_HEARTBEAT_SUCCEEDED, new events_1.ServerHeartbeatSucceededEvent(monitor.address, (0, utils_1.calculateDurationInMs)(start), conn.hello));\n            callback(undefined, conn.hello);\n        }\n    });\n}\nfunction monitorServer(monitor) {\n    return (callback) => {\n        if (monitor.s.state === STATE_MONITORING) {\n            process.nextTick(callback);\n            return;\n        }\n        stateTransition(monitor, STATE_MONITORING);\n        function done() {\n            if (!isInCloseState(monitor)) {\n                stateTransition(monitor, STATE_IDLE);\n            }\n            callback();\n        }\n        checkServer(monitor, (err, hello) => {\n            if (err) {\n                // otherwise an error occurred on initial discovery, also bail\n                if (monitor[kServer].description.type === common_1.ServerType.Unknown) {\n                    return done();\n                }\n            }\n            // if the check indicates streaming is supported, immediately reschedule monitoring\n            if (hello && hello.topologyVersion) {\n                (0, timers_1.setTimeout)(() => {\n                    if (!isInCloseState(monitor)) {\n                        monitor[kMonitorId]?.wake();\n                    }\n                }, 0);\n            }\n            done();\n        });\n    };\n}\nfunction makeTopologyVersion(tv) {\n    return {\n        processId: tv.processId,\n        // tests mock counter as just number, but in a real situation counter should always be a Long\n        // TODO(NODE-2674): Preserve int64 sent from MongoDB\n        counter: bson_1.Long.isLong(tv.counter) ? tv.counter : bson_1.Long.fromNumber(tv.counter)\n    };\n}\n/** @internal */\nclass RTTPinger {\n    constructor(cancellationToken, options) {\n        this[kConnection] = undefined;\n        this[kCancellationToken] = cancellationToken;\n        this[kRoundTripTime] = 0;\n        this.closed = false;\n        const heartbeatFrequencyMS = options.heartbeatFrequencyMS;\n        this[kMonitorId] = (0, timers_1.setTimeout)(() => measureRoundTripTime(this, options), heartbeatFrequencyMS);\n    }\n    get roundTripTime() {\n        return this[kRoundTripTime];\n    }\n    close() {\n        this.closed = true;\n        (0, timers_1.clearTimeout)(this[kMonitorId]);\n        this[kConnection]?.destroy({ force: true });\n        this[kConnection] = undefined;\n    }\n}\nexports.RTTPinger = RTTPinger;\nfunction measureRoundTripTime(rttPinger, options) {\n    const start = (0, utils_1.now)();\n    options.cancellationToken = rttPinger[kCancellationToken];\n    const heartbeatFrequencyMS = options.heartbeatFrequencyMS;\n    if (rttPinger.closed) {\n        return;\n    }\n    function measureAndReschedule(conn) {\n        if (rttPinger.closed) {\n            conn?.destroy({ force: true });\n            return;\n        }\n        if (rttPinger[kConnection] == null) {\n            rttPinger[kConnection] = conn;\n        }\n        rttPinger[kRoundTripTime] = (0, utils_1.calculateDurationInMs)(start);\n        rttPinger[kMonitorId] = (0, timers_1.setTimeout)(() => measureRoundTripTime(rttPinger, options), heartbeatFrequencyMS);\n    }\n    const connection = rttPinger[kConnection];\n    if (connection == null) {\n        (0, connect_1.connect)(options, (err, conn) => {\n            if (err) {\n                rttPinger[kConnection] = undefined;\n                rttPinger[kRoundTripTime] = 0;\n                return;\n            }\n            measureAndReschedule(conn);\n        });\n        return;\n    }\n    connection.command((0, utils_1.ns)('admin.$cmd'), { [constants_1.LEGACY_HELLO_COMMAND]: 1 }, undefined, err => {\n        if (err) {\n            rttPinger[kConnection] = undefined;\n            rttPinger[kRoundTripTime] = 0;\n            return;\n        }\n        measureAndReschedule();\n    });\n}\n/**\n * @internal\n */\nclass MonitorInterval {\n    constructor(fn, options = {}) {\n        this.isExpeditedCallToFnScheduled = false;\n        this.stopped = false;\n        this.isExecutionInProgress = false;\n        this.hasExecutedOnce = false;\n        this._executeAndReschedule = () => {\n            if (this.stopped)\n                return;\n            if (this.timerId) {\n                (0, timers_1.clearTimeout)(this.timerId);\n            }\n            this.isExpeditedCallToFnScheduled = false;\n            this.isExecutionInProgress = true;\n            this.fn(() => {\n                this.lastExecutionEnded = (0, utils_1.now)();\n                this.isExecutionInProgress = false;\n                this._reschedule(this.heartbeatFrequencyMS);\n            });\n        };\n        this.fn = fn;\n        this.lastExecutionEnded = -Infinity;\n        this.heartbeatFrequencyMS = options.heartbeatFrequencyMS ?? 1000;\n        this.minHeartbeatFrequencyMS = options.minHeartbeatFrequencyMS ?? 500;\n        if (options.immediate) {\n            this._executeAndReschedule();\n        }\n        else {\n            this._reschedule(undefined);\n        }\n    }\n    wake() {\n        const currentTime = (0, utils_1.now)();\n        const timeSinceLastCall = currentTime - this.lastExecutionEnded;\n        // TODO(NODE-4674): Add error handling and logging to the monitor\n        if (timeSinceLastCall < 0) {\n            return this._executeAndReschedule();\n        }\n        if (this.isExecutionInProgress) {\n            return;\n        }\n        // debounce multiple calls to wake within the `minInterval`\n        if (this.isExpeditedCallToFnScheduled) {\n            return;\n        }\n        // reschedule a call as soon as possible, ensuring the call never happens\n        // faster than the `minInterval`\n        if (timeSinceLastCall < this.minHeartbeatFrequencyMS) {\n            this.isExpeditedCallToFnScheduled = true;\n            this._reschedule(this.minHeartbeatFrequencyMS - timeSinceLastCall);\n            return;\n        }\n        this._executeAndReschedule();\n    }\n    stop() {\n        this.stopped = true;\n        if (this.timerId) {\n            (0, timers_1.clearTimeout)(this.timerId);\n            this.timerId = undefined;\n        }\n        this.lastExecutionEnded = -Infinity;\n        this.isExpeditedCallToFnScheduled = false;\n    }\n    toString() {\n        return JSON.stringify(this);\n    }\n    toJSON() {\n        const currentTime = (0, utils_1.now)();\n        const timeSinceLastCall = currentTime - this.lastExecutionEnded;\n        return {\n            timerId: this.timerId != null ? 'set' : 'cleared',\n            lastCallTime: this.lastExecutionEnded,\n            isExpeditedCheckScheduled: this.isExpeditedCallToFnScheduled,\n            stopped: this.stopped,\n            heartbeatFrequencyMS: this.heartbeatFrequencyMS,\n            minHeartbeatFrequencyMS: this.minHeartbeatFrequencyMS,\n            currentTime,\n            timeSinceLastCall\n        };\n    }\n    _reschedule(ms) {\n        if (this.stopped)\n            return;\n        if (this.timerId) {\n            (0, timers_1.clearTimeout)(this.timerId);\n        }\n        this.timerId = (0, timers_1.setTimeout)(this._executeAndReschedule, ms || this.heartbeatFrequencyMS);\n    }\n}\nexports.MonitorInterval = MonitorInterval;\n//# sourceMappingURL=monitor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = void 0;\nconst process = require(\"process\");\nconst connection_1 = require(\"../cmap/connection\");\nconst connection_pool_1 = require(\"../cmap/connection_pool\");\nconst errors_1 = require(\"../cmap/errors\");\nconst constants_1 = require(\"../constants\");\nconst error_1 = require(\"../error\");\nconst mongo_types_1 = require(\"../mongo_types\");\nconst transactions_1 = require(\"../transactions\");\nconst utils_1 = require(\"../utils\");\nconst common_1 = require(\"./common\");\nconst monitor_1 = require(\"./monitor\");\nconst server_description_1 = require(\"./server_description\");\nconst stateTransition = (0, utils_1.makeStateMachine)({\n    [common_1.STATE_CLOSED]: [common_1.STATE_CLOSED, common_1.STATE_CONNECTING],\n    [common_1.STATE_CONNECTING]: [common_1.STATE_CONNECTING, common_1.STATE_CLOSING, common_1.STATE_CONNECTED, common_1.STATE_CLOSED],\n    [common_1.STATE_CONNECTED]: [common_1.STATE_CONNECTED, common_1.STATE_CLOSING, common_1.STATE_CLOSED],\n    [common_1.STATE_CLOSING]: [common_1.STATE_CLOSING, common_1.STATE_CLOSED]\n});\n/** @internal */\nconst kMonitor = Symbol('monitor');\n/** @internal */\nclass Server extends mongo_types_1.TypedEventEmitter {\n    /**\n     * Create a server\n     */\n    constructor(topology, description, options) {\n        super();\n        this.serverApi = options.serverApi;\n        const poolOptions = { hostAddress: description.hostAddress, ...options };\n        this.s = {\n            description,\n            options,\n            state: common_1.STATE_CLOSED,\n            topology,\n            pool: new connection_pool_1.ConnectionPool(this, poolOptions),\n            operationCount: 0\n        };\n        for (const event of [...constants_1.CMAP_EVENTS, ...constants_1.APM_EVENTS]) {\n            this.s.pool.on(event, (e) => this.emit(event, e));\n        }\n        this.s.pool.on(connection_1.Connection.CLUSTER_TIME_RECEIVED, (clusterTime) => {\n            this.clusterTime = clusterTime;\n        });\n        if (this.loadBalanced) {\n            this[kMonitor] = null;\n            // monitoring is disabled in load balancing mode\n            return;\n        }\n        // create the monitor\n        // TODO(NODE-4144): Remove new variable for type narrowing\n        const monitor = new monitor_1.Monitor(this, this.s.options);\n        this[kMonitor] = monitor;\n        for (const event of constants_1.HEARTBEAT_EVENTS) {\n            monitor.on(event, (e) => this.emit(event, e));\n        }\n        monitor.on('resetServer', (error) => markServerUnknown(this, error));\n        monitor.on(Server.SERVER_HEARTBEAT_SUCCEEDED, (event) => {\n            this.emit(Server.DESCRIPTION_RECEIVED, new server_description_1.ServerDescription(this.description.hostAddress, event.reply, {\n                roundTripTime: calculateRoundTripTime(this.description.roundTripTime, event.duration)\n            }));\n            if (this.s.state === common_1.STATE_CONNECTING) {\n                stateTransition(this, common_1.STATE_CONNECTED);\n                this.emit(Server.CONNECT, this);\n            }\n        });\n    }\n    get clusterTime() {\n        return this.s.topology.clusterTime;\n    }\n    set clusterTime(clusterTime) {\n        this.s.topology.clusterTime = clusterTime;\n    }\n    get description() {\n        return this.s.description;\n    }\n    get name() {\n        return this.s.description.address;\n    }\n    get autoEncrypter() {\n        if (this.s.options && this.s.options.autoEncrypter) {\n            return this.s.options.autoEncrypter;\n        }\n        return;\n    }\n    get loadBalanced() {\n        return this.s.topology.description.type === common_1.TopologyType.LoadBalanced;\n    }\n    /**\n     * Initiate server connect\n     */\n    connect() {\n        if (this.s.state !== common_1.STATE_CLOSED) {\n            return;\n        }\n        stateTransition(this, common_1.STATE_CONNECTING);\n        // If in load balancer mode we automatically set the server to\n        // a load balancer. It never transitions out of this state and\n        // has no monitor.\n        if (!this.loadBalanced) {\n            this[kMonitor]?.connect();\n        }\n        else {\n            stateTransition(this, common_1.STATE_CONNECTED);\n            this.emit(Server.CONNECT, this);\n        }\n    }\n    /** Destroy the server connection */\n    destroy(options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = { force: false };\n        }\n        options = Object.assign({}, { force: false }, options);\n        if (this.s.state === common_1.STATE_CLOSED) {\n            if (typeof callback === 'function') {\n                callback();\n            }\n            return;\n        }\n        stateTransition(this, common_1.STATE_CLOSING);\n        if (!this.loadBalanced) {\n            this[kMonitor]?.close();\n        }\n        this.s.pool.close(options, err => {\n            stateTransition(this, common_1.STATE_CLOSED);\n            this.emit('closed');\n            if (typeof callback === 'function') {\n                callback(err);\n            }\n        });\n    }\n    /**\n     * Immediately schedule monitoring of this server. If there already an attempt being made\n     * this will be a no-op.\n     */\n    requestCheck() {\n        if (!this.loadBalanced) {\n            this[kMonitor]?.requestCheck();\n        }\n    }\n    /**\n     * Execute a command\n     * @internal\n     */\n    command(ns, cmd, options, callback) {\n        if (callback == null) {\n            throw new error_1.MongoInvalidArgumentError('Callback must be provided');\n        }\n        if (ns.db == null || typeof ns === 'string') {\n            throw new error_1.MongoInvalidArgumentError('Namespace must not be a string');\n        }\n        if (this.s.state === common_1.STATE_CLOSING || this.s.state === common_1.STATE_CLOSED) {\n            callback(new error_1.MongoServerClosedError());\n            return;\n        }\n        // Clone the options\n        const finalOptions = Object.assign({}, options, { wireProtocolCommand: false });\n        // There are cases where we need to flag the read preference not to get sent in\n        // the command, such as pre-5.0 servers attempting to perform an aggregate write\n        // with a non-primary read preference. In this case the effective read preference\n        // (primary) is not the same as the provided and must be removed completely.\n        if (finalOptions.omitReadPreference) {\n            delete finalOptions.readPreference;\n        }\n        const session = finalOptions.session;\n        const conn = session?.pinnedConnection;\n        // NOTE: This is a hack! We can't retrieve the connections used for executing an operation\n        //       (and prevent them from being checked back in) at the point of operation execution.\n        //       This should be considered as part of the work for NODE-2882\n        // NOTE:\n        //       When incrementing operation count, it's important that we increment it before we\n        //       attempt to check out a connection from the pool.  This ensures that operations that\n        //       are waiting for a connection are included in the operation count.  Load balanced\n        //       mode will only ever have a single server, so the operation count doesn't matter.\n        //       Incrementing the operation count above the logic to handle load balanced mode would\n        //       require special logic to decrement it again, or would double increment (the load\n        //       balanced code makes a recursive call).  Instead, we increment the count after this\n        //       check.\n        if (this.loadBalanced && session && conn == null && isPinnableCommand(cmd, session)) {\n            this.s.pool.checkOut((err, checkedOut) => {\n                if (err || checkedOut == null) {\n                    if (callback)\n                        return callback(err);\n                    return;\n                }\n                session.pin(checkedOut);\n                this.command(ns, cmd, finalOptions, callback);\n            });\n            return;\n        }\n        this.s.operationCount += 1;\n        this.s.pool.withConnection(conn, (err, conn, cb) => {\n            if (err || !conn) {\n                this.s.operationCount -= 1;\n                if (!err) {\n                    return cb(new error_1.MongoRuntimeError('Failed to create connection without error'));\n                }\n                if (!(err instanceof errors_1.PoolClearedError)) {\n                    this.handleError(err);\n                }\n                return cb(err);\n            }\n            conn.command(ns, cmd, finalOptions, makeOperationHandler(this, conn, cmd, finalOptions, (error, response) => {\n                this.s.operationCount -= 1;\n                cb(error, response);\n            }));\n        }, callback);\n    }\n    /**\n     * Handle SDAM error\n     * @internal\n     */\n    handleError(error, connection) {\n        if (!(error instanceof error_1.MongoError)) {\n            return;\n        }\n        const isStaleError = error.connectionGeneration && error.connectionGeneration < this.s.pool.generation;\n        if (isStaleError) {\n            return;\n        }\n        const isNetworkNonTimeoutError = error instanceof error_1.MongoNetworkError && !(error instanceof error_1.MongoNetworkTimeoutError);\n        const isNetworkTimeoutBeforeHandshakeError = (0, error_1.isNetworkErrorBeforeHandshake)(error);\n        const isAuthHandshakeError = error.hasErrorLabel(error_1.MongoErrorLabel.HandshakeError);\n        if (isNetworkNonTimeoutError || isNetworkTimeoutBeforeHandshakeError || isAuthHandshakeError) {\n            // In load balanced mode we never mark the server as unknown and always\n            // clear for the specific service id.\n            if (!this.loadBalanced) {\n                error.addErrorLabel(error_1.MongoErrorLabel.ResetPool);\n                markServerUnknown(this, error);\n            }\n            else if (connection) {\n                this.s.pool.clear({ serviceId: connection.serviceId });\n            }\n        }\n        else {\n            if ((0, error_1.isSDAMUnrecoverableError)(error)) {\n                if (shouldHandleStateChangeError(this, error)) {\n                    const shouldClearPool = (0, utils_1.maxWireVersion)(this) <= 7 || (0, error_1.isNodeShuttingDownError)(error);\n                    if (this.loadBalanced && connection && shouldClearPool) {\n                        this.s.pool.clear({ serviceId: connection.serviceId });\n                    }\n                    if (!this.loadBalanced) {\n                        if (shouldClearPool) {\n                            error.addErrorLabel(error_1.MongoErrorLabel.ResetPool);\n                        }\n                        markServerUnknown(this, error);\n                        process.nextTick(() => this.requestCheck());\n                    }\n                }\n            }\n        }\n    }\n}\nexports.Server = Server;\n/** @event */\nServer.SERVER_HEARTBEAT_STARTED = constants_1.SERVER_HEARTBEAT_STARTED;\n/** @event */\nServer.SERVER_HEARTBEAT_SUCCEEDED = constants_1.SERVER_HEARTBEAT_SUCCEEDED;\n/** @event */\nServer.SERVER_HEARTBEAT_FAILED = constants_1.SERVER_HEARTBEAT_FAILED;\n/** @event */\nServer.CONNECT = constants_1.CONNECT;\n/** @event */\nServer.DESCRIPTION_RECEIVED = constants_1.DESCRIPTION_RECEIVED;\n/** @event */\nServer.CLOSED = constants_1.CLOSED;\n/** @event */\nServer.ENDED = constants_1.ENDED;\nfunction calculateRoundTripTime(oldRtt, duration) {\n    if (oldRtt === -1) {\n        return duration;\n    }\n    const alpha = 0.2;\n    return alpha * duration + (1 - alpha) * oldRtt;\n}\nfunction markServerUnknown(server, error) {\n    // Load balancer servers can never be marked unknown.\n    if (server.loadBalanced) {\n        return;\n    }\n    if (error instanceof error_1.MongoNetworkError && !(error instanceof error_1.MongoNetworkTimeoutError)) {\n        server[kMonitor]?.reset();\n    }\n    server.emit(Server.DESCRIPTION_RECEIVED, new server_description_1.ServerDescription(server.description.hostAddress, undefined, { error }));\n}\nfunction isPinnableCommand(cmd, session) {\n    if (session) {\n        return (session.inTransaction() ||\n            'aggregate' in cmd ||\n            'find' in cmd ||\n            'getMore' in cmd ||\n            'listCollections' in cmd ||\n            'listIndexes' in cmd);\n    }\n    return false;\n}\nfunction connectionIsStale(pool, connection) {\n    if (connection.serviceId) {\n        return (connection.generation !== pool.serviceGenerations.get(connection.serviceId.toHexString()));\n    }\n    return connection.generation !== pool.generation;\n}\nfunction shouldHandleStateChangeError(server, err) {\n    const etv = err.topologyVersion;\n    const stv = server.description.topologyVersion;\n    return (0, server_description_1.compareTopologyVersion)(stv, etv) < 0;\n}\nfunction inActiveTransaction(session, cmd) {\n    return session && session.inTransaction() && !(0, transactions_1.isTransactionCommand)(cmd);\n}\n/** this checks the retryWrites option passed down from the client options, it\n * does not check if the server supports retryable writes */\nfunction isRetryableWritesEnabled(topology) {\n    return topology.s.options.retryWrites !== false;\n}\nfunction makeOperationHandler(server, connection, cmd, options, callback) {\n    const session = options?.session;\n    return function handleOperationResult(error, result) {\n        // We should not swallow an error if it is present.\n        if (error == null && result != null) {\n            return callback(undefined, result);\n        }\n        if (options != null && 'noResponse' in options && options.noResponse === true) {\n            return callback(undefined, null);\n        }\n        if (!error) {\n            return callback(new error_1.MongoUnexpectedServerResponseError('Empty response with no error'));\n        }\n        if (!(error instanceof error_1.MongoError)) {\n            // Node.js or some other error we have not special handling for\n            return callback(error);\n        }\n        if (connectionIsStale(server.s.pool, connection)) {\n            return callback(error);\n        }\n        if (error instanceof error_1.MongoNetworkError) {\n            if (session && !session.hasEnded && session.serverSession) {\n                session.serverSession.isDirty = true;\n            }\n            // inActiveTransaction check handles commit and abort.\n            if (inActiveTransaction(session, cmd) &&\n                !error.hasErrorLabel(error_1.MongoErrorLabel.TransientTransactionError)) {\n                error.addErrorLabel(error_1.MongoErrorLabel.TransientTransactionError);\n            }\n            if ((isRetryableWritesEnabled(server.s.topology) || (0, transactions_1.isTransactionCommand)(cmd)) &&\n                (0, utils_1.supportsRetryableWrites)(server) &&\n                !inActiveTransaction(session, cmd)) {\n                error.addErrorLabel(error_1.MongoErrorLabel.RetryableWriteError);\n            }\n        }\n        else {\n            if ((isRetryableWritesEnabled(server.s.topology) || (0, transactions_1.isTransactionCommand)(cmd)) &&\n                (0, error_1.needsRetryableWriteLabel)(error, (0, utils_1.maxWireVersion)(server)) &&\n                !inActiveTransaction(session, cmd)) {\n                error.addErrorLabel(error_1.MongoErrorLabel.RetryableWriteError);\n            }\n        }\n        if (session &&\n            session.isPinned &&\n            error.hasErrorLabel(error_1.MongoErrorLabel.TransientTransactionError)) {\n            session.unpin({ force: true });\n        }\n        server.handleError(error, connection);\n        return callback(error);\n    };\n}\n//# sourceMappingURL=server.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compareTopologyVersion = exports.parseServerType = exports.ServerDescription = void 0;\nconst bson_1 = require(\"../bson\");\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst common_1 = require(\"./common\");\nconst WRITABLE_SERVER_TYPES = new Set([\n    common_1.ServerType.RSPrimary,\n    common_1.ServerType.Standalone,\n    common_1.ServerType.Mongos,\n    common_1.ServerType.LoadBalancer\n]);\nconst DATA_BEARING_SERVER_TYPES = new Set([\n    common_1.ServerType.RSPrimary,\n    common_1.ServerType.RSSecondary,\n    common_1.ServerType.Mongos,\n    common_1.ServerType.Standalone,\n    common_1.ServerType.LoadBalancer\n]);\n/**\n * The client's view of a single server, based on the most recent hello outcome.\n *\n * Internal type, not meant to be directly instantiated\n * @public\n */\nclass ServerDescription {\n    /**\n     * Create a ServerDescription\n     * @internal\n     *\n     * @param address - The address of the server\n     * @param hello - An optional hello response for this server\n     */\n    constructor(address, hello, options = {}) {\n        if (address == null || address === '') {\n            throw new error_1.MongoRuntimeError('ServerDescription must be provided with a non-empty address');\n        }\n        this.address =\n            typeof address === 'string'\n                ? utils_1.HostAddress.fromString(address).toString() // Use HostAddress to normalize\n                : address.toString();\n        this.type = parseServerType(hello, options);\n        this.hosts = hello?.hosts?.map((host) => host.toLowerCase()) ?? [];\n        this.passives = hello?.passives?.map((host) => host.toLowerCase()) ?? [];\n        this.arbiters = hello?.arbiters?.map((host) => host.toLowerCase()) ?? [];\n        this.tags = hello?.tags ?? {};\n        this.minWireVersion = hello?.minWireVersion ?? 0;\n        this.maxWireVersion = hello?.maxWireVersion ?? 0;\n        this.roundTripTime = options?.roundTripTime ?? -1;\n        this.lastUpdateTime = (0, utils_1.now)();\n        this.lastWriteDate = hello?.lastWrite?.lastWriteDate ?? 0;\n        this.error = options.error ?? null;\n        // TODO(NODE-2674): Preserve int64 sent from MongoDB\n        this.topologyVersion = this.error?.topologyVersion ?? hello?.topologyVersion ?? null;\n        this.setName = hello?.setName ?? null;\n        this.setVersion = hello?.setVersion ?? null;\n        this.electionId = hello?.electionId ?? null;\n        this.logicalSessionTimeoutMinutes = hello?.logicalSessionTimeoutMinutes ?? null;\n        this.primary = hello?.primary ?? null;\n        this.me = hello?.me?.toLowerCase() ?? null;\n        this.$clusterTime = hello?.$clusterTime ?? null;\n    }\n    get hostAddress() {\n        return utils_1.HostAddress.fromString(this.address);\n    }\n    get allHosts() {\n        return this.hosts.concat(this.arbiters).concat(this.passives);\n    }\n    /** Is this server available for reads*/\n    get isReadable() {\n        return this.type === common_1.ServerType.RSSecondary || this.isWritable;\n    }\n    /** Is this server data bearing */\n    get isDataBearing() {\n        return DATA_BEARING_SERVER_TYPES.has(this.type);\n    }\n    /** Is this server available for writes */\n    get isWritable() {\n        return WRITABLE_SERVER_TYPES.has(this.type);\n    }\n    get host() {\n        const chopLength = `:${this.port}`.length;\n        return this.address.slice(0, -chopLength);\n    }\n    get port() {\n        const port = this.address.split(':').pop();\n        return port ? Number.parseInt(port, 10) : 27017;\n    }\n    /**\n     * Determines if another `ServerDescription` is equal to this one per the rules defined\n     * in the {@link https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#serverdescription|SDAM spec}\n     */\n    equals(other) {\n        // Despite using the comparator that would determine a nullish topologyVersion as greater than\n        // for equality we should only always perform direct equality comparison\n        const topologyVersionsEqual = this.topologyVersion === other?.topologyVersion ||\n            compareTopologyVersion(this.topologyVersion, other?.topologyVersion) === 0;\n        const electionIdsEqual = this.electionId != null && other?.electionId != null\n            ? (0, utils_1.compareObjectId)(this.electionId, other.electionId) === 0\n            : this.electionId === other?.electionId;\n        return (other != null &&\n            (0, utils_1.errorStrictEqual)(this.error, other.error) &&\n            this.type === other.type &&\n            this.minWireVersion === other.minWireVersion &&\n            (0, utils_1.arrayStrictEqual)(this.hosts, other.hosts) &&\n            tagsStrictEqual(this.tags, other.tags) &&\n            this.setName === other.setName &&\n            this.setVersion === other.setVersion &&\n            electionIdsEqual &&\n            this.primary === other.primary &&\n            this.logicalSessionTimeoutMinutes === other.logicalSessionTimeoutMinutes &&\n            topologyVersionsEqual);\n    }\n}\nexports.ServerDescription = ServerDescription;\n// Parses a `hello` message and determines the server type\nfunction parseServerType(hello, options) {\n    if (options?.loadBalanced) {\n        return common_1.ServerType.LoadBalancer;\n    }\n    if (!hello || !hello.ok) {\n        return common_1.ServerType.Unknown;\n    }\n    if (hello.isreplicaset) {\n        return common_1.ServerType.RSGhost;\n    }\n    if (hello.msg && hello.msg === 'isdbgrid') {\n        return common_1.ServerType.Mongos;\n    }\n    if (hello.setName) {\n        if (hello.hidden) {\n            return common_1.ServerType.RSOther;\n        }\n        else if (hello.isWritablePrimary) {\n            return common_1.ServerType.RSPrimary;\n        }\n        else if (hello.secondary) {\n            return common_1.ServerType.RSSecondary;\n        }\n        else if (hello.arbiterOnly) {\n            return common_1.ServerType.RSArbiter;\n        }\n        else {\n            return common_1.ServerType.RSOther;\n        }\n    }\n    return common_1.ServerType.Standalone;\n}\nexports.parseServerType = parseServerType;\nfunction tagsStrictEqual(tags, tags2) {\n    const tagsKeys = Object.keys(tags);\n    const tags2Keys = Object.keys(tags2);\n    return (tagsKeys.length === tags2Keys.length &&\n        tagsKeys.every((key) => tags2[key] === tags[key]));\n}\n/**\n * Compares two topology versions.\n *\n * 1. If the response topologyVersion is unset or the ServerDescription's\n *    topologyVersion is null, the client MUST assume the response is more recent.\n * 1. If the response's topologyVersion.processId is not equal to the\n *    ServerDescription's, the client MUST assume the response is more recent.\n * 1. If the response's topologyVersion.processId is equal to the\n *    ServerDescription's, the client MUST use the counter field to determine\n *    which topologyVersion is more recent.\n *\n * ```ts\n * currentTv <   newTv === -1\n * currentTv === newTv === 0\n * currentTv >   newTv === 1\n * ```\n */\nfunction compareTopologyVersion(currentTv, newTv) {\n    if (currentTv == null || newTv == null) {\n        return -1;\n    }\n    if (!currentTv.processId.equals(newTv.processId)) {\n        return -1;\n    }\n    // TODO(NODE-2674): Preserve int64 sent from MongoDB\n    const currentCounter = bson_1.Long.isLong(currentTv.counter)\n        ? currentTv.counter\n        : bson_1.Long.fromNumber(currentTv.counter);\n    const newCounter = bson_1.Long.isLong(newTv.counter) ? newTv.counter : bson_1.Long.fromNumber(newTv.counter);\n    return currentCounter.compare(newCounter);\n}\nexports.compareTopologyVersion = compareTopologyVersion;\n//# sourceMappingURL=server_description.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readPreferenceServerSelector = exports.secondaryWritableServerSelector = exports.sameServerSelector = exports.writableServerSelector = exports.MIN_SECONDARY_WRITE_WIRE_VERSION = void 0;\nconst error_1 = require(\"../error\");\nconst read_preference_1 = require(\"../read_preference\");\nconst common_1 = require(\"./common\");\n// max staleness constants\nconst IDLE_WRITE_PERIOD = 10000;\nconst SMALLEST_MAX_STALENESS_SECONDS = 90;\n//  Minimum version to try writes on secondaries.\nexports.MIN_SECONDARY_WRITE_WIRE_VERSION = 13;\n/**\n * Returns a server selector that selects for writable servers\n */\nfunction writableServerSelector() {\n    return (topologyDescription, servers) => latencyWindowReducer(topologyDescription, servers.filter((s) => s.isWritable));\n}\nexports.writableServerSelector = writableServerSelector;\n/**\n * The purpose of this selector is to select the same server, only\n * if it is in a state that it can have commands sent to it.\n */\nfunction sameServerSelector(description) {\n    return (topologyDescription, servers) => {\n        if (!description)\n            return [];\n        // Filter the servers to match the provided description only if\n        // the type is not unknown.\n        return servers.filter(sd => {\n            return sd.address === description.address && sd.type !== common_1.ServerType.Unknown;\n        });\n    };\n}\nexports.sameServerSelector = sameServerSelector;\n/**\n * Returns a server selector that uses a read preference to select a\n * server potentially for a write on a secondary.\n */\nfunction secondaryWritableServerSelector(wireVersion, readPreference) {\n    // If server version < 5.0, read preference always primary.\n    // If server version >= 5.0...\n    // - If read preference is supplied, use that.\n    // - If no read preference is supplied, use primary.\n    if (!readPreference ||\n        !wireVersion ||\n        (wireVersion && wireVersion < exports.MIN_SECONDARY_WRITE_WIRE_VERSION)) {\n        return readPreferenceServerSelector(read_preference_1.ReadPreference.primary);\n    }\n    return readPreferenceServerSelector(readPreference);\n}\nexports.secondaryWritableServerSelector = secondaryWritableServerSelector;\n/**\n * Reduces the passed in array of servers by the rules of the \"Max Staleness\" specification\n * found here: https://github.com/mongodb/specifications/blob/master/source/max-staleness/max-staleness.rst\n *\n * @param readPreference - The read preference providing max staleness guidance\n * @param topologyDescription - The topology description\n * @param servers - The list of server descriptions to be reduced\n * @returns The list of servers that satisfy the requirements of max staleness\n */\nfunction maxStalenessReducer(readPreference, topologyDescription, servers) {\n    if (readPreference.maxStalenessSeconds == null || readPreference.maxStalenessSeconds < 0) {\n        return servers;\n    }\n    const maxStaleness = readPreference.maxStalenessSeconds;\n    const maxStalenessVariance = (topologyDescription.heartbeatFrequencyMS + IDLE_WRITE_PERIOD) / 1000;\n    if (maxStaleness < maxStalenessVariance) {\n        throw new error_1.MongoInvalidArgumentError(`Option \"maxStalenessSeconds\" must be at least ${maxStalenessVariance} seconds`);\n    }\n    if (maxStaleness < SMALLEST_MAX_STALENESS_SECONDS) {\n        throw new error_1.MongoInvalidArgumentError(`Option \"maxStalenessSeconds\" must be at least ${SMALLEST_MAX_STALENESS_SECONDS} seconds`);\n    }\n    if (topologyDescription.type === common_1.TopologyType.ReplicaSetWithPrimary) {\n        const primary = Array.from(topologyDescription.servers.values()).filter(primaryFilter)[0];\n        return servers.reduce((result, server) => {\n            const stalenessMS = server.lastUpdateTime -\n                server.lastWriteDate -\n                (primary.lastUpdateTime - primary.lastWriteDate) +\n                topologyDescription.heartbeatFrequencyMS;\n            const staleness = stalenessMS / 1000;\n            const maxStalenessSeconds = readPreference.maxStalenessSeconds ?? 0;\n            if (staleness <= maxStalenessSeconds) {\n                result.push(server);\n            }\n            return result;\n        }, []);\n    }\n    if (topologyDescription.type === common_1.TopologyType.ReplicaSetNoPrimary) {\n        if (servers.length === 0) {\n            return servers;\n        }\n        const sMax = servers.reduce((max, s) => s.lastWriteDate > max.lastWriteDate ? s : max);\n        return servers.reduce((result, server) => {\n            const stalenessMS = sMax.lastWriteDate - server.lastWriteDate + topologyDescription.heartbeatFrequencyMS;\n            const staleness = stalenessMS / 1000;\n            const maxStalenessSeconds = readPreference.maxStalenessSeconds ?? 0;\n            if (staleness <= maxStalenessSeconds) {\n                result.push(server);\n            }\n            return result;\n        }, []);\n    }\n    return servers;\n}\n/**\n * Determines whether a server's tags match a given set of tags\n *\n * @param tagSet - The requested tag set to match\n * @param serverTags - The server's tags\n */\nfunction tagSetMatch(tagSet, serverTags) {\n    const keys = Object.keys(tagSet);\n    const serverTagKeys = Object.keys(serverTags);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (serverTagKeys.indexOf(key) === -1 || serverTags[key] !== tagSet[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Reduces a set of server descriptions based on tags requested by the read preference\n *\n * @param readPreference - The read preference providing the requested tags\n * @param servers - The list of server descriptions to reduce\n * @returns The list of servers matching the requested tags\n */\nfunction tagSetReducer(readPreference, servers) {\n    if (readPreference.tags == null ||\n        (Array.isArray(readPreference.tags) && readPreference.tags.length === 0)) {\n        return servers;\n    }\n    for (let i = 0; i < readPreference.tags.length; ++i) {\n        const tagSet = readPreference.tags[i];\n        const serversMatchingTagset = servers.reduce((matched, server) => {\n            if (tagSetMatch(tagSet, server.tags))\n                matched.push(server);\n            return matched;\n        }, []);\n        if (serversMatchingTagset.length) {\n            return serversMatchingTagset;\n        }\n    }\n    return [];\n}\n/**\n * Reduces a list of servers to ensure they fall within an acceptable latency window. This is\n * further specified in the \"Server Selection\" specification, found here:\n * https://github.com/mongodb/specifications/blob/master/source/server-selection/server-selection.rst\n *\n * @param topologyDescription - The topology description\n * @param servers - The list of servers to reduce\n * @returns The servers which fall within an acceptable latency window\n */\nfunction latencyWindowReducer(topologyDescription, servers) {\n    const low = servers.reduce((min, server) => min === -1 ? server.roundTripTime : Math.min(server.roundTripTime, min), -1);\n    const high = low + topologyDescription.localThresholdMS;\n    return servers.reduce((result, server) => {\n        if (server.roundTripTime <= high && server.roundTripTime >= low)\n            result.push(server);\n        return result;\n    }, []);\n}\n// filters\nfunction primaryFilter(server) {\n    return server.type === common_1.ServerType.RSPrimary;\n}\nfunction secondaryFilter(server) {\n    return server.type === common_1.ServerType.RSSecondary;\n}\nfunction nearestFilter(server) {\n    return server.type === common_1.ServerType.RSSecondary || server.type === common_1.ServerType.RSPrimary;\n}\nfunction knownFilter(server) {\n    return server.type !== common_1.ServerType.Unknown;\n}\nfunction loadBalancerFilter(server) {\n    return server.type === common_1.ServerType.LoadBalancer;\n}\n/**\n * Returns a function which selects servers based on a provided read preference\n *\n * @param readPreference - The read preference to select with\n */\nfunction readPreferenceServerSelector(readPreference) {\n    if (!readPreference.isValid()) {\n        throw new error_1.MongoInvalidArgumentError('Invalid read preference specified');\n    }\n    return (topologyDescription, servers) => {\n        const commonWireVersion = topologyDescription.commonWireVersion;\n        if (commonWireVersion &&\n            readPreference.minWireVersion &&\n            readPreference.minWireVersion > commonWireVersion) {\n            throw new error_1.MongoCompatibilityError(`Minimum wire version '${readPreference.minWireVersion}' required, but found '${commonWireVersion}'`);\n        }\n        if (topologyDescription.type === common_1.TopologyType.LoadBalanced) {\n            return servers.filter(loadBalancerFilter);\n        }\n        if (topologyDescription.type === common_1.TopologyType.Unknown) {\n            return [];\n        }\n        if (topologyDescription.type === common_1.TopologyType.Single ||\n            topologyDescription.type === common_1.TopologyType.Sharded) {\n            return latencyWindowReducer(topologyDescription, servers.filter(knownFilter));\n        }\n        const mode = readPreference.mode;\n        if (mode === read_preference_1.ReadPreference.PRIMARY) {\n            return servers.filter(primaryFilter);\n        }\n        if (mode === read_preference_1.ReadPreference.PRIMARY_PREFERRED) {\n            const result = servers.filter(primaryFilter);\n            if (result.length) {\n                return result;\n            }\n        }\n        const filter = mode === read_preference_1.ReadPreference.NEAREST ? nearestFilter : secondaryFilter;\n        const selectedServers = latencyWindowReducer(topologyDescription, tagSetReducer(readPreference, maxStalenessReducer(readPreference, topologyDescription, servers.filter(filter))));\n        if (mode === read_preference_1.ReadPreference.SECONDARY_PREFERRED && selectedServers.length === 0) {\n            return servers.filter(primaryFilter);\n        }\n        return selectedServers;\n    };\n}\nexports.readPreferenceServerSelector = readPreferenceServerSelector;\n//# sourceMappingURL=server_selection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SrvPoller = exports.SrvPollingEvent = void 0;\nconst dns = require(\"dns\");\nconst timers_1 = require(\"timers\");\nconst error_1 = require(\"../error\");\nconst mongo_types_1 = require(\"../mongo_types\");\nconst utils_1 = require(\"../utils\");\n/**\n * Determines whether a provided address matches the provided parent domain in order\n * to avoid certain attack vectors.\n *\n * @param srvAddress - The address to check against a domain\n * @param parentDomain - The domain to check the provided address against\n * @returns Whether the provided address matches the parent domain\n */\nfunction matchesParentDomain(srvAddress, parentDomain) {\n    const regex = /^.*?\\./;\n    const srv = `.${srvAddress.replace(regex, '')}`;\n    const parent = `.${parentDomain.replace(regex, '')}`;\n    return srv.endsWith(parent);\n}\n/**\n * @internal\n * @category Event\n */\nclass SrvPollingEvent {\n    constructor(srvRecords) {\n        this.srvRecords = srvRecords;\n    }\n    hostnames() {\n        return new Set(this.srvRecords.map(r => utils_1.HostAddress.fromSrvRecord(r).toString()));\n    }\n}\nexports.SrvPollingEvent = SrvPollingEvent;\n/** @internal */\nclass SrvPoller extends mongo_types_1.TypedEventEmitter {\n    constructor(options) {\n        super();\n        if (!options || !options.srvHost) {\n            throw new error_1.MongoRuntimeError('Options for SrvPoller must exist and include srvHost');\n        }\n        this.srvHost = options.srvHost;\n        this.srvMaxHosts = options.srvMaxHosts ?? 0;\n        this.srvServiceName = options.srvServiceName ?? 'mongodb';\n        this.rescanSrvIntervalMS = 60000;\n        this.heartbeatFrequencyMS = options.heartbeatFrequencyMS ?? 10000;\n        this.haMode = false;\n        this.generation = 0;\n        this._timeout = undefined;\n    }\n    get srvAddress() {\n        return `_${this.srvServiceName}._tcp.${this.srvHost}`;\n    }\n    get intervalMS() {\n        return this.haMode ? this.heartbeatFrequencyMS : this.rescanSrvIntervalMS;\n    }\n    start() {\n        if (!this._timeout) {\n            this.schedule();\n        }\n    }\n    stop() {\n        if (this._timeout) {\n            (0, timers_1.clearTimeout)(this._timeout);\n            this.generation += 1;\n            this._timeout = undefined;\n        }\n    }\n    // TODO(NODE-4994): implement new logging logic for SrvPoller failures\n    schedule() {\n        if (this._timeout) {\n            (0, timers_1.clearTimeout)(this._timeout);\n        }\n        this._timeout = (0, timers_1.setTimeout)(() => {\n            this._poll().catch(() => null);\n        }, this.intervalMS);\n    }\n    success(srvRecords) {\n        this.haMode = false;\n        this.schedule();\n        this.emit(SrvPoller.SRV_RECORD_DISCOVERY, new SrvPollingEvent(srvRecords));\n    }\n    failure() {\n        this.haMode = true;\n        this.schedule();\n    }\n    async _poll() {\n        const generation = this.generation;\n        let srvRecords;\n        try {\n            srvRecords = await dns.promises.resolveSrv(this.srvAddress);\n        }\n        catch (dnsError) {\n            this.failure();\n            return;\n        }\n        if (generation !== this.generation) {\n            return;\n        }\n        const finalAddresses = [];\n        for (const record of srvRecords) {\n            if (matchesParentDomain(record.name, this.srvHost)) {\n                finalAddresses.push(record);\n            }\n        }\n        if (!finalAddresses.length) {\n            this.failure();\n            return;\n        }\n        this.success(finalAddresses);\n    }\n}\nexports.SrvPoller = SrvPoller;\n/** @event */\nSrvPoller.SRV_RECORD_DISCOVERY = 'srvRecordDiscovery';\n//# sourceMappingURL=srv_polling.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerCapabilities = exports.Topology = void 0;\nconst process = require(\"process\");\nconst timers_1 = require(\"timers\");\nconst util_1 = require(\"util\");\nconst connection_string_1 = require(\"../connection_string\");\nconst constants_1 = require(\"../constants\");\nconst error_1 = require(\"../error\");\nconst mongo_types_1 = require(\"../mongo_types\");\nconst read_preference_1 = require(\"../read_preference\");\nconst utils_1 = require(\"../utils\");\nconst common_1 = require(\"./common\");\nconst events_1 = require(\"./events\");\nconst server_1 = require(\"./server\");\nconst server_description_1 = require(\"./server_description\");\nconst server_selection_1 = require(\"./server_selection\");\nconst srv_polling_1 = require(\"./srv_polling\");\nconst topology_description_1 = require(\"./topology_description\");\n// Global state\nlet globalTopologyCounter = 0;\nconst stateTransition = (0, utils_1.makeStateMachine)({\n    [common_1.STATE_CLOSED]: [common_1.STATE_CLOSED, common_1.STATE_CONNECTING],\n    [common_1.STATE_CONNECTING]: [common_1.STATE_CONNECTING, common_1.STATE_CLOSING, common_1.STATE_CONNECTED, common_1.STATE_CLOSED],\n    [common_1.STATE_CONNECTED]: [common_1.STATE_CONNECTED, common_1.STATE_CLOSING, common_1.STATE_CLOSED],\n    [common_1.STATE_CLOSING]: [common_1.STATE_CLOSING, common_1.STATE_CLOSED]\n});\n/** @internal */\nconst kCancelled = Symbol('cancelled');\n/** @internal */\nconst kWaitQueue = Symbol('waitQueue');\n/**\n * A container of server instances representing a connection to a MongoDB topology.\n * @internal\n */\nclass Topology extends mongo_types_1.TypedEventEmitter {\n    /**\n     * @param seedlist - a list of HostAddress instances to connect to\n     */\n    constructor(seeds, options) {\n        super();\n        this.selectServerAsync = (0, util_1.promisify)((selector, options, callback) => this.selectServer(selector, options, callback));\n        // Options should only be undefined in tests, MongoClient will always have defined options\n        options = options ?? {\n            hosts: [utils_1.HostAddress.fromString('localhost:27017')],\n            ...Object.fromEntries(connection_string_1.DEFAULT_OPTIONS.entries()),\n            ...Object.fromEntries(connection_string_1.FEATURE_FLAGS.entries())\n        };\n        if (typeof seeds === 'string') {\n            seeds = [utils_1.HostAddress.fromString(seeds)];\n        }\n        else if (!Array.isArray(seeds)) {\n            seeds = [seeds];\n        }\n        const seedlist = [];\n        for (const seed of seeds) {\n            if (typeof seed === 'string') {\n                seedlist.push(utils_1.HostAddress.fromString(seed));\n            }\n            else if (seed instanceof utils_1.HostAddress) {\n                seedlist.push(seed);\n            }\n            else {\n                // FIXME(NODE-3483): May need to be a MongoParseError\n                throw new error_1.MongoRuntimeError(`Topology cannot be constructed from ${JSON.stringify(seed)}`);\n            }\n        }\n        const topologyType = topologyTypeFromOptions(options);\n        const topologyId = globalTopologyCounter++;\n        const selectedHosts = options.srvMaxHosts == null ||\n            options.srvMaxHosts === 0 ||\n            options.srvMaxHosts >= seedlist.length\n            ? seedlist\n            : (0, utils_1.shuffle)(seedlist, options.srvMaxHosts);\n        const serverDescriptions = new Map();\n        for (const hostAddress of selectedHosts) {\n            serverDescriptions.set(hostAddress.toString(), new server_description_1.ServerDescription(hostAddress));\n        }\n        this[kWaitQueue] = new utils_1.List();\n        this.s = {\n            // the id of this topology\n            id: topologyId,\n            // passed in options\n            options,\n            // initial seedlist of servers to connect to\n            seedlist,\n            // initial state\n            state: common_1.STATE_CLOSED,\n            // the topology description\n            description: new topology_description_1.TopologyDescription(topologyType, serverDescriptions, options.replicaSet, undefined, undefined, undefined, options),\n            serverSelectionTimeoutMS: options.serverSelectionTimeoutMS,\n            heartbeatFrequencyMS: options.heartbeatFrequencyMS,\n            minHeartbeatFrequencyMS: options.minHeartbeatFrequencyMS,\n            // a map of server instances to normalized addresses\n            servers: new Map(),\n            credentials: options?.credentials,\n            clusterTime: undefined,\n            // timer management\n            connectionTimers: new Set(),\n            detectShardedTopology: ev => this.detectShardedTopology(ev),\n            detectSrvRecords: ev => this.detectSrvRecords(ev)\n        };\n        if (options.srvHost && !options.loadBalanced) {\n            this.s.srvPoller =\n                options.srvPoller ??\n                    new srv_polling_1.SrvPoller({\n                        heartbeatFrequencyMS: this.s.heartbeatFrequencyMS,\n                        srvHost: options.srvHost,\n                        srvMaxHosts: options.srvMaxHosts,\n                        srvServiceName: options.srvServiceName\n                    });\n            this.on(Topology.TOPOLOGY_DESCRIPTION_CHANGED, this.s.detectShardedTopology);\n        }\n    }\n    detectShardedTopology(event) {\n        const previousType = event.previousDescription.type;\n        const newType = event.newDescription.type;\n        const transitionToSharded = previousType !== common_1.TopologyType.Sharded && newType === common_1.TopologyType.Sharded;\n        const srvListeners = this.s.srvPoller?.listeners(srv_polling_1.SrvPoller.SRV_RECORD_DISCOVERY);\n        const listeningToSrvPolling = !!srvListeners?.includes(this.s.detectSrvRecords);\n        if (transitionToSharded && !listeningToSrvPolling) {\n            this.s.srvPoller?.on(srv_polling_1.SrvPoller.SRV_RECORD_DISCOVERY, this.s.detectSrvRecords);\n            this.s.srvPoller?.start();\n        }\n    }\n    detectSrvRecords(ev) {\n        const previousTopologyDescription = this.s.description;\n        this.s.description = this.s.description.updateFromSrvPollingEvent(ev, this.s.options.srvMaxHosts);\n        if (this.s.description === previousTopologyDescription) {\n            // Nothing changed, so return\n            return;\n        }\n        updateServers(this);\n        this.emit(Topology.TOPOLOGY_DESCRIPTION_CHANGED, new events_1.TopologyDescriptionChangedEvent(this.s.id, previousTopologyDescription, this.s.description));\n    }\n    /**\n     * @returns A `TopologyDescription` for this topology\n     */\n    get description() {\n        return this.s.description;\n    }\n    get loadBalanced() {\n        return this.s.options.loadBalanced;\n    }\n    get capabilities() {\n        return new ServerCapabilities(this.lastHello());\n    }\n    connect(options, callback) {\n        if (typeof options === 'function')\n            (callback = options), (options = {});\n        options = options ?? {};\n        if (this.s.state === common_1.STATE_CONNECTED) {\n            if (typeof callback === 'function') {\n                callback();\n            }\n            return;\n        }\n        stateTransition(this, common_1.STATE_CONNECTING);\n        // emit SDAM monitoring events\n        this.emit(Topology.TOPOLOGY_OPENING, new events_1.TopologyOpeningEvent(this.s.id));\n        // emit an event for the topology change\n        this.emit(Topology.TOPOLOGY_DESCRIPTION_CHANGED, new events_1.TopologyDescriptionChangedEvent(this.s.id, new topology_description_1.TopologyDescription(common_1.TopologyType.Unknown), // initial is always Unknown\n        this.s.description));\n        // connect all known servers, then attempt server selection to connect\n        const serverDescriptions = Array.from(this.s.description.servers.values());\n        this.s.servers = new Map(serverDescriptions.map(serverDescription => [\n            serverDescription.address,\n            createAndConnectServer(this, serverDescription)\n        ]));\n        // In load balancer mode we need to fake a server description getting\n        // emitted from the monitor, since the monitor doesn't exist.\n        if (this.s.options.loadBalanced) {\n            for (const description of serverDescriptions) {\n                const newDescription = new server_description_1.ServerDescription(description.hostAddress, undefined, {\n                    loadBalanced: this.s.options.loadBalanced\n                });\n                this.serverUpdateHandler(newDescription);\n            }\n        }\n        const exitWithError = (error) => callback ? callback(error) : this.emit(Topology.ERROR, error);\n        const readPreference = options.readPreference ?? read_preference_1.ReadPreference.primary;\n        this.selectServer((0, server_selection_1.readPreferenceServerSelector)(readPreference), options, (err, server) => {\n            if (err) {\n                return this.close({ force: false }, () => exitWithError(err));\n            }\n            // TODO: NODE-2471\n            const skipPingOnConnect = this.s.options[Symbol.for('@@mdb.skipPingOnConnect')] === true;\n            if (!skipPingOnConnect && server && this.s.credentials) {\n                server.command((0, utils_1.ns)('admin.$cmd'), { ping: 1 }, {}, err => {\n                    if (err) {\n                        return exitWithError(err);\n                    }\n                    stateTransition(this, common_1.STATE_CONNECTED);\n                    this.emit(Topology.OPEN, this);\n                    this.emit(Topology.CONNECT, this);\n                    callback?.(undefined, this);\n                });\n                return;\n            }\n            stateTransition(this, common_1.STATE_CONNECTED);\n            this.emit(Topology.OPEN, this);\n            this.emit(Topology.CONNECT, this);\n            callback?.(undefined, this);\n        });\n    }\n    close(options, callback) {\n        options = options ?? { force: false };\n        if (this.s.state === common_1.STATE_CLOSED || this.s.state === common_1.STATE_CLOSING) {\n            return callback?.();\n        }\n        const destroyedServers = Array.from(this.s.servers.values(), server => {\n            return (0, util_1.promisify)(destroyServer)(server, this, { force: !!options?.force });\n        });\n        Promise.all(destroyedServers)\n            .then(() => {\n            this.s.servers.clear();\n            stateTransition(this, common_1.STATE_CLOSING);\n            drainWaitQueue(this[kWaitQueue], new error_1.MongoTopologyClosedError());\n            (0, common_1.drainTimerQueue)(this.s.connectionTimers);\n            if (this.s.srvPoller) {\n                this.s.srvPoller.stop();\n                this.s.srvPoller.removeListener(srv_polling_1.SrvPoller.SRV_RECORD_DISCOVERY, this.s.detectSrvRecords);\n            }\n            this.removeListener(Topology.TOPOLOGY_DESCRIPTION_CHANGED, this.s.detectShardedTopology);\n            stateTransition(this, common_1.STATE_CLOSED);\n            // emit an event for close\n            this.emit(Topology.TOPOLOGY_CLOSED, new events_1.TopologyClosedEvent(this.s.id));\n        })\n            .finally(() => callback?.());\n    }\n    /**\n     * Selects a server according to the selection predicate provided\n     *\n     * @param selector - An optional selector to select servers by, defaults to a random selection within a latency window\n     * @param options - Optional settings related to server selection\n     * @param callback - The callback used to indicate success or failure\n     * @returns An instance of a `Server` meeting the criteria of the predicate provided\n     */\n    selectServer(selector, options, callback) {\n        let serverSelector;\n        if (typeof selector !== 'function') {\n            if (typeof selector === 'string') {\n                serverSelector = (0, server_selection_1.readPreferenceServerSelector)(read_preference_1.ReadPreference.fromString(selector));\n            }\n            else {\n                let readPreference;\n                if (selector instanceof read_preference_1.ReadPreference) {\n                    readPreference = selector;\n                }\n                else {\n                    read_preference_1.ReadPreference.translate(options);\n                    readPreference = options.readPreference || read_preference_1.ReadPreference.primary;\n                }\n                serverSelector = (0, server_selection_1.readPreferenceServerSelector)(readPreference);\n            }\n        }\n        else {\n            serverSelector = selector;\n        }\n        options = Object.assign({}, { serverSelectionTimeoutMS: this.s.serverSelectionTimeoutMS }, options);\n        const isSharded = this.description.type === common_1.TopologyType.Sharded;\n        const session = options.session;\n        const transaction = session && session.transaction;\n        if (isSharded && transaction && transaction.server) {\n            callback(undefined, transaction.server);\n            return;\n        }\n        const waitQueueMember = {\n            serverSelector,\n            transaction,\n            callback\n        };\n        const serverSelectionTimeoutMS = options.serverSelectionTimeoutMS;\n        if (serverSelectionTimeoutMS) {\n            waitQueueMember.timer = (0, timers_1.setTimeout)(() => {\n                waitQueueMember[kCancelled] = true;\n                waitQueueMember.timer = undefined;\n                const timeoutError = new error_1.MongoServerSelectionError(`Server selection timed out after ${serverSelectionTimeoutMS} ms`, this.description);\n                waitQueueMember.callback(timeoutError);\n            }, serverSelectionTimeoutMS);\n        }\n        this[kWaitQueue].push(waitQueueMember);\n        processWaitQueue(this);\n    }\n    /**\n     * Update the internal TopologyDescription with a ServerDescription\n     *\n     * @param serverDescription - The server to update in the internal list of server descriptions\n     */\n    serverUpdateHandler(serverDescription) {\n        if (!this.s.description.hasServer(serverDescription.address)) {\n            return;\n        }\n        // ignore this server update if its from an outdated topologyVersion\n        if (isStaleServerDescription(this.s.description, serverDescription)) {\n            return;\n        }\n        // these will be used for monitoring events later\n        const previousTopologyDescription = this.s.description;\n        const previousServerDescription = this.s.description.servers.get(serverDescription.address);\n        if (!previousServerDescription) {\n            return;\n        }\n        // Driver Sessions Spec: \"Whenever a driver receives a cluster time from\n        // a server it MUST compare it to the current highest seen cluster time\n        // for the deployment. If the new cluster time is higher than the\n        // highest seen cluster time it MUST become the new highest seen cluster\n        // time. Two cluster times are compared using only the BsonTimestamp\n        // value of the clusterTime embedded field.\"\n        const clusterTime = serverDescription.$clusterTime;\n        if (clusterTime) {\n            (0, common_1._advanceClusterTime)(this, clusterTime);\n        }\n        // If we already know all the information contained in this updated description, then\n        // we don't need to emit SDAM events, but still need to update the description, in order\n        // to keep client-tracked attributes like last update time and round trip time up to date\n        const equalDescriptions = previousServerDescription && previousServerDescription.equals(serverDescription);\n        // first update the TopologyDescription\n        this.s.description = this.s.description.update(serverDescription);\n        if (this.s.description.compatibilityError) {\n            this.emit(Topology.ERROR, new error_1.MongoCompatibilityError(this.s.description.compatibilityError));\n            return;\n        }\n        // emit monitoring events for this change\n        if (!equalDescriptions) {\n            const newDescription = this.s.description.servers.get(serverDescription.address);\n            if (newDescription) {\n                this.emit(Topology.SERVER_DESCRIPTION_CHANGED, new events_1.ServerDescriptionChangedEvent(this.s.id, serverDescription.address, previousServerDescription, newDescription));\n            }\n        }\n        // update server list from updated descriptions\n        updateServers(this, serverDescription);\n        // attempt to resolve any outstanding server selection attempts\n        if (this[kWaitQueue].length > 0) {\n            processWaitQueue(this);\n        }\n        if (!equalDescriptions) {\n            this.emit(Topology.TOPOLOGY_DESCRIPTION_CHANGED, new events_1.TopologyDescriptionChangedEvent(this.s.id, previousTopologyDescription, this.s.description));\n        }\n    }\n    auth(credentials, callback) {\n        if (typeof credentials === 'function')\n            (callback = credentials), (credentials = undefined);\n        if (typeof callback === 'function')\n            callback(undefined, true);\n    }\n    get clientMetadata() {\n        return this.s.options.metadata;\n    }\n    isConnected() {\n        return this.s.state === common_1.STATE_CONNECTED;\n    }\n    isDestroyed() {\n        return this.s.state === common_1.STATE_CLOSED;\n    }\n    // NOTE: There are many places in code where we explicitly check the last hello\n    //       to do feature support detection. This should be done any other way, but for\n    //       now we will just return the first hello seen, which should suffice.\n    lastHello() {\n        const serverDescriptions = Array.from(this.description.servers.values());\n        if (serverDescriptions.length === 0)\n            return {};\n        const sd = serverDescriptions.filter((sd) => sd.type !== common_1.ServerType.Unknown)[0];\n        const result = sd || { maxWireVersion: this.description.commonWireVersion };\n        return result;\n    }\n    get commonWireVersion() {\n        return this.description.commonWireVersion;\n    }\n    get logicalSessionTimeoutMinutes() {\n        return this.description.logicalSessionTimeoutMinutes;\n    }\n    get clusterTime() {\n        return this.s.clusterTime;\n    }\n    set clusterTime(clusterTime) {\n        this.s.clusterTime = clusterTime;\n    }\n}\nexports.Topology = Topology;\n/** @event */\nTopology.SERVER_OPENING = constants_1.SERVER_OPENING;\n/** @event */\nTopology.SERVER_CLOSED = constants_1.SERVER_CLOSED;\n/** @event */\nTopology.SERVER_DESCRIPTION_CHANGED = constants_1.SERVER_DESCRIPTION_CHANGED;\n/** @event */\nTopology.TOPOLOGY_OPENING = constants_1.TOPOLOGY_OPENING;\n/** @event */\nTopology.TOPOLOGY_CLOSED = constants_1.TOPOLOGY_CLOSED;\n/** @event */\nTopology.TOPOLOGY_DESCRIPTION_CHANGED = constants_1.TOPOLOGY_DESCRIPTION_CHANGED;\n/** @event */\nTopology.ERROR = constants_1.ERROR;\n/** @event */\nTopology.OPEN = constants_1.OPEN;\n/** @event */\nTopology.CONNECT = constants_1.CONNECT;\n/** @event */\nTopology.CLOSE = constants_1.CLOSE;\n/** @event */\nTopology.TIMEOUT = constants_1.TIMEOUT;\n/** Destroys a server, and removes all event listeners from the instance */\nfunction destroyServer(server, topology, options, callback) {\n    options = options ?? { force: false };\n    for (const event of constants_1.LOCAL_SERVER_EVENTS) {\n        server.removeAllListeners(event);\n    }\n    server.destroy(options, () => {\n        topology.emit(Topology.SERVER_CLOSED, new events_1.ServerClosedEvent(topology.s.id, server.description.address));\n        for (const event of constants_1.SERVER_RELAY_EVENTS) {\n            server.removeAllListeners(event);\n        }\n        if (typeof callback === 'function') {\n            callback();\n        }\n    });\n}\n/** Predicts the TopologyType from options */\nfunction topologyTypeFromOptions(options) {\n    if (options?.directConnection) {\n        return common_1.TopologyType.Single;\n    }\n    if (options?.replicaSet) {\n        return common_1.TopologyType.ReplicaSetNoPrimary;\n    }\n    if (options?.loadBalanced) {\n        return common_1.TopologyType.LoadBalanced;\n    }\n    return common_1.TopologyType.Unknown;\n}\n/**\n * Creates new server instances and attempts to connect them\n *\n * @param topology - The topology that this server belongs to\n * @param serverDescription - The description for the server to initialize and connect to\n */\nfunction createAndConnectServer(topology, serverDescription) {\n    topology.emit(Topology.SERVER_OPENING, new events_1.ServerOpeningEvent(topology.s.id, serverDescription.address));\n    const server = new server_1.Server(topology, serverDescription, topology.s.options);\n    for (const event of constants_1.SERVER_RELAY_EVENTS) {\n        server.on(event, (e) => topology.emit(event, e));\n    }\n    server.on(server_1.Server.DESCRIPTION_RECEIVED, description => topology.serverUpdateHandler(description));\n    server.connect();\n    return server;\n}\n/**\n * @param topology - Topology to update.\n * @param incomingServerDescription - New server description.\n */\nfunction updateServers(topology, incomingServerDescription) {\n    // update the internal server's description\n    if (incomingServerDescription && topology.s.servers.has(incomingServerDescription.address)) {\n        const server = topology.s.servers.get(incomingServerDescription.address);\n        if (server) {\n            server.s.description = incomingServerDescription;\n            if (incomingServerDescription.error instanceof error_1.MongoError &&\n                incomingServerDescription.error.hasErrorLabel(error_1.MongoErrorLabel.ResetPool)) {\n                const interruptInUseConnections = incomingServerDescription.error.hasErrorLabel(error_1.MongoErrorLabel.InterruptInUseConnections);\n                server.s.pool.clear({ interruptInUseConnections });\n            }\n            else if (incomingServerDescription.error == null) {\n                const newTopologyType = topology.s.description.type;\n                const shouldMarkPoolReady = incomingServerDescription.isDataBearing ||\n                    (incomingServerDescription.type !== common_1.ServerType.Unknown &&\n                        newTopologyType === common_1.TopologyType.Single);\n                if (shouldMarkPoolReady) {\n                    server.s.pool.ready();\n                }\n            }\n        }\n    }\n    // add new servers for all descriptions we currently don't know about locally\n    for (const serverDescription of topology.description.servers.values()) {\n        if (!topology.s.servers.has(serverDescription.address)) {\n            const server = createAndConnectServer(topology, serverDescription);\n            topology.s.servers.set(serverDescription.address, server);\n        }\n    }\n    // for all servers no longer known, remove their descriptions and destroy their instances\n    for (const entry of topology.s.servers) {\n        const serverAddress = entry[0];\n        if (topology.description.hasServer(serverAddress)) {\n            continue;\n        }\n        if (!topology.s.servers.has(serverAddress)) {\n            continue;\n        }\n        const server = topology.s.servers.get(serverAddress);\n        topology.s.servers.delete(serverAddress);\n        // prepare server for garbage collection\n        if (server) {\n            destroyServer(server, topology);\n        }\n    }\n}\nfunction drainWaitQueue(queue, err) {\n    while (queue.length) {\n        const waitQueueMember = queue.shift();\n        if (!waitQueueMember) {\n            continue;\n        }\n        if (waitQueueMember.timer) {\n            (0, timers_1.clearTimeout)(waitQueueMember.timer);\n        }\n        if (!waitQueueMember[kCancelled]) {\n            waitQueueMember.callback(err);\n        }\n    }\n}\nfunction processWaitQueue(topology) {\n    if (topology.s.state === common_1.STATE_CLOSED) {\n        drainWaitQueue(topology[kWaitQueue], new error_1.MongoTopologyClosedError());\n        return;\n    }\n    const isSharded = topology.description.type === common_1.TopologyType.Sharded;\n    const serverDescriptions = Array.from(topology.description.servers.values());\n    const membersToProcess = topology[kWaitQueue].length;\n    for (let i = 0; i < membersToProcess; ++i) {\n        const waitQueueMember = topology[kWaitQueue].shift();\n        if (!waitQueueMember) {\n            continue;\n        }\n        if (waitQueueMember[kCancelled]) {\n            continue;\n        }\n        let selectedDescriptions;\n        try {\n            const serverSelector = waitQueueMember.serverSelector;\n            selectedDescriptions = serverSelector\n                ? serverSelector(topology.description, serverDescriptions)\n                : serverDescriptions;\n        }\n        catch (e) {\n            if (waitQueueMember.timer) {\n                (0, timers_1.clearTimeout)(waitQueueMember.timer);\n            }\n            waitQueueMember.callback(e);\n            continue;\n        }\n        let selectedServer;\n        if (selectedDescriptions.length === 0) {\n            topology[kWaitQueue].push(waitQueueMember);\n            continue;\n        }\n        else if (selectedDescriptions.length === 1) {\n            selectedServer = topology.s.servers.get(selectedDescriptions[0].address);\n        }\n        else {\n            const descriptions = (0, utils_1.shuffle)(selectedDescriptions, 2);\n            const server1 = topology.s.servers.get(descriptions[0].address);\n            const server2 = topology.s.servers.get(descriptions[1].address);\n            selectedServer =\n                server1 && server2 && server1.s.operationCount < server2.s.operationCount\n                    ? server1\n                    : server2;\n        }\n        if (!selectedServer) {\n            waitQueueMember.callback(new error_1.MongoServerSelectionError('server selection returned a server description but the server was not found in the topology', topology.description));\n            return;\n        }\n        const transaction = waitQueueMember.transaction;\n        if (isSharded && transaction && transaction.isActive && selectedServer) {\n            transaction.pinServer(selectedServer);\n        }\n        if (waitQueueMember.timer) {\n            (0, timers_1.clearTimeout)(waitQueueMember.timer);\n        }\n        waitQueueMember.callback(undefined, selectedServer);\n    }\n    if (topology[kWaitQueue].length > 0) {\n        // ensure all server monitors attempt monitoring soon\n        for (const [, server] of topology.s.servers) {\n            process.nextTick(function scheduleServerCheck() {\n                return server.requestCheck();\n            });\n        }\n    }\n}\nfunction isStaleServerDescription(topologyDescription, incomingServerDescription) {\n    const currentServerDescription = topologyDescription.servers.get(incomingServerDescription.address);\n    const currentTopologyVersion = currentServerDescription?.topologyVersion;\n    return ((0, server_description_1.compareTopologyVersion)(currentTopologyVersion, incomingServerDescription.topologyVersion) > 0);\n}\n/** @public */\nclass ServerCapabilities {\n    constructor(hello) {\n        this.minWireVersion = hello.minWireVersion || 0;\n        this.maxWireVersion = hello.maxWireVersion || 0;\n    }\n    get hasAggregationCursor() {\n        return this.maxWireVersion >= 1;\n    }\n    get hasWriteCommands() {\n        return this.maxWireVersion >= 2;\n    }\n    get hasTextSearch() {\n        return this.minWireVersion >= 0;\n    }\n    get hasAuthCommands() {\n        return this.maxWireVersion >= 1;\n    }\n    get hasListCollectionsCommand() {\n        return this.maxWireVersion >= 3;\n    }\n    get hasListIndexesCommand() {\n        return this.maxWireVersion >= 3;\n    }\n    get supportsSnapshotReads() {\n        return this.maxWireVersion >= 13;\n    }\n    get commandsTakeWriteConcern() {\n        return this.maxWireVersion >= 5;\n    }\n    get commandsTakeCollation() {\n        return this.maxWireVersion >= 5;\n    }\n}\nexports.ServerCapabilities = ServerCapabilities;\n//# sourceMappingURL=topology.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TopologyDescription = void 0;\nconst WIRE_CONSTANTS = require(\"../cmap/wire_protocol/constants\");\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst common_1 = require(\"./common\");\nconst server_description_1 = require(\"./server_description\");\n// constants related to compatibility checks\nconst MIN_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_SERVER_VERSION;\nconst MAX_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_SERVER_VERSION;\nconst MIN_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_WIRE_VERSION;\nconst MAX_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_WIRE_VERSION;\nconst MONGOS_OR_UNKNOWN = new Set([common_1.ServerType.Mongos, common_1.ServerType.Unknown]);\nconst MONGOS_OR_STANDALONE = new Set([common_1.ServerType.Mongos, common_1.ServerType.Standalone]);\nconst NON_PRIMARY_RS_MEMBERS = new Set([\n    common_1.ServerType.RSSecondary,\n    common_1.ServerType.RSArbiter,\n    common_1.ServerType.RSOther\n]);\n/**\n * Representation of a deployment of servers\n * @public\n */\nclass TopologyDescription {\n    /**\n     * Create a TopologyDescription\n     */\n    constructor(topologyType, serverDescriptions = null, setName = null, maxSetVersion = null, maxElectionId = null, commonWireVersion = null, options = null) {\n        options = options ?? {};\n        this.type = topologyType ?? common_1.TopologyType.Unknown;\n        this.servers = serverDescriptions ?? new Map();\n        this.stale = false;\n        this.compatible = true;\n        this.heartbeatFrequencyMS = options.heartbeatFrequencyMS ?? 0;\n        this.localThresholdMS = options.localThresholdMS ?? 15;\n        this.setName = setName ?? null;\n        this.maxElectionId = maxElectionId ?? null;\n        this.maxSetVersion = maxSetVersion ?? null;\n        this.commonWireVersion = commonWireVersion ?? 0;\n        // determine server compatibility\n        for (const serverDescription of this.servers.values()) {\n            // Load balancer mode is always compatible.\n            if (serverDescription.type === common_1.ServerType.Unknown ||\n                serverDescription.type === common_1.ServerType.LoadBalancer) {\n                continue;\n            }\n            if (serverDescription.minWireVersion > MAX_SUPPORTED_WIRE_VERSION) {\n                this.compatible = false;\n                this.compatibilityError = `Server at ${serverDescription.address} requires wire version ${serverDescription.minWireVersion}, but this version of the driver only supports up to ${MAX_SUPPORTED_WIRE_VERSION} (MongoDB ${MAX_SUPPORTED_SERVER_VERSION})`;\n            }\n            if (serverDescription.maxWireVersion < MIN_SUPPORTED_WIRE_VERSION) {\n                this.compatible = false;\n                this.compatibilityError = `Server at ${serverDescription.address} reports wire version ${serverDescription.maxWireVersion}, but this version of the driver requires at least ${MIN_SUPPORTED_WIRE_VERSION} (MongoDB ${MIN_SUPPORTED_SERVER_VERSION}).`;\n                break;\n            }\n        }\n        // Whenever a client updates the TopologyDescription from a hello response, it MUST set\n        // TopologyDescription.logicalSessionTimeoutMinutes to the smallest logicalSessionTimeoutMinutes\n        // value among ServerDescriptions of all data-bearing server types. If any have a null\n        // logicalSessionTimeoutMinutes, then TopologyDescription.logicalSessionTimeoutMinutes MUST be\n        // set to null.\n        this.logicalSessionTimeoutMinutes = null;\n        for (const [, server] of this.servers) {\n            if (server.isReadable) {\n                if (server.logicalSessionTimeoutMinutes == null) {\n                    // If any of the servers have a null logicalSessionsTimeout, then the whole topology does\n                    this.logicalSessionTimeoutMinutes = null;\n                    break;\n                }\n                if (this.logicalSessionTimeoutMinutes == null) {\n                    // First server with a non null logicalSessionsTimeout\n                    this.logicalSessionTimeoutMinutes = server.logicalSessionTimeoutMinutes;\n                    continue;\n                }\n                // Always select the smaller of the:\n                // current server logicalSessionsTimeout and the topologies logicalSessionsTimeout\n                this.logicalSessionTimeoutMinutes = Math.min(this.logicalSessionTimeoutMinutes, server.logicalSessionTimeoutMinutes);\n            }\n        }\n    }\n    /**\n     * Returns a new TopologyDescription based on the SrvPollingEvent\n     * @internal\n     */\n    updateFromSrvPollingEvent(ev, srvMaxHosts = 0) {\n        /** The SRV addresses defines the set of addresses we should be using */\n        const incomingHostnames = ev.hostnames();\n        const currentHostnames = new Set(this.servers.keys());\n        const hostnamesToAdd = new Set(incomingHostnames);\n        const hostnamesToRemove = new Set();\n        for (const hostname of currentHostnames) {\n            // filter hostnamesToAdd (made from incomingHostnames) down to what is *not* present in currentHostnames\n            hostnamesToAdd.delete(hostname);\n            if (!incomingHostnames.has(hostname)) {\n                // If the SRV Records no longer include this hostname\n                // we have to stop using it\n                hostnamesToRemove.add(hostname);\n            }\n        }\n        if (hostnamesToAdd.size === 0 && hostnamesToRemove.size === 0) {\n            // No new hosts to add and none to remove\n            return this;\n        }\n        const serverDescriptions = new Map(this.servers);\n        for (const removedHost of hostnamesToRemove) {\n            serverDescriptions.delete(removedHost);\n        }\n        if (hostnamesToAdd.size > 0) {\n            if (srvMaxHosts === 0) {\n                // Add all!\n                for (const hostToAdd of hostnamesToAdd) {\n                    serverDescriptions.set(hostToAdd, new server_description_1.ServerDescription(hostToAdd));\n                }\n            }\n            else if (serverDescriptions.size < srvMaxHosts) {\n                // Add only the amount needed to get us back to srvMaxHosts\n                const selectedHosts = (0, utils_1.shuffle)(hostnamesToAdd, srvMaxHosts - serverDescriptions.size);\n                for (const selectedHostToAdd of selectedHosts) {\n                    serverDescriptions.set(selectedHostToAdd, new server_description_1.ServerDescription(selectedHostToAdd));\n                }\n            }\n        }\n        return new TopologyDescription(this.type, serverDescriptions, this.setName, this.maxSetVersion, this.maxElectionId, this.commonWireVersion, { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS });\n    }\n    /**\n     * Returns a copy of this description updated with a given ServerDescription\n     * @internal\n     */\n    update(serverDescription) {\n        const address = serverDescription.address;\n        // potentially mutated values\n        let { type: topologyType, setName, maxSetVersion, maxElectionId, commonWireVersion } = this;\n        const serverType = serverDescription.type;\n        const serverDescriptions = new Map(this.servers);\n        // update common wire version\n        if (serverDescription.maxWireVersion !== 0) {\n            if (commonWireVersion == null) {\n                commonWireVersion = serverDescription.maxWireVersion;\n            }\n            else {\n                commonWireVersion = Math.min(commonWireVersion, serverDescription.maxWireVersion);\n            }\n        }\n        if (typeof serverDescription.setName === 'string' &&\n            typeof setName === 'string' &&\n            serverDescription.setName !== setName) {\n            if (topologyType === common_1.TopologyType.Single) {\n                // \"Single\" Topology with setName mismatch is direct connection usage, mark unknown do not remove\n                serverDescription = new server_description_1.ServerDescription(address);\n            }\n            else {\n                serverDescriptions.delete(address);\n            }\n        }\n        // update the actual server description\n        serverDescriptions.set(address, serverDescription);\n        if (topologyType === common_1.TopologyType.Single) {\n            // once we are defined as single, that never changes\n            return new TopologyDescription(common_1.TopologyType.Single, serverDescriptions, setName, maxSetVersion, maxElectionId, commonWireVersion, { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS });\n        }\n        if (topologyType === common_1.TopologyType.Unknown) {\n            if (serverType === common_1.ServerType.Standalone && this.servers.size !== 1) {\n                serverDescriptions.delete(address);\n            }\n            else {\n                topologyType = topologyTypeForServerType(serverType);\n            }\n        }\n        if (topologyType === common_1.TopologyType.Sharded) {\n            if (!MONGOS_OR_UNKNOWN.has(serverType)) {\n                serverDescriptions.delete(address);\n            }\n        }\n        if (topologyType === common_1.TopologyType.ReplicaSetNoPrimary) {\n            if (MONGOS_OR_STANDALONE.has(serverType)) {\n                serverDescriptions.delete(address);\n            }\n            if (serverType === common_1.ServerType.RSPrimary) {\n                const result = updateRsFromPrimary(serverDescriptions, serverDescription, setName, maxSetVersion, maxElectionId);\n                topologyType = result[0];\n                setName = result[1];\n                maxSetVersion = result[2];\n                maxElectionId = result[3];\n            }\n            else if (NON_PRIMARY_RS_MEMBERS.has(serverType)) {\n                const result = updateRsNoPrimaryFromMember(serverDescriptions, serverDescription, setName);\n                topologyType = result[0];\n                setName = result[1];\n            }\n        }\n        if (topologyType === common_1.TopologyType.ReplicaSetWithPrimary) {\n            if (MONGOS_OR_STANDALONE.has(serverType)) {\n                serverDescriptions.delete(address);\n                topologyType = checkHasPrimary(serverDescriptions);\n            }\n            else if (serverType === common_1.ServerType.RSPrimary) {\n                const result = updateRsFromPrimary(serverDescriptions, serverDescription, setName, maxSetVersion, maxElectionId);\n                topologyType = result[0];\n                setName = result[1];\n                maxSetVersion = result[2];\n                maxElectionId = result[3];\n            }\n            else if (NON_PRIMARY_RS_MEMBERS.has(serverType)) {\n                topologyType = updateRsWithPrimaryFromMember(serverDescriptions, serverDescription, setName);\n            }\n            else {\n                topologyType = checkHasPrimary(serverDescriptions);\n            }\n        }\n        return new TopologyDescription(topologyType, serverDescriptions, setName, maxSetVersion, maxElectionId, commonWireVersion, { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS });\n    }\n    get error() {\n        const descriptionsWithError = Array.from(this.servers.values()).filter((sd) => sd.error);\n        if (descriptionsWithError.length > 0) {\n            return descriptionsWithError[0].error;\n        }\n        return null;\n    }\n    /**\n     * Determines if the topology description has any known servers\n     */\n    get hasKnownServers() {\n        return Array.from(this.servers.values()).some((sd) => sd.type !== common_1.ServerType.Unknown);\n    }\n    /**\n     * Determines if this topology description has a data-bearing server available.\n     */\n    get hasDataBearingServers() {\n        return Array.from(this.servers.values()).some((sd) => sd.isDataBearing);\n    }\n    /**\n     * Determines if the topology has a definition for the provided address\n     * @internal\n     */\n    hasServer(address) {\n        return this.servers.has(address);\n    }\n}\nexports.TopologyDescription = TopologyDescription;\nfunction topologyTypeForServerType(serverType) {\n    switch (serverType) {\n        case common_1.ServerType.Standalone:\n            return common_1.TopologyType.Single;\n        case common_1.ServerType.Mongos:\n            return common_1.TopologyType.Sharded;\n        case common_1.ServerType.RSPrimary:\n            return common_1.TopologyType.ReplicaSetWithPrimary;\n        case common_1.ServerType.RSOther:\n        case common_1.ServerType.RSSecondary:\n            return common_1.TopologyType.ReplicaSetNoPrimary;\n        default:\n            return common_1.TopologyType.Unknown;\n    }\n}\nfunction updateRsFromPrimary(serverDescriptions, serverDescription, setName = null, maxSetVersion = null, maxElectionId = null) {\n    setName = setName || serverDescription.setName;\n    if (setName !== serverDescription.setName) {\n        serverDescriptions.delete(serverDescription.address);\n        return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n    }\n    if (serverDescription.maxWireVersion >= 17) {\n        const electionIdComparison = (0, utils_1.compareObjectId)(maxElectionId, serverDescription.electionId);\n        const maxElectionIdIsEqual = electionIdComparison === 0;\n        const maxElectionIdIsLess = electionIdComparison === -1;\n        const maxSetVersionIsLessOrEqual = (maxSetVersion ?? -1) <= (serverDescription.setVersion ?? -1);\n        if (maxElectionIdIsLess || (maxElectionIdIsEqual && maxSetVersionIsLessOrEqual)) {\n            // The reported electionId was greater\n            // or the electionId was equal and reported setVersion was greater\n            // Always update both values, they are a tuple\n            maxElectionId = serverDescription.electionId;\n            maxSetVersion = serverDescription.setVersion;\n        }\n        else {\n            // Stale primary\n            // replace serverDescription with a default ServerDescription of type \"Unknown\"\n            serverDescriptions.set(serverDescription.address, new server_description_1.ServerDescription(serverDescription.address));\n            return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n        }\n    }\n    else {\n        const electionId = serverDescription.electionId ? serverDescription.electionId : null;\n        if (serverDescription.setVersion && electionId) {\n            if (maxSetVersion && maxElectionId) {\n                if (maxSetVersion > serverDescription.setVersion ||\n                    (0, utils_1.compareObjectId)(maxElectionId, electionId) > 0) {\n                    // this primary is stale, we must remove it\n                    serverDescriptions.set(serverDescription.address, new server_description_1.ServerDescription(serverDescription.address));\n                    return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n                }\n            }\n            maxElectionId = serverDescription.electionId;\n        }\n        if (serverDescription.setVersion != null &&\n            (maxSetVersion == null || serverDescription.setVersion > maxSetVersion)) {\n            maxSetVersion = serverDescription.setVersion;\n        }\n    }\n    // We've heard from the primary. Is it the same primary as before?\n    for (const [address, server] of serverDescriptions) {\n        if (server.type === common_1.ServerType.RSPrimary && server.address !== serverDescription.address) {\n            // Reset old primary's type to Unknown.\n            serverDescriptions.set(address, new server_description_1.ServerDescription(server.address));\n            // There can only be one primary\n            break;\n        }\n    }\n    // Discover new hosts from this primary's response.\n    serverDescription.allHosts.forEach((address) => {\n        if (!serverDescriptions.has(address)) {\n            serverDescriptions.set(address, new server_description_1.ServerDescription(address));\n        }\n    });\n    // Remove hosts not in the response.\n    const currentAddresses = Array.from(serverDescriptions.keys());\n    const responseAddresses = serverDescription.allHosts;\n    currentAddresses\n        .filter((addr) => responseAddresses.indexOf(addr) === -1)\n        .forEach((address) => {\n        serverDescriptions.delete(address);\n    });\n    return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n}\nfunction updateRsWithPrimaryFromMember(serverDescriptions, serverDescription, setName = null) {\n    if (setName == null) {\n        // TODO(NODE-3483): should be an appropriate runtime error\n        throw new error_1.MongoRuntimeError('Argument \"setName\" is required if connected to a replica set');\n    }\n    if (setName !== serverDescription.setName ||\n        (serverDescription.me && serverDescription.address !== serverDescription.me)) {\n        serverDescriptions.delete(serverDescription.address);\n    }\n    return checkHasPrimary(serverDescriptions);\n}\nfunction updateRsNoPrimaryFromMember(serverDescriptions, serverDescription, setName = null) {\n    const topologyType = common_1.TopologyType.ReplicaSetNoPrimary;\n    setName = setName ?? serverDescription.setName;\n    if (setName !== serverDescription.setName) {\n        serverDescriptions.delete(serverDescription.address);\n        return [topologyType, setName];\n    }\n    serverDescription.allHosts.forEach((address) => {\n        if (!serverDescriptions.has(address)) {\n            serverDescriptions.set(address, new server_description_1.ServerDescription(address));\n        }\n    });\n    if (serverDescription.me && serverDescription.address !== serverDescription.me) {\n        serverDescriptions.delete(serverDescription.address);\n    }\n    return [topologyType, setName];\n}\nfunction checkHasPrimary(serverDescriptions) {\n    for (const serverDescription of serverDescriptions.values()) {\n        if (serverDescription.type === common_1.ServerType.RSPrimary) {\n            return common_1.TopologyType.ReplicaSetWithPrimary;\n        }\n    }\n    return common_1.TopologyType.ReplicaSetNoPrimary;\n}\n//# sourceMappingURL=topology_description.js.map","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSessionFromResponse = exports.applySession = exports.ServerSessionPool = exports.ServerSession = exports.maybeClearPinnedConnection = exports.ClientSession = void 0;\nconst buffer_1 = require(\"buffer\");\nconst util_1 = require(\"util\");\nconst bson_1 = require(\"./bson\");\nconst metrics_1 = require(\"./cmap/metrics\");\nconst shared_1 = require(\"./cmap/wire_protocol/shared\");\nconst constants_1 = require(\"./constants\");\nconst error_1 = require(\"./error\");\nconst mongo_types_1 = require(\"./mongo_types\");\nconst execute_operation_1 = require(\"./operations/execute_operation\");\nconst run_command_1 = require(\"./operations/run_command\");\nconst read_concern_1 = require(\"./read_concern\");\nconst read_preference_1 = require(\"./read_preference\");\nconst common_1 = require(\"./sdam/common\");\nconst transactions_1 = require(\"./transactions\");\nconst utils_1 = require(\"./utils\");\nconst minWireVersionForShardedTransactions = 8;\n/** @internal */\nconst kServerSession = Symbol('serverSession');\n/** @internal */\nconst kSnapshotTime = Symbol('snapshotTime');\n/** @internal */\nconst kSnapshotEnabled = Symbol('snapshotEnabled');\n/** @internal */\nconst kPinnedConnection = Symbol('pinnedConnection');\n/** @internal Accumulates total number of increments to add to txnNumber when applying session to command */\nconst kTxnNumberIncrement = Symbol('txnNumberIncrement');\n/**\n * A class representing a client session on the server\n *\n * NOTE: not meant to be instantiated directly.\n * @public\n */\nclass ClientSession extends mongo_types_1.TypedEventEmitter {\n    /**\n     * Create a client session.\n     * @internal\n     * @param client - The current client\n     * @param sessionPool - The server session pool (Internal Class)\n     * @param options - Optional settings\n     * @param clientOptions - Optional settings provided when creating a MongoClient\n     */\n    constructor(client, sessionPool, options, clientOptions) {\n        super();\n        /** @internal */\n        this[_a] = false;\n        if (client == null) {\n            // TODO(NODE-3483)\n            throw new error_1.MongoRuntimeError('ClientSession requires a MongoClient');\n        }\n        if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n            // TODO(NODE-3483)\n            throw new error_1.MongoRuntimeError('ClientSession requires a ServerSessionPool');\n        }\n        options = options ?? {};\n        if (options.snapshot === true) {\n            this[kSnapshotEnabled] = true;\n            if (options.causalConsistency === true) {\n                throw new error_1.MongoInvalidArgumentError('Properties \"causalConsistency\" and \"snapshot\" are mutually exclusive');\n            }\n        }\n        this.client = client;\n        this.sessionPool = sessionPool;\n        this.hasEnded = false;\n        this.clientOptions = clientOptions;\n        this.explicit = !!options.explicit;\n        this[kServerSession] = this.explicit ? this.sessionPool.acquire() : null;\n        this[kTxnNumberIncrement] = 0;\n        const defaultCausalConsistencyValue = this.explicit && options.snapshot !== true;\n        this.supports = {\n            // if we can enable causal consistency, do so by default\n            causalConsistency: options.causalConsistency ?? defaultCausalConsistencyValue\n        };\n        this.clusterTime = options.initialClusterTime;\n        this.operationTime = undefined;\n        this.owner = options.owner;\n        this.defaultTransactionOptions = Object.assign({}, options.defaultTransactionOptions);\n        this.transaction = new transactions_1.Transaction();\n    }\n    /** The server id associated with this session */\n    get id() {\n        return this[kServerSession]?.id;\n    }\n    get serverSession() {\n        let serverSession = this[kServerSession];\n        if (serverSession == null) {\n            if (this.explicit) {\n                throw new error_1.MongoRuntimeError('Unexpected null serverSession for an explicit session');\n            }\n            if (this.hasEnded) {\n                throw new error_1.MongoRuntimeError('Unexpected null serverSession for an ended implicit session');\n            }\n            serverSession = this.sessionPool.acquire();\n            this[kServerSession] = serverSession;\n        }\n        return serverSession;\n    }\n    /** Whether or not this session is configured for snapshot reads */\n    get snapshotEnabled() {\n        return this[kSnapshotEnabled];\n    }\n    get loadBalanced() {\n        return this.client.topology?.description.type === common_1.TopologyType.LoadBalanced;\n    }\n    /** @internal */\n    get pinnedConnection() {\n        return this[kPinnedConnection];\n    }\n    /** @internal */\n    pin(conn) {\n        if (this[kPinnedConnection]) {\n            throw TypeError('Cannot pin multiple connections to the same session');\n        }\n        this[kPinnedConnection] = conn;\n        conn.emit(constants_1.PINNED, this.inTransaction() ? metrics_1.ConnectionPoolMetrics.TXN : metrics_1.ConnectionPoolMetrics.CURSOR);\n    }\n    /** @internal */\n    unpin(options) {\n        if (this.loadBalanced) {\n            return maybeClearPinnedConnection(this, options);\n        }\n        this.transaction.unpinServer();\n    }\n    get isPinned() {\n        return this.loadBalanced ? !!this[kPinnedConnection] : this.transaction.isPinned;\n    }\n    /**\n     * Ends this session on the server\n     *\n     * @param options - Optional settings. Currently reserved for future use\n     */\n    async endSession(options) {\n        try {\n            if (this.inTransaction()) {\n                await this.abortTransaction();\n            }\n            if (!this.hasEnded) {\n                const serverSession = this[kServerSession];\n                if (serverSession != null) {\n                    // release the server session back to the pool\n                    this.sessionPool.release(serverSession);\n                    // Make sure a new serverSession never makes it onto this ClientSession\n                    Object.defineProperty(this, kServerSession, {\n                        value: ServerSession.clone(serverSession),\n                        writable: false\n                    });\n                }\n                // mark the session as ended, and emit a signal\n                this.hasEnded = true;\n                this.emit('ended', this);\n            }\n        }\n        catch {\n            // spec indicates that we should ignore all errors for `endSessions`\n        }\n        finally {\n            maybeClearPinnedConnection(this, { force: true, ...options });\n        }\n    }\n    /**\n     * Advances the operationTime for a ClientSession.\n     *\n     * @param operationTime - the `BSON.Timestamp` of the operation type it is desired to advance to\n     */\n    advanceOperationTime(operationTime) {\n        if (this.operationTime == null) {\n            this.operationTime = operationTime;\n            return;\n        }\n        if (operationTime.greaterThan(this.operationTime)) {\n            this.operationTime = operationTime;\n        }\n    }\n    /**\n     * Advances the clusterTime for a ClientSession to the provided clusterTime of another ClientSession\n     *\n     * @param clusterTime - the $clusterTime returned by the server from another session in the form of a document containing the `BSON.Timestamp` clusterTime and signature\n     */\n    advanceClusterTime(clusterTime) {\n        if (!clusterTime || typeof clusterTime !== 'object') {\n            throw new error_1.MongoInvalidArgumentError('input cluster time must be an object');\n        }\n        if (!clusterTime.clusterTime || clusterTime.clusterTime._bsontype !== 'Timestamp') {\n            throw new error_1.MongoInvalidArgumentError('input cluster time \"clusterTime\" property must be a valid BSON Timestamp');\n        }\n        if (!clusterTime.signature ||\n            clusterTime.signature.hash?._bsontype !== 'Binary' ||\n            (typeof clusterTime.signature.keyId !== 'bigint' &&\n                typeof clusterTime.signature.keyId !== 'number' &&\n                clusterTime.signature.keyId?._bsontype !== 'Long') // apparently we decode the key to number?\n        ) {\n            throw new error_1.MongoInvalidArgumentError('input cluster time must have a valid \"signature\" property with BSON Binary hash and BSON Long keyId');\n        }\n        (0, common_1._advanceClusterTime)(this, clusterTime);\n    }\n    /**\n     * Used to determine if this session equals another\n     *\n     * @param session - The session to compare to\n     */\n    equals(session) {\n        if (!(session instanceof ClientSession)) {\n            return false;\n        }\n        if (this.id == null || session.id == null) {\n            return false;\n        }\n        return utils_1.ByteUtils.equals(this.id.id.buffer, session.id.id.buffer);\n    }\n    /**\n     * Increment the transaction number on the internal ServerSession\n     *\n     * @privateRemarks\n     * This helper increments a value stored on the client session that will be\n     * added to the serverSession's txnNumber upon applying it to a command.\n     * This is because the serverSession is lazily acquired after a connection is obtained\n     */\n    incrementTransactionNumber() {\n        this[kTxnNumberIncrement] += 1;\n    }\n    /** @returns whether this session is currently in a transaction or not */\n    inTransaction() {\n        return this.transaction.isActive;\n    }\n    /**\n     * Starts a new transaction with the given options.\n     *\n     * @param options - Options for the transaction\n     */\n    startTransaction(options) {\n        if (this[kSnapshotEnabled]) {\n            throw new error_1.MongoCompatibilityError('Transactions are not supported in snapshot sessions');\n        }\n        if (this.inTransaction()) {\n            throw new error_1.MongoTransactionError('Transaction already in progress');\n        }\n        if (this.isPinned && this.transaction.isCommitted) {\n            this.unpin();\n        }\n        const topologyMaxWireVersion = (0, utils_1.maxWireVersion)(this.client.topology);\n        if ((0, shared_1.isSharded)(this.client.topology) &&\n            topologyMaxWireVersion != null &&\n            topologyMaxWireVersion < minWireVersionForShardedTransactions) {\n            throw new error_1.MongoCompatibilityError('Transactions are not supported on sharded clusters in MongoDB < 4.2.');\n        }\n        // increment txnNumber\n        this.incrementTransactionNumber();\n        // create transaction state\n        this.transaction = new transactions_1.Transaction({\n            readConcern: options?.readConcern ??\n                this.defaultTransactionOptions.readConcern ??\n                this.clientOptions?.readConcern,\n            writeConcern: options?.writeConcern ??\n                this.defaultTransactionOptions.writeConcern ??\n                this.clientOptions?.writeConcern,\n            readPreference: options?.readPreference ??\n                this.defaultTransactionOptions.readPreference ??\n                this.clientOptions?.readPreference,\n            maxCommitTimeMS: options?.maxCommitTimeMS ?? this.defaultTransactionOptions.maxCommitTimeMS\n        });\n        this.transaction.transition(transactions_1.TxnState.STARTING_TRANSACTION);\n    }\n    /**\n     * Commits the currently active transaction in this session.\n     */\n    async commitTransaction() {\n        return endTransactionAsync(this, 'commitTransaction');\n    }\n    /**\n     * Aborts the currently active transaction in this session.\n     */\n    async abortTransaction() {\n        return endTransactionAsync(this, 'abortTransaction');\n    }\n    /**\n     * This is here to ensure that ClientSession is never serialized to BSON.\n     */\n    toBSON() {\n        throw new error_1.MongoRuntimeError('ClientSession cannot be serialized to BSON.');\n    }\n    /**\n     * Runs a provided callback within a transaction, retrying either the commitTransaction operation\n     * or entire transaction as needed (and when the error permits) to better ensure that\n     * the transaction can complete successfully.\n     *\n     * **IMPORTANT:** This method requires the user to return a Promise, and `await` all operations.\n     * Any callbacks that do not return a Promise will result in undefined behavior.\n     *\n     * @remarks\n     * This function:\n     * - Will return the command response from the final commitTransaction if every operation is successful (can be used as a truthy object)\n     * - Will return `undefined` if the transaction is explicitly aborted with `await session.abortTransaction()`\n     * - Will throw if one of the operations throws or `throw` statement is used inside the `withTransaction` callback\n     *\n     * Checkout a descriptive example here:\n     * @see https://www.mongodb.com/developer/quickstart/node-transactions/\n     *\n     * @param fn - callback to run within a transaction\n     * @param options - optional settings for the transaction\n     * @returns A raw command response or undefined\n     */\n    async withTransaction(fn, options) {\n        const startTime = (0, utils_1.now)();\n        return attemptTransaction(this, startTime, fn, options);\n    }\n}\nexports.ClientSession = ClientSession;\n_a = kSnapshotEnabled;\nconst MAX_WITH_TRANSACTION_TIMEOUT = 120000;\nconst NON_DETERMINISTIC_WRITE_CONCERN_ERRORS = new Set([\n    'CannotSatisfyWriteConcern',\n    'UnknownReplWriteConcern',\n    'UnsatisfiableWriteConcern'\n]);\nfunction hasNotTimedOut(startTime, max) {\n    return (0, utils_1.calculateDurationInMs)(startTime) < max;\n}\nfunction isUnknownTransactionCommitResult(err) {\n    const isNonDeterministicWriteConcernError = err instanceof error_1.MongoServerError &&\n        err.codeName &&\n        NON_DETERMINISTIC_WRITE_CONCERN_ERRORS.has(err.codeName);\n    return (isMaxTimeMSExpiredError(err) ||\n        (!isNonDeterministicWriteConcernError &&\n            err.code !== error_1.MONGODB_ERROR_CODES.UnsatisfiableWriteConcern &&\n            err.code !== error_1.MONGODB_ERROR_CODES.UnknownReplWriteConcern));\n}\nfunction maybeClearPinnedConnection(session, options) {\n    // unpin a connection if it has been pinned\n    const conn = session[kPinnedConnection];\n    const error = options?.error;\n    if (session.inTransaction() &&\n        error &&\n        error instanceof error_1.MongoError &&\n        error.hasErrorLabel(error_1.MongoErrorLabel.TransientTransactionError)) {\n        return;\n    }\n    const topology = session.client.topology;\n    // NOTE: the spec talks about what to do on a network error only, but the tests seem to\n    //       to validate that we don't unpin on _all_ errors?\n    if (conn && topology != null) {\n        const servers = Array.from(topology.s.servers.values());\n        const loadBalancer = servers[0];\n        if (options?.error == null || options?.force) {\n            loadBalancer.s.pool.checkIn(conn);\n            conn.emit(constants_1.UNPINNED, session.transaction.state !== transactions_1.TxnState.NO_TRANSACTION\n                ? metrics_1.ConnectionPoolMetrics.TXN\n                : metrics_1.ConnectionPoolMetrics.CURSOR);\n            if (options?.forceClear) {\n                loadBalancer.s.pool.clear({ serviceId: conn.serviceId });\n            }\n        }\n        session[kPinnedConnection] = undefined;\n    }\n}\nexports.maybeClearPinnedConnection = maybeClearPinnedConnection;\nfunction isMaxTimeMSExpiredError(err) {\n    if (err == null || !(err instanceof error_1.MongoServerError)) {\n        return false;\n    }\n    return (err.code === error_1.MONGODB_ERROR_CODES.MaxTimeMSExpired ||\n        (err.writeConcernError && err.writeConcernError.code === error_1.MONGODB_ERROR_CODES.MaxTimeMSExpired));\n}\nfunction attemptTransactionCommit(session, startTime, fn, options) {\n    return session.commitTransaction().catch((err) => {\n        if (err instanceof error_1.MongoError &&\n            hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT) &&\n            !isMaxTimeMSExpiredError(err)) {\n            if (err.hasErrorLabel(error_1.MongoErrorLabel.UnknownTransactionCommitResult)) {\n                return attemptTransactionCommit(session, startTime, fn, options);\n            }\n            if (err.hasErrorLabel(error_1.MongoErrorLabel.TransientTransactionError)) {\n                return attemptTransaction(session, startTime, fn, options);\n            }\n        }\n        throw err;\n    });\n}\nconst USER_EXPLICIT_TXN_END_STATES = new Set([\n    transactions_1.TxnState.NO_TRANSACTION,\n    transactions_1.TxnState.TRANSACTION_COMMITTED,\n    transactions_1.TxnState.TRANSACTION_ABORTED\n]);\nfunction userExplicitlyEndedTransaction(session) {\n    return USER_EXPLICIT_TXN_END_STATES.has(session.transaction.state);\n}\nfunction attemptTransaction(session, startTime, fn, options) {\n    session.startTransaction(options);\n    let promise;\n    try {\n        promise = fn(session);\n    }\n    catch (err) {\n        promise = Promise.reject(err);\n    }\n    if (!(0, utils_1.isPromiseLike)(promise)) {\n        session.abortTransaction().catch(() => null);\n        throw new error_1.MongoInvalidArgumentError('Function provided to `withTransaction` must return a Promise');\n    }\n    return promise.then(() => {\n        if (userExplicitlyEndedTransaction(session)) {\n            return;\n        }\n        return attemptTransactionCommit(session, startTime, fn, options);\n    }, err => {\n        function maybeRetryOrThrow(err) {\n            if (err instanceof error_1.MongoError &&\n                err.hasErrorLabel(error_1.MongoErrorLabel.TransientTransactionError) &&\n                hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT)) {\n                return attemptTransaction(session, startTime, fn, options);\n            }\n            if (isMaxTimeMSExpiredError(err)) {\n                err.addErrorLabel(error_1.MongoErrorLabel.UnknownTransactionCommitResult);\n            }\n            throw err;\n        }\n        if (session.inTransaction()) {\n            return session.abortTransaction().then(() => maybeRetryOrThrow(err));\n        }\n        return maybeRetryOrThrow(err);\n    });\n}\nconst endTransactionAsync = (0, util_1.promisify)(endTransaction);\nfunction endTransaction(session, commandName, callback) {\n    // handle any initial problematic cases\n    const txnState = session.transaction.state;\n    if (txnState === transactions_1.TxnState.NO_TRANSACTION) {\n        callback(new error_1.MongoTransactionError('No transaction started'));\n        return;\n    }\n    if (commandName === 'commitTransaction') {\n        if (txnState === transactions_1.TxnState.STARTING_TRANSACTION ||\n            txnState === transactions_1.TxnState.TRANSACTION_COMMITTED_EMPTY) {\n            // the transaction was never started, we can safely exit here\n            session.transaction.transition(transactions_1.TxnState.TRANSACTION_COMMITTED_EMPTY);\n            callback();\n            return;\n        }\n        if (txnState === transactions_1.TxnState.TRANSACTION_ABORTED) {\n            callback(new error_1.MongoTransactionError('Cannot call commitTransaction after calling abortTransaction'));\n            return;\n        }\n    }\n    else {\n        if (txnState === transactions_1.TxnState.STARTING_TRANSACTION) {\n            // the transaction was never started, we can safely exit here\n            session.transaction.transition(transactions_1.TxnState.TRANSACTION_ABORTED);\n            callback();\n            return;\n        }\n        if (txnState === transactions_1.TxnState.TRANSACTION_ABORTED) {\n            callback(new error_1.MongoTransactionError('Cannot call abortTransaction twice'));\n            return;\n        }\n        if (txnState === transactions_1.TxnState.TRANSACTION_COMMITTED ||\n            txnState === transactions_1.TxnState.TRANSACTION_COMMITTED_EMPTY) {\n            callback(new error_1.MongoTransactionError('Cannot call abortTransaction after calling commitTransaction'));\n            return;\n        }\n    }\n    // construct and send the command\n    const command = { [commandName]: 1 };\n    // apply a writeConcern if specified\n    let writeConcern;\n    if (session.transaction.options.writeConcern) {\n        writeConcern = Object.assign({}, session.transaction.options.writeConcern);\n    }\n    else if (session.clientOptions && session.clientOptions.writeConcern) {\n        writeConcern = { w: session.clientOptions.writeConcern.w };\n    }\n    if (txnState === transactions_1.TxnState.TRANSACTION_COMMITTED) {\n        writeConcern = Object.assign({ wtimeout: 10000 }, writeConcern, { w: 'majority' });\n    }\n    if (writeConcern) {\n        Object.assign(command, { writeConcern });\n    }\n    if (commandName === 'commitTransaction' && session.transaction.options.maxTimeMS) {\n        Object.assign(command, { maxTimeMS: session.transaction.options.maxTimeMS });\n    }\n    function commandHandler(error, result) {\n        if (commandName !== 'commitTransaction') {\n            session.transaction.transition(transactions_1.TxnState.TRANSACTION_ABORTED);\n            if (session.loadBalanced) {\n                maybeClearPinnedConnection(session, { force: false });\n            }\n            // The spec indicates that we should ignore all errors on `abortTransaction`\n            return callback();\n        }\n        session.transaction.transition(transactions_1.TxnState.TRANSACTION_COMMITTED);\n        if (error instanceof error_1.MongoError) {\n            if (error.hasErrorLabel(error_1.MongoErrorLabel.RetryableWriteError) ||\n                error instanceof error_1.MongoWriteConcernError ||\n                isMaxTimeMSExpiredError(error)) {\n                if (isUnknownTransactionCommitResult(error)) {\n                    error.addErrorLabel(error_1.MongoErrorLabel.UnknownTransactionCommitResult);\n                    // per txns spec, must unpin session in this case\n                    session.unpin({ error });\n                }\n            }\n            else if (error.hasErrorLabel(error_1.MongoErrorLabel.TransientTransactionError)) {\n                session.unpin({ error });\n            }\n        }\n        callback(error, result);\n    }\n    if (session.transaction.recoveryToken) {\n        command.recoveryToken = session.transaction.recoveryToken;\n    }\n    // send the command\n    (0, execute_operation_1.executeOperation)(session.client, new run_command_1.RunAdminCommandOperation(undefined, command, {\n        session,\n        readPreference: read_preference_1.ReadPreference.primary,\n        bypassPinningCheck: true\n    }), (error, result) => {\n        if (command.abortTransaction) {\n            // always unpin on abort regardless of command outcome\n            session.unpin();\n        }\n        if (error instanceof error_1.MongoError && error.hasErrorLabel(error_1.MongoErrorLabel.RetryableWriteError)) {\n            // SPEC-1185: apply majority write concern when retrying commitTransaction\n            if (command.commitTransaction) {\n                // per txns spec, must unpin session in this case\n                session.unpin({ force: true });\n                command.writeConcern = Object.assign({ wtimeout: 10000 }, command.writeConcern, {\n                    w: 'majority'\n                });\n            }\n            return (0, execute_operation_1.executeOperation)(session.client, new run_command_1.RunAdminCommandOperation(undefined, command, {\n                session,\n                readPreference: read_preference_1.ReadPreference.primary,\n                bypassPinningCheck: true\n            }), commandHandler);\n        }\n        commandHandler(error, result);\n    });\n}\n/**\n * Reflects the existence of a session on the server. Can be reused by the session pool.\n * WARNING: not meant to be instantiated directly. For internal use only.\n * @public\n */\nclass ServerSession {\n    /** @internal */\n    constructor() {\n        this.id = { id: new bson_1.Binary((0, utils_1.uuidV4)(), bson_1.Binary.SUBTYPE_UUID) };\n        this.lastUse = (0, utils_1.now)();\n        this.txnNumber = 0;\n        this.isDirty = false;\n    }\n    /**\n     * Determines if the server session has timed out.\n     *\n     * @param sessionTimeoutMinutes - The server's \"logicalSessionTimeoutMinutes\"\n     */\n    hasTimedOut(sessionTimeoutMinutes) {\n        // Take the difference of the lastUse timestamp and now, which will result in a value in\n        // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n        const idleTimeMinutes = Math.round((((0, utils_1.calculateDurationInMs)(this.lastUse) % 86400000) % 3600000) / 60000);\n        return idleTimeMinutes > sessionTimeoutMinutes - 1;\n    }\n    /**\n     * @internal\n     * Cloning meant to keep a readable reference to the server session data\n     * after ClientSession has ended\n     */\n    static clone(serverSession) {\n        const arrayBuffer = new ArrayBuffer(16);\n        const idBytes = buffer_1.Buffer.from(arrayBuffer);\n        idBytes.set(serverSession.id.id.buffer);\n        const id = new bson_1.Binary(idBytes, serverSession.id.id.sub_type);\n        // Manual prototype construction to avoid modifying the constructor of this class\n        return Object.setPrototypeOf({\n            id: { id },\n            lastUse: serverSession.lastUse,\n            txnNumber: serverSession.txnNumber,\n            isDirty: serverSession.isDirty\n        }, ServerSession.prototype);\n    }\n}\nexports.ServerSession = ServerSession;\n/**\n * Maintains a pool of Server Sessions.\n * For internal use only\n * @internal\n */\nclass ServerSessionPool {\n    constructor(client) {\n        if (client == null) {\n            throw new error_1.MongoRuntimeError('ServerSessionPool requires a MongoClient');\n        }\n        this.client = client;\n        this.sessions = new utils_1.List();\n    }\n    /**\n     * Acquire a Server Session from the pool.\n     * Iterates through each session in the pool, removing any stale sessions\n     * along the way. The first non-stale session found is removed from the\n     * pool and returned. If no non-stale session is found, a new ServerSession is created.\n     */\n    acquire() {\n        const sessionTimeoutMinutes = this.client.topology?.logicalSessionTimeoutMinutes ?? 10;\n        let session = null;\n        // Try to obtain from session pool\n        while (this.sessions.length > 0) {\n            const potentialSession = this.sessions.shift();\n            if (potentialSession != null &&\n                (!!this.client.topology?.loadBalanced ||\n                    !potentialSession.hasTimedOut(sessionTimeoutMinutes))) {\n                session = potentialSession;\n                break;\n            }\n        }\n        // If nothing valid came from the pool make a new one\n        if (session == null) {\n            session = new ServerSession();\n        }\n        return session;\n    }\n    /**\n     * Release a session to the session pool\n     * Adds the session back to the session pool if the session has not timed out yet.\n     * This method also removes any stale sessions from the pool.\n     *\n     * @param session - The session to release to the pool\n     */\n    release(session) {\n        const sessionTimeoutMinutes = this.client.topology?.logicalSessionTimeoutMinutes ?? 10;\n        if (this.client.topology?.loadBalanced && !sessionTimeoutMinutes) {\n            this.sessions.unshift(session);\n        }\n        if (!sessionTimeoutMinutes) {\n            return;\n        }\n        this.sessions.prune(session => session.hasTimedOut(sessionTimeoutMinutes));\n        if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n            if (session.isDirty) {\n                return;\n            }\n            // otherwise, readd this session to the session pool\n            this.sessions.unshift(session);\n        }\n    }\n}\nexports.ServerSessionPool = ServerSessionPool;\n/**\n * Optionally decorate a command with sessions specific keys\n *\n * @param session - the session tracking transaction state\n * @param command - the command to decorate\n * @param options - Optional settings passed to calling operation\n *\n * @internal\n */\nfunction applySession(session, command, options) {\n    if (session.hasEnded) {\n        return new error_1.MongoExpiredSessionError();\n    }\n    // May acquire serverSession here\n    const serverSession = session.serverSession;\n    if (serverSession == null) {\n        return new error_1.MongoRuntimeError('Unable to acquire server session');\n    }\n    if (options.writeConcern?.w === 0) {\n        if (session && session.explicit) {\n            // Error if user provided an explicit session to an unacknowledged write (SPEC-1019)\n            return new error_1.MongoAPIError('Cannot have explicit session with unacknowledged writes');\n        }\n        return;\n    }\n    // mark the last use of this session, and apply the `lsid`\n    serverSession.lastUse = (0, utils_1.now)();\n    command.lsid = serverSession.id;\n    const inTxnOrTxnCommand = session.inTransaction() || (0, transactions_1.isTransactionCommand)(command);\n    const isRetryableWrite = !!options.willRetryWrite;\n    if (isRetryableWrite || inTxnOrTxnCommand) {\n        serverSession.txnNumber += session[kTxnNumberIncrement];\n        session[kTxnNumberIncrement] = 0;\n        // TODO(NODE-2674): Preserve int64 sent from MongoDB\n        command.txnNumber = bson_1.Long.fromNumber(serverSession.txnNumber);\n    }\n    if (!inTxnOrTxnCommand) {\n        if (session.transaction.state !== transactions_1.TxnState.NO_TRANSACTION) {\n            session.transaction.transition(transactions_1.TxnState.NO_TRANSACTION);\n        }\n        if (session.supports.causalConsistency &&\n            session.operationTime &&\n            (0, utils_1.commandSupportsReadConcern)(command, options)) {\n            command.readConcern = command.readConcern || {};\n            Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n        }\n        else if (session[kSnapshotEnabled]) {\n            command.readConcern = command.readConcern || { level: read_concern_1.ReadConcernLevel.snapshot };\n            if (session[kSnapshotTime] != null) {\n                Object.assign(command.readConcern, { atClusterTime: session[kSnapshotTime] });\n            }\n        }\n        return;\n    }\n    // now attempt to apply transaction-specific sessions data\n    // `autocommit` must always be false to differentiate from retryable writes\n    command.autocommit = false;\n    if (session.transaction.state === transactions_1.TxnState.STARTING_TRANSACTION) {\n        session.transaction.transition(transactions_1.TxnState.TRANSACTION_IN_PROGRESS);\n        command.startTransaction = true;\n        const readConcern = session.transaction.options.readConcern || session?.clientOptions?.readConcern;\n        if (readConcern) {\n            command.readConcern = readConcern;\n        }\n        if (session.supports.causalConsistency && session.operationTime) {\n            command.readConcern = command.readConcern || {};\n            Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n        }\n    }\n    return;\n}\nexports.applySession = applySession;\nfunction updateSessionFromResponse(session, document) {\n    if (document.$clusterTime) {\n        (0, common_1._advanceClusterTime)(session, document.$clusterTime);\n    }\n    if (document.operationTime && session && session.supports.causalConsistency) {\n        session.advanceOperationTime(document.operationTime);\n    }\n    if (document.recoveryToken && session && session.inTransaction()) {\n        session.transaction._recoveryToken = document.recoveryToken;\n    }\n    if (session?.[kSnapshotEnabled] && session[kSnapshotTime] == null) {\n        // find and aggregate commands return atClusterTime on the cursor\n        // distinct includes it in the response body\n        const atClusterTime = document.cursor?.atClusterTime || document.atClusterTime;\n        if (atClusterTime) {\n            session[kSnapshotTime] = atClusterTime;\n        }\n    }\n}\nexports.updateSessionFromResponse = updateSessionFromResponse;\n//# sourceMappingURL=sessions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatSort = void 0;\nconst error_1 = require(\"./error\");\n/** @internal */\nfunction prepareDirection(direction = 1) {\n    const value = `${direction}`.toLowerCase();\n    if (isMeta(direction))\n        return direction;\n    switch (value) {\n        case 'ascending':\n        case 'asc':\n        case '1':\n            return 1;\n        case 'descending':\n        case 'desc':\n        case '-1':\n            return -1;\n        default:\n            throw new error_1.MongoInvalidArgumentError(`Invalid sort direction: ${JSON.stringify(direction)}`);\n    }\n}\n/** @internal */\nfunction isMeta(t) {\n    return typeof t === 'object' && t != null && '$meta' in t && typeof t.$meta === 'string';\n}\n/** @internal */\nfunction isPair(t) {\n    if (Array.isArray(t) && t.length === 2) {\n        try {\n            prepareDirection(t[1]);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    return false;\n}\nfunction isDeep(t) {\n    return Array.isArray(t) && Array.isArray(t[0]);\n}\nfunction isMap(t) {\n    return t instanceof Map && t.size > 0;\n}\n/** @internal */\nfunction pairToMap(v) {\n    return new Map([[`${v[0]}`, prepareDirection([v[1]])]]);\n}\n/** @internal */\nfunction deepToMap(t) {\n    const sortEntries = t.map(([k, v]) => [`${k}`, prepareDirection(v)]);\n    return new Map(sortEntries);\n}\n/** @internal */\nfunction stringsToMap(t) {\n    const sortEntries = t.map(key => [`${key}`, 1]);\n    return new Map(sortEntries);\n}\n/** @internal */\nfunction objectToMap(t) {\n    const sortEntries = Object.entries(t).map(([k, v]) => [\n        `${k}`,\n        prepareDirection(v)\n    ]);\n    return new Map(sortEntries);\n}\n/** @internal */\nfunction mapToMap(t) {\n    const sortEntries = Array.from(t).map(([k, v]) => [\n        `${k}`,\n        prepareDirection(v)\n    ]);\n    return new Map(sortEntries);\n}\n/** converts a Sort type into a type that is valid for the server (SortForCmd) */\nfunction formatSort(sort, direction) {\n    if (sort == null)\n        return undefined;\n    if (typeof sort === 'string')\n        return new Map([[sort, prepareDirection(direction)]]);\n    if (typeof sort !== 'object') {\n        throw new error_1.MongoInvalidArgumentError(`Invalid sort format: ${JSON.stringify(sort)} Sort must be a valid object`);\n    }\n    if (!Array.isArray(sort)) {\n        return isMap(sort) ? mapToMap(sort) : Object.keys(sort).length ? objectToMap(sort) : undefined;\n    }\n    if (!sort.length)\n        return undefined;\n    if (isDeep(sort))\n        return deepToMap(sort);\n    if (isPair(sort))\n        return pairToMap(sort);\n    return stringsToMap(sort);\n}\nexports.formatSort = formatSort;\n//# sourceMappingURL=sort.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTransactionCommand = exports.Transaction = exports.TxnState = void 0;\nconst error_1 = require(\"./error\");\nconst read_concern_1 = require(\"./read_concern\");\nconst read_preference_1 = require(\"./read_preference\");\nconst write_concern_1 = require(\"./write_concern\");\n/** @internal */\nexports.TxnState = Object.freeze({\n    NO_TRANSACTION: 'NO_TRANSACTION',\n    STARTING_TRANSACTION: 'STARTING_TRANSACTION',\n    TRANSACTION_IN_PROGRESS: 'TRANSACTION_IN_PROGRESS',\n    TRANSACTION_COMMITTED: 'TRANSACTION_COMMITTED',\n    TRANSACTION_COMMITTED_EMPTY: 'TRANSACTION_COMMITTED_EMPTY',\n    TRANSACTION_ABORTED: 'TRANSACTION_ABORTED'\n});\nconst stateMachine = {\n    [exports.TxnState.NO_TRANSACTION]: [exports.TxnState.NO_TRANSACTION, exports.TxnState.STARTING_TRANSACTION],\n    [exports.TxnState.STARTING_TRANSACTION]: [\n        exports.TxnState.TRANSACTION_IN_PROGRESS,\n        exports.TxnState.TRANSACTION_COMMITTED,\n        exports.TxnState.TRANSACTION_COMMITTED_EMPTY,\n        exports.TxnState.TRANSACTION_ABORTED\n    ],\n    [exports.TxnState.TRANSACTION_IN_PROGRESS]: [\n        exports.TxnState.TRANSACTION_IN_PROGRESS,\n        exports.TxnState.TRANSACTION_COMMITTED,\n        exports.TxnState.TRANSACTION_ABORTED\n    ],\n    [exports.TxnState.TRANSACTION_COMMITTED]: [\n        exports.TxnState.TRANSACTION_COMMITTED,\n        exports.TxnState.TRANSACTION_COMMITTED_EMPTY,\n        exports.TxnState.STARTING_TRANSACTION,\n        exports.TxnState.NO_TRANSACTION\n    ],\n    [exports.TxnState.TRANSACTION_ABORTED]: [exports.TxnState.STARTING_TRANSACTION, exports.TxnState.NO_TRANSACTION],\n    [exports.TxnState.TRANSACTION_COMMITTED_EMPTY]: [\n        exports.TxnState.TRANSACTION_COMMITTED_EMPTY,\n        exports.TxnState.NO_TRANSACTION\n    ]\n};\nconst ACTIVE_STATES = new Set([\n    exports.TxnState.STARTING_TRANSACTION,\n    exports.TxnState.TRANSACTION_IN_PROGRESS\n]);\nconst COMMITTED_STATES = new Set([\n    exports.TxnState.TRANSACTION_COMMITTED,\n    exports.TxnState.TRANSACTION_COMMITTED_EMPTY,\n    exports.TxnState.TRANSACTION_ABORTED\n]);\n/**\n * @public\n * A class maintaining state related to a server transaction. Internal Only\n */\nclass Transaction {\n    /** Create a transaction @internal */\n    constructor(options) {\n        options = options ?? {};\n        this.state = exports.TxnState.NO_TRANSACTION;\n        this.options = {};\n        const writeConcern = write_concern_1.WriteConcern.fromOptions(options);\n        if (writeConcern) {\n            if (writeConcern.w === 0) {\n                throw new error_1.MongoTransactionError('Transactions do not support unacknowledged write concern');\n            }\n            this.options.writeConcern = writeConcern;\n        }\n        if (options.readConcern) {\n            this.options.readConcern = read_concern_1.ReadConcern.fromOptions(options);\n        }\n        if (options.readPreference) {\n            this.options.readPreference = read_preference_1.ReadPreference.fromOptions(options);\n        }\n        if (options.maxCommitTimeMS) {\n            this.options.maxTimeMS = options.maxCommitTimeMS;\n        }\n        // TODO: This isn't technically necessary\n        this._pinnedServer = undefined;\n        this._recoveryToken = undefined;\n    }\n    /** @internal */\n    get server() {\n        return this._pinnedServer;\n    }\n    get recoveryToken() {\n        return this._recoveryToken;\n    }\n    get isPinned() {\n        return !!this.server;\n    }\n    /** @returns Whether the transaction has started */\n    get isStarting() {\n        return this.state === exports.TxnState.STARTING_TRANSACTION;\n    }\n    /**\n     * @returns Whether this session is presently in a transaction\n     */\n    get isActive() {\n        return ACTIVE_STATES.has(this.state);\n    }\n    get isCommitted() {\n        return COMMITTED_STATES.has(this.state);\n    }\n    /**\n     * Transition the transaction in the state machine\n     * @internal\n     * @param nextState - The new state to transition to\n     */\n    transition(nextState) {\n        const nextStates = stateMachine[this.state];\n        if (nextStates && nextStates.includes(nextState)) {\n            this.state = nextState;\n            if (this.state === exports.TxnState.NO_TRANSACTION ||\n                this.state === exports.TxnState.STARTING_TRANSACTION ||\n                this.state === exports.TxnState.TRANSACTION_ABORTED) {\n                this.unpinServer();\n            }\n            return;\n        }\n        throw new error_1.MongoRuntimeError(`Attempted illegal state transition from [${this.state}] to [${nextState}]`);\n    }\n    /** @internal */\n    pinServer(server) {\n        if (this.isActive) {\n            this._pinnedServer = server;\n        }\n    }\n    /** @internal */\n    unpinServer() {\n        this._pinnedServer = undefined;\n    }\n}\nexports.Transaction = Transaction;\nfunction isTransactionCommand(command) {\n    return !!(command.commitTransaction || command.abortTransaction);\n}\nexports.isTransactionCommand = isTransactionCommand;\n//# sourceMappingURL=transactions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUnsignedInteger = exports.parseInteger = exports.compareObjectId = exports.getMongoDBClientEncryption = exports.commandSupportsReadConcern = exports.shuffle = exports.supportsRetryableWrites = exports.enumToString = exports.emitWarningOnce = exports.emitWarning = exports.MONGODB_WARNING_CODE = exports.DEFAULT_PK_FACTORY = exports.HostAddress = exports.BufferPool = exports.List = exports.deepCopy = exports.isRecord = exports.setDifference = exports.isHello = exports.isSuperset = exports.resolveOptions = exports.hasAtomicOperators = exports.calculateDurationInMs = exports.now = exports.makeClientMetadata = exports.makeStateMachine = exports.errorStrictEqual = exports.arrayStrictEqual = exports.eachAsyncSeries = exports.eachAsync = exports.maxWireVersion = exports.uuidV4 = exports.databaseNamespace = exports.maybeCallback = exports.makeCounter = exports.MongoDBNamespace = exports.ns = exports.getTopology = exports.decorateWithExplain = exports.decorateWithReadConcern = exports.decorateWithCollation = exports.isPromiseLike = exports.applyWriteConcern = exports.applyRetryableWrites = exports.filterOptions = exports.mergeOptions = exports.isObject = exports.normalizeHintField = exports.checkCollectionName = exports.ByteUtils = void 0;\nconst buffer_1 = require(\"buffer\");\nconst crypto = require(\"crypto\");\nconst os = require(\"os\");\nconst process = require(\"process\");\nconst url_1 = require(\"url\");\nconst bson_1 = require(\"./bson\");\nconst constants_1 = require(\"./cmap/wire_protocol/constants\");\nconst constants_2 = require(\"./constants\");\nconst error_1 = require(\"./error\");\nconst read_concern_1 = require(\"./read_concern\");\nconst read_preference_1 = require(\"./read_preference\");\nconst common_1 = require(\"./sdam/common\");\nconst write_concern_1 = require(\"./write_concern\");\nexports.ByteUtils = {\n    toLocalBufferType(buffer) {\n        return buffer_1.Buffer.isBuffer(buffer)\n            ? buffer\n            : buffer_1.Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    },\n    equals(seqA, seqB) {\n        return exports.ByteUtils.toLocalBufferType(seqA).equals(seqB);\n    },\n    compare(seqA, seqB) {\n        return exports.ByteUtils.toLocalBufferType(seqA).compare(seqB);\n    },\n    toBase64(uint8array) {\n        return exports.ByteUtils.toLocalBufferType(uint8array).toString('base64');\n    }\n};\n/**\n * Throws if collectionName is not a valid mongodb collection namespace.\n * @internal\n */\nfunction checkCollectionName(collectionName) {\n    if ('string' !== typeof collectionName) {\n        throw new error_1.MongoInvalidArgumentError('Collection name must be a String');\n    }\n    if (!collectionName || collectionName.indexOf('..') !== -1) {\n        throw new error_1.MongoInvalidArgumentError('Collection names cannot be empty');\n    }\n    if (collectionName.indexOf('$') !== -1 &&\n        collectionName.match(/((^\\$cmd)|(oplog\\.\\$main))/) == null) {\n        // TODO(NODE-3483): Use MongoNamespace static method\n        throw new error_1.MongoInvalidArgumentError(\"Collection names must not contain '$'\");\n    }\n    if (collectionName.match(/^\\.|\\.$/) != null) {\n        // TODO(NODE-3483): Use MongoNamespace static method\n        throw new error_1.MongoInvalidArgumentError(\"Collection names must not start or end with '.'\");\n    }\n    // Validate that we are not passing 0x00 in the collection name\n    if (collectionName.indexOf('\\x00') !== -1) {\n        // TODO(NODE-3483): Use MongoNamespace static method\n        throw new error_1.MongoInvalidArgumentError('Collection names cannot contain a null character');\n    }\n}\nexports.checkCollectionName = checkCollectionName;\n/**\n * Ensure Hint field is in a shape we expect:\n * - object of index names mapping to 1 or -1\n * - just an index name\n * @internal\n */\nfunction normalizeHintField(hint) {\n    let finalHint = undefined;\n    if (typeof hint === 'string') {\n        finalHint = hint;\n    }\n    else if (Array.isArray(hint)) {\n        finalHint = {};\n        hint.forEach(param => {\n            finalHint[param] = 1;\n        });\n    }\n    else if (hint != null && typeof hint === 'object') {\n        finalHint = {};\n        for (const name in hint) {\n            finalHint[name] = hint[name];\n        }\n    }\n    return finalHint;\n}\nexports.normalizeHintField = normalizeHintField;\nconst TO_STRING = (object) => Object.prototype.toString.call(object);\n/**\n * Checks if arg is an Object:\n * - **NOTE**: the check is based on the `[Symbol.toStringTag]() === 'Object'`\n * @internal\n */\nfunction isObject(arg) {\n    return '[object Object]' === TO_STRING(arg);\n}\nexports.isObject = isObject;\n/** @internal */\nfunction mergeOptions(target, source) {\n    return { ...target, ...source };\n}\nexports.mergeOptions = mergeOptions;\n/** @internal */\nfunction filterOptions(options, names) {\n    const filterOptions = {};\n    for (const name in options) {\n        if (names.includes(name)) {\n            filterOptions[name] = options[name];\n        }\n    }\n    // Filtered options\n    return filterOptions;\n}\nexports.filterOptions = filterOptions;\n/**\n * Applies retryWrites: true to a command if retryWrites is set on the command's database.\n * @internal\n *\n * @param target - The target command to which we will apply retryWrites.\n * @param db - The database from which we can inherit a retryWrites value.\n */\nfunction applyRetryableWrites(target, db) {\n    if (db && db.s.options?.retryWrites) {\n        target.retryWrites = true;\n    }\n    return target;\n}\nexports.applyRetryableWrites = applyRetryableWrites;\n/**\n * Applies a write concern to a command based on well defined inheritance rules, optionally\n * detecting support for the write concern in the first place.\n * @internal\n *\n * @param target - the target command we will be applying the write concern to\n * @param sources - sources where we can inherit default write concerns from\n * @param options - optional settings passed into a command for write concern overrides\n */\nfunction applyWriteConcern(target, sources, options) {\n    options = options ?? {};\n    const db = sources.db;\n    const coll = sources.collection;\n    if (options.session && options.session.inTransaction()) {\n        // writeConcern is not allowed within a multi-statement transaction\n        if (target.writeConcern) {\n            delete target.writeConcern;\n        }\n        return target;\n    }\n    const writeConcern = write_concern_1.WriteConcern.fromOptions(options);\n    if (writeConcern) {\n        return Object.assign(target, { writeConcern });\n    }\n    if (coll && coll.writeConcern) {\n        return Object.assign(target, { writeConcern: Object.assign({}, coll.writeConcern) });\n    }\n    if (db && db.writeConcern) {\n        return Object.assign(target, { writeConcern: Object.assign({}, db.writeConcern) });\n    }\n    return target;\n}\nexports.applyWriteConcern = applyWriteConcern;\n/**\n * Checks if a given value is a Promise\n *\n * @typeParam T - The resolution type of the possible promise\n * @param value - An object that could be a promise\n * @returns true if the provided value is a Promise\n */\nfunction isPromiseLike(value) {\n    return !!value && typeof value.then === 'function';\n}\nexports.isPromiseLike = isPromiseLike;\n/**\n * Applies collation to a given command.\n * @internal\n *\n * @param command - the command on which to apply collation\n * @param target - target of command\n * @param options - options containing collation settings\n */\nfunction decorateWithCollation(command, target, options) {\n    const capabilities = getTopology(target).capabilities;\n    if (options.collation && typeof options.collation === 'object') {\n        if (capabilities && capabilities.commandsTakeCollation) {\n            command.collation = options.collation;\n        }\n        else {\n            throw new error_1.MongoCompatibilityError(`Current topology does not support collation`);\n        }\n    }\n}\nexports.decorateWithCollation = decorateWithCollation;\n/**\n * Applies a read concern to a given command.\n * @internal\n *\n * @param command - the command on which to apply the read concern\n * @param coll - the parent collection of the operation calling this method\n */\nfunction decorateWithReadConcern(command, coll, options) {\n    if (options && options.session && options.session.inTransaction()) {\n        return;\n    }\n    const readConcern = Object.assign({}, command.readConcern || {});\n    if (coll.s.readConcern) {\n        Object.assign(readConcern, coll.s.readConcern);\n    }\n    if (Object.keys(readConcern).length > 0) {\n        Object.assign(command, { readConcern: readConcern });\n    }\n}\nexports.decorateWithReadConcern = decorateWithReadConcern;\n/**\n * Applies an explain to a given command.\n * @internal\n *\n * @param command - the command on which to apply the explain\n * @param options - the options containing the explain verbosity\n */\nfunction decorateWithExplain(command, explain) {\n    if (command.explain) {\n        return command;\n    }\n    return { explain: command, verbosity: explain.verbosity };\n}\nexports.decorateWithExplain = decorateWithExplain;\n/**\n * A helper function to get the topology from a given provider. Throws\n * if the topology cannot be found.\n * @throws MongoNotConnectedError\n * @internal\n */\nfunction getTopology(provider) {\n    // MongoClient or ClientSession or AbstractCursor\n    if ('topology' in provider && provider.topology) {\n        return provider.topology;\n    }\n    else if ('s' in provider && 'client' in provider.s && provider.s.client.topology) {\n        return provider.s.client.topology;\n    }\n    else if ('s' in provider && 'db' in provider.s && provider.s.db.s.client.topology) {\n        return provider.s.db.s.client.topology;\n    }\n    throw new error_1.MongoNotConnectedError('MongoClient must be connected to perform this operation');\n}\nexports.getTopology = getTopology;\n/** @internal */\nfunction ns(ns) {\n    return MongoDBNamespace.fromString(ns);\n}\nexports.ns = ns;\n/** @public */\nclass MongoDBNamespace {\n    /**\n     * Create a namespace object\n     *\n     * @param db - database name\n     * @param collection - collection name\n     */\n    constructor(db, collection) {\n        this.db = db;\n        this.collection = collection === '' ? undefined : collection;\n    }\n    toString() {\n        return this.collection ? `${this.db}.${this.collection}` : this.db;\n    }\n    withCollection(collection) {\n        return new MongoDBNamespace(this.db, collection);\n    }\n    static fromString(namespace) {\n        if (typeof namespace !== 'string' || namespace === '') {\n            // TODO(NODE-3483): Replace with MongoNamespaceError\n            throw new error_1.MongoRuntimeError(`Cannot parse namespace from \"${namespace}\"`);\n        }\n        const [db, ...collectionParts] = namespace.split('.');\n        const collection = collectionParts.join('.');\n        return new MongoDBNamespace(db, collection === '' ? undefined : collection);\n    }\n}\nexports.MongoDBNamespace = MongoDBNamespace;\n/** @internal */\nfunction* makeCounter(seed = 0) {\n    let count = seed;\n    while (true) {\n        const newCount = count;\n        count += 1;\n        yield newCount;\n    }\n}\nexports.makeCounter = makeCounter;\nfunction maybeCallback(promiseFn, callback) {\n    const promise = promiseFn();\n    if (callback == null) {\n        return promise;\n    }\n    promise.then(result => callback(undefined, result), error => callback(error));\n    return;\n}\nexports.maybeCallback = maybeCallback;\n/** @internal */\nfunction databaseNamespace(ns) {\n    return ns.split('.')[0];\n}\nexports.databaseNamespace = databaseNamespace;\n/**\n * Synchronously Generate a UUIDv4\n * @internal\n */\nfunction uuidV4() {\n    const result = crypto.randomBytes(16);\n    result[6] = (result[6] & 0x0f) | 0x40;\n    result[8] = (result[8] & 0x3f) | 0x80;\n    return result;\n}\nexports.uuidV4 = uuidV4;\n/**\n * A helper function for determining `maxWireVersion` between legacy and new topology instances\n * @internal\n */\nfunction maxWireVersion(topologyOrServer) {\n    if (topologyOrServer) {\n        if (topologyOrServer.loadBalanced) {\n            // Since we do not have a monitor, we assume the load balanced server is always\n            // pointed at the latest mongodb version. There is a risk that for on-prem\n            // deployments that don't upgrade immediately that this could alert to the\n            // application that a feature is available that is actually not.\n            return constants_1.MAX_SUPPORTED_WIRE_VERSION;\n        }\n        if (topologyOrServer.hello) {\n            return topologyOrServer.hello.maxWireVersion;\n        }\n        if ('lastHello' in topologyOrServer && typeof topologyOrServer.lastHello === 'function') {\n            const lastHello = topologyOrServer.lastHello();\n            if (lastHello) {\n                return lastHello.maxWireVersion;\n            }\n        }\n        if (topologyOrServer.description &&\n            'maxWireVersion' in topologyOrServer.description &&\n            topologyOrServer.description.maxWireVersion != null) {\n            return topologyOrServer.description.maxWireVersion;\n        }\n    }\n    return 0;\n}\nexports.maxWireVersion = maxWireVersion;\n/**\n * Applies the function `eachFn` to each item in `arr`, in parallel.\n * @internal\n *\n * @param arr - An array of items to asynchronously iterate over\n * @param eachFn - A function to call on each item of the array. The callback signature is `(item, callback)`, where the callback indicates iteration is complete.\n * @param callback - The callback called after every item has been iterated\n */\nfunction eachAsync(arr, eachFn, callback) {\n    arr = arr || [];\n    let idx = 0;\n    let awaiting = 0;\n    for (idx = 0; idx < arr.length; ++idx) {\n        awaiting++;\n        eachFn(arr[idx], eachCallback);\n    }\n    if (awaiting === 0) {\n        callback();\n        return;\n    }\n    function eachCallback(err) {\n        awaiting--;\n        if (err) {\n            callback(err);\n            return;\n        }\n        if (idx === arr.length && awaiting <= 0) {\n            callback();\n        }\n    }\n}\nexports.eachAsync = eachAsync;\n/** @internal */\nfunction eachAsyncSeries(arr, eachFn, callback) {\n    arr = arr || [];\n    let idx = 0;\n    let awaiting = arr.length;\n    if (awaiting === 0) {\n        callback();\n        return;\n    }\n    function eachCallback(err) {\n        idx++;\n        awaiting--;\n        if (err) {\n            callback(err);\n            return;\n        }\n        if (idx === arr.length && awaiting <= 0) {\n            callback();\n            return;\n        }\n        eachFn(arr[idx], eachCallback);\n    }\n    eachFn(arr[idx], eachCallback);\n}\nexports.eachAsyncSeries = eachAsyncSeries;\n/** @internal */\nfunction arrayStrictEqual(arr, arr2) {\n    if (!Array.isArray(arr) || !Array.isArray(arr2)) {\n        return false;\n    }\n    return arr.length === arr2.length && arr.every((elt, idx) => elt === arr2[idx]);\n}\nexports.arrayStrictEqual = arrayStrictEqual;\n/** @internal */\nfunction errorStrictEqual(lhs, rhs) {\n    if (lhs === rhs) {\n        return true;\n    }\n    if (!lhs || !rhs) {\n        return lhs === rhs;\n    }\n    if ((lhs == null && rhs != null) || (lhs != null && rhs == null)) {\n        return false;\n    }\n    if (lhs.constructor.name !== rhs.constructor.name) {\n        return false;\n    }\n    if (lhs.message !== rhs.message) {\n        return false;\n    }\n    return true;\n}\nexports.errorStrictEqual = errorStrictEqual;\n/** @internal */\nfunction makeStateMachine(stateTable) {\n    return function stateTransition(target, newState) {\n        const legalStates = stateTable[target.s.state];\n        if (legalStates && legalStates.indexOf(newState) < 0) {\n            throw new error_1.MongoRuntimeError(`illegal state transition from [${target.s.state}] => [${newState}], allowed: [${legalStates}]`);\n        }\n        target.emit('stateChanged', target.s.state, newState);\n        target.s.state = newState;\n    };\n}\nexports.makeStateMachine = makeStateMachine;\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst NODE_DRIVER_VERSION = require('../package.json').version;\nfunction makeClientMetadata(options) {\n    options = options ?? {};\n    const metadata = {\n        driver: {\n            name: 'nodejs',\n            version: NODE_DRIVER_VERSION\n        },\n        os: {\n            type: os.type(),\n            name: process.platform,\n            architecture: process.arch,\n            version: os.release()\n        },\n        platform: `Node.js ${process.version}, ${os.endianness()} (unified)`\n    };\n    // support optionally provided wrapping driver info\n    if (options.driverInfo) {\n        if (options.driverInfo.name) {\n            metadata.driver.name = `${metadata.driver.name}|${options.driverInfo.name}`;\n        }\n        if (options.driverInfo.version) {\n            metadata.version = `${metadata.driver.version}|${options.driverInfo.version}`;\n        }\n        if (options.driverInfo.platform) {\n            metadata.platform = `${metadata.platform}|${options.driverInfo.platform}`;\n        }\n    }\n    if (options.appName) {\n        // MongoDB requires the appName not exceed a byte length of 128\n        const buffer = buffer_1.Buffer.from(options.appName);\n        metadata.application = {\n            name: buffer.byteLength > 128 ? buffer.slice(0, 128).toString('utf8') : options.appName\n        };\n    }\n    return metadata;\n}\nexports.makeClientMetadata = makeClientMetadata;\n/** @internal */\nfunction now() {\n    const hrtime = process.hrtime();\n    return Math.floor(hrtime[0] * 1000 + hrtime[1] / 1000000);\n}\nexports.now = now;\n/** @internal */\nfunction calculateDurationInMs(started) {\n    if (typeof started !== 'number') {\n        throw new error_1.MongoInvalidArgumentError('Numeric value required to calculate duration');\n    }\n    const elapsed = now() - started;\n    return elapsed < 0 ? 0 : elapsed;\n}\nexports.calculateDurationInMs = calculateDurationInMs;\n/** @internal */\nfunction hasAtomicOperators(doc) {\n    if (Array.isArray(doc)) {\n        for (const document of doc) {\n            if (hasAtomicOperators(document)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    const keys = Object.keys(doc);\n    return keys.length > 0 && keys[0][0] === '$';\n}\nexports.hasAtomicOperators = hasAtomicOperators;\n/**\n * Merge inherited properties from parent into options, prioritizing values from options,\n * then values from parent.\n * @internal\n */\nfunction resolveOptions(parent, options) {\n    const result = Object.assign({}, options, (0, bson_1.resolveBSONOptions)(options, parent));\n    // Users cannot pass a readConcern/writeConcern to operations in a transaction\n    const session = options?.session;\n    if (!session?.inTransaction()) {\n        const readConcern = read_concern_1.ReadConcern.fromOptions(options) ?? parent?.readConcern;\n        if (readConcern) {\n            result.readConcern = readConcern;\n        }\n        const writeConcern = write_concern_1.WriteConcern.fromOptions(options) ?? parent?.writeConcern;\n        if (writeConcern) {\n            result.writeConcern = writeConcern;\n        }\n    }\n    const readPreference = read_preference_1.ReadPreference.fromOptions(options) ?? parent?.readPreference;\n    if (readPreference) {\n        result.readPreference = readPreference;\n    }\n    return result;\n}\nexports.resolveOptions = resolveOptions;\nfunction isSuperset(set, subset) {\n    set = Array.isArray(set) ? new Set(set) : set;\n    subset = Array.isArray(subset) ? new Set(subset) : subset;\n    for (const elem of subset) {\n        if (!set.has(elem)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isSuperset = isSuperset;\n/**\n * Checks if the document is a Hello request\n * @internal\n */\nfunction isHello(doc) {\n    return doc[constants_2.LEGACY_HELLO_COMMAND] || doc.hello ? true : false;\n}\nexports.isHello = isHello;\n/** Returns the items that are uniquely in setA */\nfunction setDifference(setA, setB) {\n    const difference = new Set(setA);\n    for (const elem of setB) {\n        difference.delete(elem);\n    }\n    return difference;\n}\nexports.setDifference = setDifference;\nconst HAS_OWN = (object, prop) => Object.prototype.hasOwnProperty.call(object, prop);\nfunction isRecord(value, requiredKeys = undefined) {\n    if (!isObject(value)) {\n        return false;\n    }\n    const ctor = value.constructor;\n    if (ctor && ctor.prototype) {\n        if (!isObject(ctor.prototype)) {\n            return false;\n        }\n        // Check to see if some method exists from the Object exists\n        if (!HAS_OWN(ctor.prototype, 'isPrototypeOf')) {\n            return false;\n        }\n    }\n    if (requiredKeys) {\n        const keys = Object.keys(value);\n        return isSuperset(keys, requiredKeys);\n    }\n    return true;\n}\nexports.isRecord = isRecord;\n/**\n * Make a deep copy of an object\n *\n * NOTE: This is not meant to be the perfect implementation of a deep copy,\n * but instead something that is good enough for the purposes of\n * command monitoring.\n */\nfunction deepCopy(value) {\n    if (value == null) {\n        return value;\n    }\n    else if (Array.isArray(value)) {\n        return value.map(item => deepCopy(item));\n    }\n    else if (isRecord(value)) {\n        const res = {};\n        for (const key in value) {\n            res[key] = deepCopy(value[key]);\n        }\n        return res;\n    }\n    const ctor = value.constructor;\n    if (ctor) {\n        switch (ctor.name.toLowerCase()) {\n            case 'date':\n                return new ctor(Number(value));\n            case 'map':\n                return new Map(value);\n            case 'set':\n                return new Set(value);\n            case 'buffer':\n                return buffer_1.Buffer.from(value);\n        }\n    }\n    return value;\n}\nexports.deepCopy = deepCopy;\n/**\n * A sequential list of items in a circularly linked list\n * @remarks\n * The head node is special, it is always defined and has a value of null.\n * It is never \"included\" in the list, in that, it is not returned by pop/shift or yielded by the iterator.\n * The circular linkage and always defined head node are to reduce checks for null next/prev references to zero.\n * New nodes are declared as object literals with keys always in the same order: next, prev, value.\n * @internal\n */\nclass List {\n    get length() {\n        return this.count;\n    }\n    get [Symbol.toStringTag]() {\n        return 'List';\n    }\n    constructor() {\n        this.count = 0;\n        // this is carefully crafted:\n        // declaring a complete and consistently key ordered\n        // object is beneficial to the runtime optimizations\n        this.head = {\n            next: null,\n            prev: null,\n            value: null\n        };\n        this.head.next = this.head;\n        this.head.prev = this.head;\n    }\n    toArray() {\n        return Array.from(this);\n    }\n    toString() {\n        return `head <=> ${this.toArray().join(' <=> ')} <=> head`;\n    }\n    *[Symbol.iterator]() {\n        for (const node of this.nodes()) {\n            yield node.value;\n        }\n    }\n    *nodes() {\n        let ptr = this.head.next;\n        while (ptr !== this.head) {\n            // Save next before yielding so that we make removing within iteration safe\n            const { next } = ptr;\n            yield ptr;\n            ptr = next;\n        }\n    }\n    /** Insert at end of list */\n    push(value) {\n        this.count += 1;\n        const newNode = {\n            next: this.head,\n            prev: this.head.prev,\n            value\n        };\n        this.head.prev.next = newNode;\n        this.head.prev = newNode;\n    }\n    /** Inserts every item inside an iterable instead of the iterable itself */\n    pushMany(iterable) {\n        for (const value of iterable) {\n            this.push(value);\n        }\n    }\n    /** Insert at front of list */\n    unshift(value) {\n        this.count += 1;\n        const newNode = {\n            next: this.head.next,\n            prev: this.head,\n            value\n        };\n        this.head.next.prev = newNode;\n        this.head.next = newNode;\n    }\n    remove(node) {\n        if (node === this.head || this.length === 0) {\n            return null;\n        }\n        this.count -= 1;\n        const prevNode = node.prev;\n        const nextNode = node.next;\n        prevNode.next = nextNode;\n        nextNode.prev = prevNode;\n        return node.value;\n    }\n    /** Removes the first node at the front of the list */\n    shift() {\n        return this.remove(this.head.next);\n    }\n    /** Removes the last node at the end of the list */\n    pop() {\n        return this.remove(this.head.prev);\n    }\n    /** Iterates through the list and removes nodes where filter returns true */\n    prune(filter) {\n        for (const node of this.nodes()) {\n            if (filter(node.value)) {\n                this.remove(node);\n            }\n        }\n    }\n    clear() {\n        this.count = 0;\n        this.head.next = this.head;\n        this.head.prev = this.head;\n    }\n    /** Returns the first item in the list, does not remove */\n    first() {\n        // If the list is empty, value will be the head's null\n        return this.head.next.value;\n    }\n    /** Returns the last item in the list, does not remove */\n    last() {\n        // If the list is empty, value will be the head's null\n        return this.head.prev.value;\n    }\n}\nexports.List = List;\n/**\n * A pool of Buffers which allow you to read them as if they were one\n * @internal\n */\nclass BufferPool {\n    constructor() {\n        this.buffers = new List();\n        this.totalByteLength = 0;\n    }\n    get length() {\n        return this.totalByteLength;\n    }\n    /** Adds a buffer to the internal buffer pool list */\n    append(buffer) {\n        this.buffers.push(buffer);\n        this.totalByteLength += buffer.length;\n    }\n    /**\n     * If BufferPool contains 4 bytes or more construct an int32 from the leading bytes,\n     * otherwise return null. Size can be negative, caller should error check.\n     */\n    getInt32() {\n        if (this.totalByteLength < 4) {\n            return null;\n        }\n        const firstBuffer = this.buffers.first();\n        if (firstBuffer != null && firstBuffer.byteLength >= 4) {\n            return firstBuffer.readInt32LE(0);\n        }\n        // Unlikely case: an int32 is split across buffers.\n        // Use read and put the returned buffer back on top\n        const top4Bytes = this.read(4);\n        const value = top4Bytes.readInt32LE(0);\n        // Put it back.\n        this.totalByteLength += 4;\n        this.buffers.unshift(top4Bytes);\n        return value;\n    }\n    /** Reads the requested number of bytes, optionally consuming them */\n    read(size) {\n        if (typeof size !== 'number' || size < 0) {\n            throw new error_1.MongoInvalidArgumentError('Argument \"size\" must be a non-negative number');\n        }\n        // oversized request returns empty buffer\n        if (size > this.totalByteLength) {\n            return buffer_1.Buffer.alloc(0);\n        }\n        // We know we have enough, we just don't know how it is spread across chunks\n        // TODO(NODE-4732): alloc API should change based on raw option\n        const result = buffer_1.Buffer.allocUnsafe(size);\n        for (let bytesRead = 0; bytesRead < size;) {\n            const buffer = this.buffers.shift();\n            if (buffer == null) {\n                break;\n            }\n            const bytesRemaining = size - bytesRead;\n            const bytesReadable = Math.min(bytesRemaining, buffer.byteLength);\n            const bytes = buffer.subarray(0, bytesReadable);\n            result.set(bytes, bytesRead);\n            bytesRead += bytesReadable;\n            this.totalByteLength -= bytesReadable;\n            if (bytesReadable < buffer.byteLength) {\n                this.buffers.unshift(buffer.subarray(bytesReadable));\n            }\n        }\n        return result;\n    }\n}\nexports.BufferPool = BufferPool;\n/** @public */\nclass HostAddress {\n    constructor(hostString) {\n        this.host = undefined;\n        this.port = undefined;\n        this.socketPath = undefined;\n        this.isIPv6 = false;\n        const escapedHost = hostString.split(' ').join('%20'); // escape spaces, for socket path hosts\n        if (escapedHost.endsWith('.sock')) {\n            // heuristically determine if we're working with a domain socket\n            this.socketPath = decodeURIComponent(escapedHost);\n            return;\n        }\n        const urlString = `iLoveJS://${escapedHost}`;\n        let url;\n        try {\n            url = new url_1.URL(urlString);\n        }\n        catch (urlError) {\n            const runtimeError = new error_1.MongoRuntimeError(`Unable to parse ${escapedHost} with URL`);\n            runtimeError.cause = urlError;\n            throw runtimeError;\n        }\n        const hostname = url.hostname;\n        const port = url.port;\n        let normalized = decodeURIComponent(hostname).toLowerCase();\n        if (normalized.startsWith('[') && normalized.endsWith(']')) {\n            this.isIPv6 = true;\n            normalized = normalized.substring(1, hostname.length - 1);\n        }\n        this.host = normalized.toLowerCase();\n        if (typeof port === 'number') {\n            this.port = port;\n        }\n        else if (typeof port === 'string' && port !== '') {\n            this.port = Number.parseInt(port, 10);\n        }\n        else {\n            this.port = 27017;\n        }\n        if (this.port === 0) {\n            throw new error_1.MongoParseError('Invalid port (zero) with hostname');\n        }\n        Object.freeze(this);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new HostAddress('${this.toString()}')`;\n    }\n    toString() {\n        if (typeof this.host === 'string') {\n            if (this.isIPv6) {\n                return `[${this.host}]:${this.port}`;\n            }\n            return `${this.host}:${this.port}`;\n        }\n        return `${this.socketPath}`;\n    }\n    static fromString(s) {\n        return new HostAddress(s);\n    }\n    static fromHostPort(host, port) {\n        if (host.includes(':')) {\n            host = `[${host}]`; // IPv6 address\n        }\n        return HostAddress.fromString(`${host}:${port}`);\n    }\n    static fromSrvRecord({ name, port }) {\n        return HostAddress.fromHostPort(name, port);\n    }\n}\nexports.HostAddress = HostAddress;\nexports.DEFAULT_PK_FACTORY = {\n    // We prefer not to rely on ObjectId having a createPk method\n    createPk() {\n        return new bson_1.ObjectId();\n    }\n};\n/**\n * When the driver used emitWarning the code will be equal to this.\n * @public\n *\n * @example\n * ```ts\n * process.on('warning', (warning) => {\n *  if (warning.code === MONGODB_WARNING_CODE) console.error('Ah an important warning! :)')\n * })\n * ```\n */\nexports.MONGODB_WARNING_CODE = 'MONGODB DRIVER';\n/** @internal */\nfunction emitWarning(message) {\n    return process.emitWarning(message, { code: exports.MONGODB_WARNING_CODE });\n}\nexports.emitWarning = emitWarning;\nconst emittedWarnings = new Set();\n/**\n * Will emit a warning once for the duration of the application.\n * Uses the message to identify if it has already been emitted\n * so using string interpolation can cause multiple emits\n * @internal\n */\nfunction emitWarningOnce(message) {\n    if (!emittedWarnings.has(message)) {\n        emittedWarnings.add(message);\n        return emitWarning(message);\n    }\n}\nexports.emitWarningOnce = emitWarningOnce;\n/**\n * Takes a JS object and joins the values into a string separated by ', '\n */\nfunction enumToString(en) {\n    return Object.values(en).join(', ');\n}\nexports.enumToString = enumToString;\n/**\n * Determine if a server supports retryable writes.\n *\n * @internal\n */\nfunction supportsRetryableWrites(server) {\n    if (!server) {\n        return false;\n    }\n    if (server.loadBalanced) {\n        // Loadbalanced topologies will always support retry writes\n        return true;\n    }\n    if (server.description.logicalSessionTimeoutMinutes != null) {\n        // that supports sessions\n        if (server.description.type !== common_1.ServerType.Standalone) {\n            // and that is not a standalone\n            return true;\n        }\n    }\n    return false;\n}\nexports.supportsRetryableWrites = supportsRetryableWrites;\n/**\n * Fisher–Yates Shuffle\n *\n * Reference: https://bost.ocks.org/mike/shuffle/\n * @param sequence - items to be shuffled\n * @param limit - Defaults to `0`. If nonzero shuffle will slice the randomized array e.g, `.slice(0, limit)` otherwise will return the entire randomized array.\n */\nfunction shuffle(sequence, limit = 0) {\n    const items = Array.from(sequence); // shallow copy in order to never shuffle the input\n    if (limit > items.length) {\n        throw new error_1.MongoRuntimeError('Limit must be less than the number of items');\n    }\n    let remainingItemsToShuffle = items.length;\n    const lowerBound = limit % items.length === 0 ? 1 : items.length - limit;\n    while (remainingItemsToShuffle > lowerBound) {\n        // Pick a remaining element\n        const randomIndex = Math.floor(Math.random() * remainingItemsToShuffle);\n        remainingItemsToShuffle -= 1;\n        // And swap it with the current element\n        const swapHold = items[remainingItemsToShuffle];\n        items[remainingItemsToShuffle] = items[randomIndex];\n        items[randomIndex] = swapHold;\n    }\n    return limit % items.length === 0 ? items : items.slice(lowerBound);\n}\nexports.shuffle = shuffle;\n// TODO(NODE-4936): read concern eligibility for commands should be codified in command construction\n// @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#read-concern\nfunction commandSupportsReadConcern(command, options) {\n    if (command.aggregate || command.count || command.distinct || command.find || command.geoNear) {\n        return true;\n    }\n    if (command.mapReduce &&\n        options &&\n        options.out &&\n        (options.out.inline === 1 || options.out === 'inline')) {\n        return true;\n    }\n    return false;\n}\nexports.commandSupportsReadConcern = commandSupportsReadConcern;\n/** A utility function to get the instance of mongodb-client-encryption, if it exists. */\nfunction getMongoDBClientEncryption() {\n    let mongodbClientEncryption = null;\n    // NOTE(NODE-4254): This is to get around the circular dependency between\n    // mongodb-client-encryption and the driver in the test scenarios.\n    if (typeof process.env.MONGODB_CLIENT_ENCRYPTION_OVERRIDE === 'string' &&\n        process.env.MONGODB_CLIENT_ENCRYPTION_OVERRIDE.length > 0) {\n        try {\n            // NOTE(NODE-3199): Ensure you always wrap an optional require literally in the try block\n            // Cannot be moved to helper utility function, bundlers search and replace the actual require call\n            // in a way that makes this line throw at bundle time, not runtime, catching here will make bundling succeed\n            mongodbClientEncryption = require(process.env.MONGODB_CLIENT_ENCRYPTION_OVERRIDE);\n        }\n        catch {\n            // ignore\n        }\n    }\n    else {\n        try {\n            // NOTE(NODE-3199): Ensure you always wrap an optional require literally in the try block\n            // Cannot be moved to helper utility function, bundlers search and replace the actual require call\n            // in a way that makes this line throw at bundle time, not runtime, catching here will make bundling succeed\n            mongodbClientEncryption = require('mongodb-client-encryption');\n        }\n        catch {\n            // ignore\n        }\n    }\n    return mongodbClientEncryption;\n}\nexports.getMongoDBClientEncryption = getMongoDBClientEncryption;\n/**\n * Compare objectIds. `null` is always less\n * - `+1 = oid1 is greater than oid2`\n * - `-1 = oid1 is less than oid2`\n * - `+0 = oid1 is equal oid2`\n */\nfunction compareObjectId(oid1, oid2) {\n    if (oid1 == null && oid2 == null) {\n        return 0;\n    }\n    if (oid1 == null) {\n        return -1;\n    }\n    if (oid2 == null) {\n        return 1;\n    }\n    return exports.ByteUtils.compare(oid1.id, oid2.id);\n}\nexports.compareObjectId = compareObjectId;\nfunction parseInteger(value) {\n    if (typeof value === 'number')\n        return Math.trunc(value);\n    const parsedValue = Number.parseInt(String(value), 10);\n    return Number.isNaN(parsedValue) ? null : parsedValue;\n}\nexports.parseInteger = parseInteger;\nfunction parseUnsignedInteger(value) {\n    const parsedInt = parseInteger(value);\n    return parsedInt != null && parsedInt >= 0 ? parsedInt : null;\n}\nexports.parseUnsignedInteger = parseUnsignedInteger;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteConcern = exports.WRITE_CONCERN_KEYS = void 0;\nexports.WRITE_CONCERN_KEYS = ['w', 'wtimeout', 'j', 'journal', 'fsync'];\n/**\n * A MongoDB WriteConcern, which describes the level of acknowledgement\n * requested from MongoDB for write operations.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/reference/write-concern/\n */\nclass WriteConcern {\n    /**\n     * Constructs a WriteConcern from the write concern properties.\n     * @param w - request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags.\n     * @param wtimeout - specify a time limit to prevent write operations from blocking indefinitely\n     * @param j - request acknowledgment that the write operation has been written to the on-disk journal\n     * @param fsync - equivalent to the j option\n     */\n    constructor(w, wtimeout, j, fsync) {\n        if (w != null) {\n            if (!Number.isNaN(Number(w))) {\n                this.w = Number(w);\n            }\n            else {\n                this.w = w;\n            }\n        }\n        if (wtimeout != null) {\n            this.wtimeout = wtimeout;\n        }\n        if (j != null) {\n            this.j = j;\n        }\n        if (fsync != null) {\n            this.fsync = fsync;\n        }\n    }\n    /** Construct a WriteConcern given an options object. */\n    static fromOptions(options, inherit) {\n        if (options == null)\n            return undefined;\n        inherit = inherit ?? {};\n        let opts;\n        if (typeof options === 'string' || typeof options === 'number') {\n            opts = { w: options };\n        }\n        else if (options instanceof WriteConcern) {\n            opts = options;\n        }\n        else {\n            opts = options.writeConcern;\n        }\n        const parentOpts = inherit instanceof WriteConcern ? inherit : inherit.writeConcern;\n        const { w = undefined, wtimeout = undefined, j = undefined, fsync = undefined, journal = undefined, wtimeoutMS = undefined } = {\n            ...parentOpts,\n            ...opts\n        };\n        if (w != null ||\n            wtimeout != null ||\n            wtimeoutMS != null ||\n            j != null ||\n            journal != null ||\n            fsync != null) {\n            return new WriteConcern(w, wtimeout ?? wtimeoutMS, j ?? journal, fsync);\n        }\n        return undefined;\n    }\n}\nexports.WriteConcern = WriteConcern;\n//# sourceMappingURL=write_concern.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 5616;\nmodule.exports = webpackEmptyContext;","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"./utils\");\n// The default Buffer size if one is not provided.\nconst DEFAULT_SMARTBUFFER_SIZE = 4096;\n// The default string encoding to use for reading/writing strings.\nconst DEFAULT_SMARTBUFFER_ENCODING = 'utf8';\nclass SmartBuffer {\n    /**\n     * Creates a new SmartBuffer instance.\n     *\n     * @param options { SmartBufferOptions } The SmartBufferOptions to apply to this instance.\n     */\n    constructor(options) {\n        this.length = 0;\n        this._encoding = DEFAULT_SMARTBUFFER_ENCODING;\n        this._writeOffset = 0;\n        this._readOffset = 0;\n        if (SmartBuffer.isSmartBufferOptions(options)) {\n            // Checks for encoding\n            if (options.encoding) {\n                utils_1.checkEncoding(options.encoding);\n                this._encoding = options.encoding;\n            }\n            // Checks for initial size length\n            if (options.size) {\n                if (utils_1.isFiniteInteger(options.size) && options.size > 0) {\n                    this._buff = Buffer.allocUnsafe(options.size);\n                }\n                else {\n                    throw new Error(utils_1.ERRORS.INVALID_SMARTBUFFER_SIZE);\n                }\n                // Check for initial Buffer\n            }\n            else if (options.buff) {\n                if (Buffer.isBuffer(options.buff)) {\n                    this._buff = options.buff;\n                    this.length = options.buff.length;\n                }\n                else {\n                    throw new Error(utils_1.ERRORS.INVALID_SMARTBUFFER_BUFFER);\n                }\n            }\n            else {\n                this._buff = Buffer.allocUnsafe(DEFAULT_SMARTBUFFER_SIZE);\n            }\n        }\n        else {\n            // If something was passed but it's not a SmartBufferOptions object\n            if (typeof options !== 'undefined') {\n                throw new Error(utils_1.ERRORS.INVALID_SMARTBUFFER_OBJECT);\n            }\n            // Otherwise default to sane options\n            this._buff = Buffer.allocUnsafe(DEFAULT_SMARTBUFFER_SIZE);\n        }\n    }\n    /**\n     * Creates a new SmartBuffer instance with the provided internal Buffer size and optional encoding.\n     *\n     * @param size { Number } The size of the internal Buffer.\n     * @param encoding { String } The BufferEncoding to use for strings.\n     *\n     * @return { SmartBuffer }\n     */\n    static fromSize(size, encoding) {\n        return new this({\n            size: size,\n            encoding: encoding\n        });\n    }\n    /**\n     * Creates a new SmartBuffer instance with the provided Buffer and optional encoding.\n     *\n     * @param buffer { Buffer } The Buffer to use as the internal Buffer value.\n     * @param encoding { String } The BufferEncoding to use for strings.\n     *\n     * @return { SmartBuffer }\n     */\n    static fromBuffer(buff, encoding) {\n        return new this({\n            buff: buff,\n            encoding: encoding\n        });\n    }\n    /**\n     * Creates a new SmartBuffer instance with the provided SmartBufferOptions options.\n     *\n     * @param options { SmartBufferOptions } The options to use when creating the SmartBuffer instance.\n     */\n    static fromOptions(options) {\n        return new this(options);\n    }\n    /**\n     * Type checking function that determines if an object is a SmartBufferOptions object.\n     */\n    static isSmartBufferOptions(options) {\n        const castOptions = options;\n        return (castOptions &&\n            (castOptions.encoding !== undefined || castOptions.size !== undefined || castOptions.buff !== undefined));\n    }\n    // Signed integers\n    /**\n     * Reads an Int8 value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readInt8(offset) {\n        return this._readNumberValue(Buffer.prototype.readInt8, 1, offset);\n    }\n    /**\n     * Reads an Int16BE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readInt16BE(offset) {\n        return this._readNumberValue(Buffer.prototype.readInt16BE, 2, offset);\n    }\n    /**\n     * Reads an Int16LE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readInt16LE(offset) {\n        return this._readNumberValue(Buffer.prototype.readInt16LE, 2, offset);\n    }\n    /**\n     * Reads an Int32BE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readInt32BE(offset) {\n        return this._readNumberValue(Buffer.prototype.readInt32BE, 4, offset);\n    }\n    /**\n     * Reads an Int32LE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readInt32LE(offset) {\n        return this._readNumberValue(Buffer.prototype.readInt32LE, 4, offset);\n    }\n    /**\n     * Reads a BigInt64BE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { BigInt }\n     */\n    readBigInt64BE(offset) {\n        utils_1.bigIntAndBufferInt64Check('readBigInt64BE');\n        return this._readNumberValue(Buffer.prototype.readBigInt64BE, 8, offset);\n    }\n    /**\n     * Reads a BigInt64LE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { BigInt }\n     */\n    readBigInt64LE(offset) {\n        utils_1.bigIntAndBufferInt64Check('readBigInt64LE');\n        return this._readNumberValue(Buffer.prototype.readBigInt64LE, 8, offset);\n    }\n    /**\n     * Writes an Int8 value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeInt8(value, offset) {\n        this._writeNumberValue(Buffer.prototype.writeInt8, 1, value, offset);\n        return this;\n    }\n    /**\n     * Inserts an Int8 value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertInt8(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeInt8, 1, value, offset);\n    }\n    /**\n     * Writes an Int16BE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeInt16BE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeInt16BE, 2, value, offset);\n    }\n    /**\n     * Inserts an Int16BE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertInt16BE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeInt16BE, 2, value, offset);\n    }\n    /**\n     * Writes an Int16LE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeInt16LE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeInt16LE, 2, value, offset);\n    }\n    /**\n     * Inserts an Int16LE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertInt16LE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeInt16LE, 2, value, offset);\n    }\n    /**\n     * Writes an Int32BE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeInt32BE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeInt32BE, 4, value, offset);\n    }\n    /**\n     * Inserts an Int32BE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertInt32BE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeInt32BE, 4, value, offset);\n    }\n    /**\n     * Writes an Int32LE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeInt32LE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeInt32LE, 4, value, offset);\n    }\n    /**\n     * Inserts an Int32LE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertInt32LE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeInt32LE, 4, value, offset);\n    }\n    /**\n     * Writes a BigInt64BE value to the current write position (or at optional offset).\n     *\n     * @param value { BigInt } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeBigInt64BE(value, offset) {\n        utils_1.bigIntAndBufferInt64Check('writeBigInt64BE');\n        return this._writeNumberValue(Buffer.prototype.writeBigInt64BE, 8, value, offset);\n    }\n    /**\n     * Inserts a BigInt64BE value at the given offset value.\n     *\n     * @param value { BigInt } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertBigInt64BE(value, offset) {\n        utils_1.bigIntAndBufferInt64Check('writeBigInt64BE');\n        return this._insertNumberValue(Buffer.prototype.writeBigInt64BE, 8, value, offset);\n    }\n    /**\n     * Writes a BigInt64LE value to the current write position (or at optional offset).\n     *\n     * @param value { BigInt } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeBigInt64LE(value, offset) {\n        utils_1.bigIntAndBufferInt64Check('writeBigInt64LE');\n        return this._writeNumberValue(Buffer.prototype.writeBigInt64LE, 8, value, offset);\n    }\n    /**\n     * Inserts a Int64LE value at the given offset value.\n     *\n     * @param value { BigInt } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertBigInt64LE(value, offset) {\n        utils_1.bigIntAndBufferInt64Check('writeBigInt64LE');\n        return this._insertNumberValue(Buffer.prototype.writeBigInt64LE, 8, value, offset);\n    }\n    // Unsigned Integers\n    /**\n     * Reads an UInt8 value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readUInt8(offset) {\n        return this._readNumberValue(Buffer.prototype.readUInt8, 1, offset);\n    }\n    /**\n     * Reads an UInt16BE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readUInt16BE(offset) {\n        return this._readNumberValue(Buffer.prototype.readUInt16BE, 2, offset);\n    }\n    /**\n     * Reads an UInt16LE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readUInt16LE(offset) {\n        return this._readNumberValue(Buffer.prototype.readUInt16LE, 2, offset);\n    }\n    /**\n     * Reads an UInt32BE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readUInt32BE(offset) {\n        return this._readNumberValue(Buffer.prototype.readUInt32BE, 4, offset);\n    }\n    /**\n     * Reads an UInt32LE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readUInt32LE(offset) {\n        return this._readNumberValue(Buffer.prototype.readUInt32LE, 4, offset);\n    }\n    /**\n     * Reads a BigUInt64BE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { BigInt }\n     */\n    readBigUInt64BE(offset) {\n        utils_1.bigIntAndBufferInt64Check('readBigUInt64BE');\n        return this._readNumberValue(Buffer.prototype.readBigUInt64BE, 8, offset);\n    }\n    /**\n     * Reads a BigUInt64LE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { BigInt }\n     */\n    readBigUInt64LE(offset) {\n        utils_1.bigIntAndBufferInt64Check('readBigUInt64LE');\n        return this._readNumberValue(Buffer.prototype.readBigUInt64LE, 8, offset);\n    }\n    /**\n     * Writes an UInt8 value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeUInt8(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeUInt8, 1, value, offset);\n    }\n    /**\n     * Inserts an UInt8 value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertUInt8(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeUInt8, 1, value, offset);\n    }\n    /**\n     * Writes an UInt16BE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeUInt16BE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeUInt16BE, 2, value, offset);\n    }\n    /**\n     * Inserts an UInt16BE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertUInt16BE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeUInt16BE, 2, value, offset);\n    }\n    /**\n     * Writes an UInt16LE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeUInt16LE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeUInt16LE, 2, value, offset);\n    }\n    /**\n     * Inserts an UInt16LE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertUInt16LE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeUInt16LE, 2, value, offset);\n    }\n    /**\n     * Writes an UInt32BE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeUInt32BE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeUInt32BE, 4, value, offset);\n    }\n    /**\n     * Inserts an UInt32BE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertUInt32BE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeUInt32BE, 4, value, offset);\n    }\n    /**\n     * Writes an UInt32LE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeUInt32LE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeUInt32LE, 4, value, offset);\n    }\n    /**\n     * Inserts an UInt32LE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertUInt32LE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeUInt32LE, 4, value, offset);\n    }\n    /**\n     * Writes a BigUInt64BE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeBigUInt64BE(value, offset) {\n        utils_1.bigIntAndBufferInt64Check('writeBigUInt64BE');\n        return this._writeNumberValue(Buffer.prototype.writeBigUInt64BE, 8, value, offset);\n    }\n    /**\n     * Inserts a BigUInt64BE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertBigUInt64BE(value, offset) {\n        utils_1.bigIntAndBufferInt64Check('writeBigUInt64BE');\n        return this._insertNumberValue(Buffer.prototype.writeBigUInt64BE, 8, value, offset);\n    }\n    /**\n     * Writes a BigUInt64LE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeBigUInt64LE(value, offset) {\n        utils_1.bigIntAndBufferInt64Check('writeBigUInt64LE');\n        return this._writeNumberValue(Buffer.prototype.writeBigUInt64LE, 8, value, offset);\n    }\n    /**\n     * Inserts a BigUInt64LE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertBigUInt64LE(value, offset) {\n        utils_1.bigIntAndBufferInt64Check('writeBigUInt64LE');\n        return this._insertNumberValue(Buffer.prototype.writeBigUInt64LE, 8, value, offset);\n    }\n    // Floating Point\n    /**\n     * Reads an FloatBE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readFloatBE(offset) {\n        return this._readNumberValue(Buffer.prototype.readFloatBE, 4, offset);\n    }\n    /**\n     * Reads an FloatLE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readFloatLE(offset) {\n        return this._readNumberValue(Buffer.prototype.readFloatLE, 4, offset);\n    }\n    /**\n     * Writes a FloatBE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeFloatBE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeFloatBE, 4, value, offset);\n    }\n    /**\n     * Inserts a FloatBE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertFloatBE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeFloatBE, 4, value, offset);\n    }\n    /**\n     * Writes a FloatLE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeFloatLE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeFloatLE, 4, value, offset);\n    }\n    /**\n     * Inserts a FloatLE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertFloatLE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeFloatLE, 4, value, offset);\n    }\n    // Double Floating Point\n    /**\n     * Reads an DoublEBE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readDoubleBE(offset) {\n        return this._readNumberValue(Buffer.prototype.readDoubleBE, 8, offset);\n    }\n    /**\n     * Reads an DoubleLE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    readDoubleLE(offset) {\n        return this._readNumberValue(Buffer.prototype.readDoubleLE, 8, offset);\n    }\n    /**\n     * Writes a DoubleBE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeDoubleBE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeDoubleBE, 8, value, offset);\n    }\n    /**\n     * Inserts a DoubleBE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertDoubleBE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeDoubleBE, 8, value, offset);\n    }\n    /**\n     * Writes a DoubleLE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n    writeDoubleLE(value, offset) {\n        return this._writeNumberValue(Buffer.prototype.writeDoubleLE, 8, value, offset);\n    }\n    /**\n     * Inserts a DoubleLE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n    insertDoubleLE(value, offset) {\n        return this._insertNumberValue(Buffer.prototype.writeDoubleLE, 8, value, offset);\n    }\n    // Strings\n    /**\n     * Reads a String from the current read position.\n     *\n     * @param arg1 { Number | String } The number of bytes to read as a String, or the BufferEncoding to use for\n     *             the string (Defaults to instance level encoding).\n     * @param encoding { String } The BufferEncoding to use for the string (Defaults to instance level encoding).\n     *\n     * @return { String }\n     */\n    readString(arg1, encoding) {\n        let lengthVal;\n        // Length provided\n        if (typeof arg1 === 'number') {\n            utils_1.checkLengthValue(arg1);\n            lengthVal = Math.min(arg1, this.length - this._readOffset);\n        }\n        else {\n            encoding = arg1;\n            lengthVal = this.length - this._readOffset;\n        }\n        // Check encoding\n        if (typeof encoding !== 'undefined') {\n            utils_1.checkEncoding(encoding);\n        }\n        const value = this._buff.slice(this._readOffset, this._readOffset + lengthVal).toString(encoding || this._encoding);\n        this._readOffset += lengthVal;\n        return value;\n    }\n    /**\n     * Inserts a String\n     *\n     * @param value { String } The String value to insert.\n     * @param offset { Number } The offset to insert the string at.\n     * @param encoding { String } The BufferEncoding to use for writing strings (defaults to instance encoding).\n     *\n     * @return this\n     */\n    insertString(value, offset, encoding) {\n        utils_1.checkOffsetValue(offset);\n        return this._handleString(value, true, offset, encoding);\n    }\n    /**\n     * Writes a String\n     *\n     * @param value { String } The String value to write.\n     * @param arg2 { Number | String } The offset to write the string at, or the BufferEncoding to use.\n     * @param encoding { String } The BufferEncoding to use for writing strings (defaults to instance encoding).\n     *\n     * @return this\n     */\n    writeString(value, arg2, encoding) {\n        return this._handleString(value, false, arg2, encoding);\n    }\n    /**\n     * Reads a null-terminated String from the current read position.\n     *\n     * @param encoding { String } The BufferEncoding to use for the string (Defaults to instance level encoding).\n     *\n     * @return { String }\n     */\n    readStringNT(encoding) {\n        if (typeof encoding !== 'undefined') {\n            utils_1.checkEncoding(encoding);\n        }\n        // Set null character position to the end SmartBuffer instance.\n        let nullPos = this.length;\n        // Find next null character (if one is not found, default from above is used)\n        for (let i = this._readOffset; i < this.length; i++) {\n            if (this._buff[i] === 0x00) {\n                nullPos = i;\n                break;\n            }\n        }\n        // Read string value\n        const value = this._buff.slice(this._readOffset, nullPos);\n        // Increment internal Buffer read offset\n        this._readOffset = nullPos + 1;\n        return value.toString(encoding || this._encoding);\n    }\n    /**\n     * Inserts a null-terminated String.\n     *\n     * @param value { String } The String value to write.\n     * @param arg2 { Number | String } The offset to write the string to, or the BufferEncoding to use.\n     * @param encoding { String } The BufferEncoding to use for writing strings (defaults to instance encoding).\n     *\n     * @return this\n     */\n    insertStringNT(value, offset, encoding) {\n        utils_1.checkOffsetValue(offset);\n        // Write Values\n        this.insertString(value, offset, encoding);\n        this.insertUInt8(0x00, offset + value.length);\n        return this;\n    }\n    /**\n     * Writes a null-terminated String.\n     *\n     * @param value { String } The String value to write.\n     * @param arg2 { Number | String } The offset to write the string to, or the BufferEncoding to use.\n     * @param encoding { String } The BufferEncoding to use for writing strings (defaults to instance encoding).\n     *\n     * @return this\n     */\n    writeStringNT(value, arg2, encoding) {\n        // Write Values\n        this.writeString(value, arg2, encoding);\n        this.writeUInt8(0x00, typeof arg2 === 'number' ? arg2 + value.length : this.writeOffset);\n        return this;\n    }\n    // Buffers\n    /**\n     * Reads a Buffer from the internal read position.\n     *\n     * @param length { Number } The length of data to read as a Buffer.\n     *\n     * @return { Buffer }\n     */\n    readBuffer(length) {\n        if (typeof length !== 'undefined') {\n            utils_1.checkLengthValue(length);\n        }\n        const lengthVal = typeof length === 'number' ? length : this.length;\n        const endPoint = Math.min(this.length, this._readOffset + lengthVal);\n        // Read buffer value\n        const value = this._buff.slice(this._readOffset, endPoint);\n        // Increment internal Buffer read offset\n        this._readOffset = endPoint;\n        return value;\n    }\n    /**\n     * Writes a Buffer to the current write position.\n     *\n     * @param value { Buffer } The Buffer to write.\n     * @param offset { Number } The offset to write the Buffer to.\n     *\n     * @return this\n     */\n    insertBuffer(value, offset) {\n        utils_1.checkOffsetValue(offset);\n        return this._handleBuffer(value, true, offset);\n    }\n    /**\n     * Writes a Buffer to the current write position.\n     *\n     * @param value { Buffer } The Buffer to write.\n     * @param offset { Number } The offset to write the Buffer to.\n     *\n     * @return this\n     */\n    writeBuffer(value, offset) {\n        return this._handleBuffer(value, false, offset);\n    }\n    /**\n     * Reads a null-terminated Buffer from the current read poisiton.\n     *\n     * @return { Buffer }\n     */\n    readBufferNT() {\n        // Set null character position to the end SmartBuffer instance.\n        let nullPos = this.length;\n        // Find next null character (if one is not found, default from above is used)\n        for (let i = this._readOffset; i < this.length; i++) {\n            if (this._buff[i] === 0x00) {\n                nullPos = i;\n                break;\n            }\n        }\n        // Read value\n        const value = this._buff.slice(this._readOffset, nullPos);\n        // Increment internal Buffer read offset\n        this._readOffset = nullPos + 1;\n        return value;\n    }\n    /**\n     * Inserts a null-terminated Buffer.\n     *\n     * @param value { Buffer } The Buffer to write.\n     * @param offset { Number } The offset to write the Buffer to.\n     *\n     * @return this\n     */\n    insertBufferNT(value, offset) {\n        utils_1.checkOffsetValue(offset);\n        // Write Values\n        this.insertBuffer(value, offset);\n        this.insertUInt8(0x00, offset + value.length);\n        return this;\n    }\n    /**\n     * Writes a null-terminated Buffer.\n     *\n     * @param value { Buffer } The Buffer to write.\n     * @param offset { Number } The offset to write the Buffer to.\n     *\n     * @return this\n     */\n    writeBufferNT(value, offset) {\n        // Checks for valid numberic value;\n        if (typeof offset !== 'undefined') {\n            utils_1.checkOffsetValue(offset);\n        }\n        // Write Values\n        this.writeBuffer(value, offset);\n        this.writeUInt8(0x00, typeof offset === 'number' ? offset + value.length : this._writeOffset);\n        return this;\n    }\n    /**\n     * Clears the SmartBuffer instance to its original empty state.\n     */\n    clear() {\n        this._writeOffset = 0;\n        this._readOffset = 0;\n        this.length = 0;\n        return this;\n    }\n    /**\n     * Gets the remaining data left to be read from the SmartBuffer instance.\n     *\n     * @return { Number }\n     */\n    remaining() {\n        return this.length - this._readOffset;\n    }\n    /**\n     * Gets the current read offset value of the SmartBuffer instance.\n     *\n     * @return { Number }\n     */\n    get readOffset() {\n        return this._readOffset;\n    }\n    /**\n     * Sets the read offset value of the SmartBuffer instance.\n     *\n     * @param offset { Number } - The offset value to set.\n     */\n    set readOffset(offset) {\n        utils_1.checkOffsetValue(offset);\n        // Check for bounds.\n        utils_1.checkTargetOffset(offset, this);\n        this._readOffset = offset;\n    }\n    /**\n     * Gets the current write offset value of the SmartBuffer instance.\n     *\n     * @return { Number }\n     */\n    get writeOffset() {\n        return this._writeOffset;\n    }\n    /**\n     * Sets the write offset value of the SmartBuffer instance.\n     *\n     * @param offset { Number } - The offset value to set.\n     */\n    set writeOffset(offset) {\n        utils_1.checkOffsetValue(offset);\n        // Check for bounds.\n        utils_1.checkTargetOffset(offset, this);\n        this._writeOffset = offset;\n    }\n    /**\n     * Gets the currently set string encoding of the SmartBuffer instance.\n     *\n     * @return { BufferEncoding } The string Buffer encoding currently set.\n     */\n    get encoding() {\n        return this._encoding;\n    }\n    /**\n     * Sets the string encoding of the SmartBuffer instance.\n     *\n     * @param encoding { BufferEncoding } The string Buffer encoding to set.\n     */\n    set encoding(encoding) {\n        utils_1.checkEncoding(encoding);\n        this._encoding = encoding;\n    }\n    /**\n     * Gets the underlying internal Buffer. (This includes unmanaged data in the Buffer)\n     *\n     * @return { Buffer } The Buffer value.\n     */\n    get internalBuffer() {\n        return this._buff;\n    }\n    /**\n     * Gets the value of the internal managed Buffer (Includes managed data only)\n     *\n     * @param { Buffer }\n     */\n    toBuffer() {\n        return this._buff.slice(0, this.length);\n    }\n    /**\n     * Gets the String value of the internal managed Buffer\n     *\n     * @param encoding { String } The BufferEncoding to display the Buffer as (defaults to instance level encoding).\n     */\n    toString(encoding) {\n        const encodingVal = typeof encoding === 'string' ? encoding : this._encoding;\n        // Check for invalid encoding.\n        utils_1.checkEncoding(encodingVal);\n        return this._buff.toString(encodingVal, 0, this.length);\n    }\n    /**\n     * Destroys the SmartBuffer instance.\n     */\n    destroy() {\n        this.clear();\n        return this;\n    }\n    /**\n     * Handles inserting and writing strings.\n     *\n     * @param value { String } The String value to insert.\n     * @param isInsert { Boolean } True if inserting a string, false if writing.\n     * @param arg2 { Number | String } The offset to insert the string at, or the BufferEncoding to use.\n     * @param encoding { String } The BufferEncoding to use for writing strings (defaults to instance encoding).\n     */\n    _handleString(value, isInsert, arg3, encoding) {\n        let offsetVal = this._writeOffset;\n        let encodingVal = this._encoding;\n        // Check for offset\n        if (typeof arg3 === 'number') {\n            offsetVal = arg3;\n            // Check for encoding\n        }\n        else if (typeof arg3 === 'string') {\n            utils_1.checkEncoding(arg3);\n            encodingVal = arg3;\n        }\n        // Check for encoding (third param)\n        if (typeof encoding === 'string') {\n            utils_1.checkEncoding(encoding);\n            encodingVal = encoding;\n        }\n        // Calculate bytelength of string.\n        const byteLength = Buffer.byteLength(value, encodingVal);\n        // Ensure there is enough internal Buffer capacity.\n        if (isInsert) {\n            this.ensureInsertable(byteLength, offsetVal);\n        }\n        else {\n            this._ensureWriteable(byteLength, offsetVal);\n        }\n        // Write value\n        this._buff.write(value, offsetVal, byteLength, encodingVal);\n        // Increment internal Buffer write offset;\n        if (isInsert) {\n            this._writeOffset += byteLength;\n        }\n        else {\n            // If an offset was given, check to see if we wrote beyond the current writeOffset.\n            if (typeof arg3 === 'number') {\n                this._writeOffset = Math.max(this._writeOffset, offsetVal + byteLength);\n            }\n            else {\n                // If no offset was given, we wrote to the end of the SmartBuffer so increment writeOffset.\n                this._writeOffset += byteLength;\n            }\n        }\n        return this;\n    }\n    /**\n     * Handles writing or insert of a Buffer.\n     *\n     * @param value { Buffer } The Buffer to write.\n     * @param offset { Number } The offset to write the Buffer to.\n     */\n    _handleBuffer(value, isInsert, offset) {\n        const offsetVal = typeof offset === 'number' ? offset : this._writeOffset;\n        // Ensure there is enough internal Buffer capacity.\n        if (isInsert) {\n            this.ensureInsertable(value.length, offsetVal);\n        }\n        else {\n            this._ensureWriteable(value.length, offsetVal);\n        }\n        // Write buffer value\n        value.copy(this._buff, offsetVal);\n        // Increment internal Buffer write offset;\n        if (isInsert) {\n            this._writeOffset += value.length;\n        }\n        else {\n            // If an offset was given, check to see if we wrote beyond the current writeOffset.\n            if (typeof offset === 'number') {\n                this._writeOffset = Math.max(this._writeOffset, offsetVal + value.length);\n            }\n            else {\n                // If no offset was given, we wrote to the end of the SmartBuffer so increment writeOffset.\n                this._writeOffset += value.length;\n            }\n        }\n        return this;\n    }\n    /**\n     * Ensures that the internal Buffer is large enough to read data.\n     *\n     * @param length { Number } The length of the data that needs to be read.\n     * @param offset { Number } The offset of the data that needs to be read.\n     */\n    ensureReadable(length, offset) {\n        // Offset value defaults to managed read offset.\n        let offsetVal = this._readOffset;\n        // If an offset was provided, use it.\n        if (typeof offset !== 'undefined') {\n            // Checks for valid numberic value;\n            utils_1.checkOffsetValue(offset);\n            // Overide with custom offset.\n            offsetVal = offset;\n        }\n        // Checks if offset is below zero, or the offset+length offset is beyond the total length of the managed data.\n        if (offsetVal < 0 || offsetVal + length > this.length) {\n            throw new Error(utils_1.ERRORS.INVALID_READ_BEYOND_BOUNDS);\n        }\n    }\n    /**\n     * Ensures that the internal Buffer is large enough to insert data.\n     *\n     * @param dataLength { Number } The length of the data that needs to be written.\n     * @param offset { Number } The offset of the data to be written.\n     */\n    ensureInsertable(dataLength, offset) {\n        // Checks for valid numberic value;\n        utils_1.checkOffsetValue(offset);\n        // Ensure there is enough internal Buffer capacity.\n        this._ensureCapacity(this.length + dataLength);\n        // If an offset was provided and its not the very end of the buffer, copy data into appropriate location in regards to the offset.\n        if (offset < this.length) {\n            this._buff.copy(this._buff, offset + dataLength, offset, this._buff.length);\n        }\n        // Adjust tracked smart buffer length\n        if (offset + dataLength > this.length) {\n            this.length = offset + dataLength;\n        }\n        else {\n            this.length += dataLength;\n        }\n    }\n    /**\n     * Ensures that the internal Buffer is large enough to write data.\n     *\n     * @param dataLength { Number } The length of the data that needs to be written.\n     * @param offset { Number } The offset of the data to be written (defaults to writeOffset).\n     */\n    _ensureWriteable(dataLength, offset) {\n        const offsetVal = typeof offset === 'number' ? offset : this._writeOffset;\n        // Ensure enough capacity to write data.\n        this._ensureCapacity(offsetVal + dataLength);\n        // Adjust SmartBuffer length (if offset + length is larger than managed length, adjust length)\n        if (offsetVal + dataLength > this.length) {\n            this.length = offsetVal + dataLength;\n        }\n    }\n    /**\n     * Ensures that the internal Buffer is large enough to write at least the given amount of data.\n     *\n     * @param minLength { Number } The minimum length of the data needs to be written.\n     */\n    _ensureCapacity(minLength) {\n        const oldLength = this._buff.length;\n        if (minLength > oldLength) {\n            let data = this._buff;\n            let newLength = (oldLength * 3) / 2 + 1;\n            if (newLength < minLength) {\n                newLength = minLength;\n            }\n            this._buff = Buffer.allocUnsafe(newLength);\n            data.copy(this._buff, 0, 0, oldLength);\n        }\n    }\n    /**\n     * Reads a numeric number value using the provided function.\n     *\n     * @typeparam T { number | bigint } The type of the value to be read\n     *\n     * @param func { Function(offset: number) => number } The function to read data on the internal Buffer with.\n     * @param byteSize { Number } The number of bytes read.\n     * @param offset { Number } The offset to read from (optional). When this is not provided, the managed readOffset is used instead.\n     *\n     * @returns { T } the number value\n     */\n    _readNumberValue(func, byteSize, offset) {\n        this.ensureReadable(byteSize, offset);\n        // Call Buffer.readXXXX();\n        const value = func.call(this._buff, typeof offset === 'number' ? offset : this._readOffset);\n        // Adjust internal read offset if an optional read offset was not provided.\n        if (typeof offset === 'undefined') {\n            this._readOffset += byteSize;\n        }\n        return value;\n    }\n    /**\n     * Inserts a numeric number value based on the given offset and value.\n     *\n     * @typeparam T { number | bigint } The type of the value to be written\n     *\n     * @param func { Function(offset: T, offset?) => number} The function to write data on the internal Buffer with.\n     * @param byteSize { Number } The number of bytes written.\n     * @param value { T } The number value to write.\n     * @param offset { Number } the offset to write the number at (REQUIRED).\n     *\n     * @returns SmartBuffer this buffer\n     */\n    _insertNumberValue(func, byteSize, value, offset) {\n        // Check for invalid offset values.\n        utils_1.checkOffsetValue(offset);\n        // Ensure there is enough internal Buffer capacity. (raw offset is passed)\n        this.ensureInsertable(byteSize, offset);\n        // Call buffer.writeXXXX();\n        func.call(this._buff, value, offset);\n        // Adjusts internally managed write offset.\n        this._writeOffset += byteSize;\n        return this;\n    }\n    /**\n     * Writes a numeric number value based on the given offset and value.\n     *\n     * @typeparam T { number | bigint } The type of the value to be written\n     *\n     * @param func { Function(offset: T, offset?) => number} The function to write data on the internal Buffer with.\n     * @param byteSize { Number } The number of bytes written.\n     * @param value { T } The number value to write.\n     * @param offset { Number } the offset to write the number at (REQUIRED).\n     *\n     * @returns SmartBuffer this buffer\n     */\n    _writeNumberValue(func, byteSize, value, offset) {\n        // If an offset was provided, validate it.\n        if (typeof offset === 'number') {\n            // Check if we're writing beyond the bounds of the managed data.\n            if (offset < 0) {\n                throw new Error(utils_1.ERRORS.INVALID_WRITE_BEYOND_BOUNDS);\n            }\n            utils_1.checkOffsetValue(offset);\n        }\n        // Default to writeOffset if no offset value was given.\n        const offsetVal = typeof offset === 'number' ? offset : this._writeOffset;\n        // Ensure there is enough internal Buffer capacity. (raw offset is passed)\n        this._ensureWriteable(byteSize, offsetVal);\n        func.call(this._buff, value, offsetVal);\n        // If an offset was given, check to see if we wrote beyond the current writeOffset.\n        if (typeof offset === 'number') {\n            this._writeOffset = Math.max(this._writeOffset, offsetVal + byteSize);\n        }\n        else {\n            // If no numeric offset was given, we wrote to the end of the SmartBuffer so increment writeOffset.\n            this._writeOffset += byteSize;\n        }\n        return this;\n    }\n}\nexports.SmartBuffer = SmartBuffer;\n//# sourceMappingURL=smartbuffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"buffer\");\n/**\n * Error strings\n */\nconst ERRORS = {\n    INVALID_ENCODING: 'Invalid encoding provided. Please specify a valid encoding the internal Node.js Buffer supports.',\n    INVALID_SMARTBUFFER_SIZE: 'Invalid size provided. Size must be a valid integer greater than zero.',\n    INVALID_SMARTBUFFER_BUFFER: 'Invalid Buffer provided in SmartBufferOptions.',\n    INVALID_SMARTBUFFER_OBJECT: 'Invalid SmartBufferOptions object supplied to SmartBuffer constructor or factory methods.',\n    INVALID_OFFSET: 'An invalid offset value was provided.',\n    INVALID_OFFSET_NON_NUMBER: 'An invalid offset value was provided. A numeric value is required.',\n    INVALID_LENGTH: 'An invalid length value was provided.',\n    INVALID_LENGTH_NON_NUMBER: 'An invalid length value was provived. A numeric value is required.',\n    INVALID_TARGET_OFFSET: 'Target offset is beyond the bounds of the internal SmartBuffer data.',\n    INVALID_TARGET_LENGTH: 'Specified length value moves cursor beyong the bounds of the internal SmartBuffer data.',\n    INVALID_READ_BEYOND_BOUNDS: 'Attempted to read beyond the bounds of the managed data.',\n    INVALID_WRITE_BEYOND_BOUNDS: 'Attempted to write beyond the bounds of the managed data.'\n};\nexports.ERRORS = ERRORS;\n/**\n * Checks if a given encoding is a valid Buffer encoding. (Throws an exception if check fails)\n *\n * @param { String } encoding The encoding string to check.\n */\nfunction checkEncoding(encoding) {\n    if (!buffer_1.Buffer.isEncoding(encoding)) {\n        throw new Error(ERRORS.INVALID_ENCODING);\n    }\n}\nexports.checkEncoding = checkEncoding;\n/**\n * Checks if a given number is a finite integer. (Throws an exception if check fails)\n *\n * @param { Number } value The number value to check.\n */\nfunction isFiniteInteger(value) {\n    return typeof value === 'number' && isFinite(value) && isInteger(value);\n}\nexports.isFiniteInteger = isFiniteInteger;\n/**\n * Checks if an offset/length value is valid. (Throws an exception if check fails)\n *\n * @param value The value to check.\n * @param offset True if checking an offset, false if checking a length.\n */\nfunction checkOffsetOrLengthValue(value, offset) {\n    if (typeof value === 'number') {\n        // Check for non finite/non integers\n        if (!isFiniteInteger(value) || value < 0) {\n            throw new Error(offset ? ERRORS.INVALID_OFFSET : ERRORS.INVALID_LENGTH);\n        }\n    }\n    else {\n        throw new Error(offset ? ERRORS.INVALID_OFFSET_NON_NUMBER : ERRORS.INVALID_LENGTH_NON_NUMBER);\n    }\n}\n/**\n * Checks if a length value is valid. (Throws an exception if check fails)\n *\n * @param { Number } length The value to check.\n */\nfunction checkLengthValue(length) {\n    checkOffsetOrLengthValue(length, false);\n}\nexports.checkLengthValue = checkLengthValue;\n/**\n * Checks if a offset value is valid. (Throws an exception if check fails)\n *\n * @param { Number } offset The value to check.\n */\nfunction checkOffsetValue(offset) {\n    checkOffsetOrLengthValue(offset, true);\n}\nexports.checkOffsetValue = checkOffsetValue;\n/**\n * Checks if a target offset value is out of bounds. (Throws an exception if check fails)\n *\n * @param { Number } offset The offset value to check.\n * @param { SmartBuffer } buff The SmartBuffer instance to check against.\n */\nfunction checkTargetOffset(offset, buff) {\n    if (offset < 0 || offset > buff.length) {\n        throw new Error(ERRORS.INVALID_TARGET_OFFSET);\n    }\n}\nexports.checkTargetOffset = checkTargetOffset;\n/**\n * Determines whether a given number is a integer.\n * @param value The number to check.\n */\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n/**\n * Throws if Node.js version is too low to support bigint\n */\nfunction bigIntAndBufferInt64Check(bufferMethod) {\n    if (typeof BigInt === 'undefined') {\n        throw new Error('Platform does not support JS BigInt type.');\n    }\n    if (typeof buffer_1.Buffer.prototype[bufferMethod] === 'undefined') {\n        throw new Error(`Platform does not support Buffer.prototype.${bufferMethod}.`);\n    }\n}\nexports.bigIntAndBufferInt64Check = bigIntAndBufferInt64Check;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SocksClientError = exports.SocksClient = void 0;\nconst events_1 = require(\"events\");\nconst net = require(\"net\");\nconst ip = require(\"ip\");\nconst smart_buffer_1 = require(\"smart-buffer\");\nconst constants_1 = require(\"../common/constants\");\nconst helpers_1 = require(\"../common/helpers\");\nconst receivebuffer_1 = require(\"../common/receivebuffer\");\nconst util_1 = require(\"../common/util\");\nObject.defineProperty(exports, \"SocksClientError\", { enumerable: true, get: function () { return util_1.SocksClientError; } });\nclass SocksClient extends events_1.EventEmitter {\n    constructor(options) {\n        super();\n        this.options = Object.assign({}, options);\n        // Validate SocksClientOptions\n        (0, helpers_1.validateSocksClientOptions)(options);\n        // Default state\n        this.setState(constants_1.SocksClientState.Created);\n    }\n    /**\n     * Creates a new SOCKS connection.\n     *\n     * Note: Supports callbacks and promises. Only supports the connect command.\n     * @param options { SocksClientOptions } Options.\n     * @param callback { Function } An optional callback function.\n     * @returns { Promise }\n     */\n    static createConnection(options, callback) {\n        return new Promise((resolve, reject) => {\n            // Validate SocksClientOptions\n            try {\n                (0, helpers_1.validateSocksClientOptions)(options, ['connect']);\n            }\n            catch (err) {\n                if (typeof callback === 'function') {\n                    callback(err);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    return resolve(err); // Resolves pending promise (prevents memory leaks).\n                }\n                else {\n                    return reject(err);\n                }\n            }\n            const client = new SocksClient(options);\n            client.connect(options.existing_socket);\n            client.once('established', (info) => {\n                client.removeAllListeners();\n                if (typeof callback === 'function') {\n                    callback(null, info);\n                    resolve(info); // Resolves pending promise (prevents memory leaks).\n                }\n                else {\n                    resolve(info);\n                }\n            });\n            // Error occurred, failed to establish connection.\n            client.once('error', (err) => {\n                client.removeAllListeners();\n                if (typeof callback === 'function') {\n                    callback(err);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    resolve(err); // Resolves pending promise (prevents memory leaks).\n                }\n                else {\n                    reject(err);\n                }\n            });\n        });\n    }\n    /**\n     * Creates a new SOCKS connection chain to a destination host through 2 or more SOCKS proxies.\n     *\n     * Note: Supports callbacks and promises. Only supports the connect method.\n     * Note: Implemented via createConnection() factory function.\n     * @param options { SocksClientChainOptions } Options\n     * @param callback { Function } An optional callback function.\n     * @returns { Promise }\n     */\n    static createConnectionChain(options, callback) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            // Validate SocksClientChainOptions\n            try {\n                (0, helpers_1.validateSocksClientChainOptions)(options);\n            }\n            catch (err) {\n                if (typeof callback === 'function') {\n                    callback(err);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    return resolve(err); // Resolves pending promise (prevents memory leaks).\n                }\n                else {\n                    return reject(err);\n                }\n            }\n            // Shuffle proxies\n            if (options.randomizeChain) {\n                (0, util_1.shuffleArray)(options.proxies);\n            }\n            try {\n                let sock;\n                for (let i = 0; i < options.proxies.length; i++) {\n                    const nextProxy = options.proxies[i];\n                    // If we've reached the last proxy in the chain, the destination is the actual destination, otherwise it's the next proxy.\n                    const nextDestination = i === options.proxies.length - 1\n                        ? options.destination\n                        : {\n                            host: options.proxies[i + 1].host ||\n                                options.proxies[i + 1].ipaddress,\n                            port: options.proxies[i + 1].port,\n                        };\n                    // Creates the next connection in the chain.\n                    const result = yield SocksClient.createConnection({\n                        command: 'connect',\n                        proxy: nextProxy,\n                        destination: nextDestination,\n                        existing_socket: sock,\n                    });\n                    // If sock is undefined, assign it here.\n                    sock = sock || result.socket;\n                }\n                if (typeof callback === 'function') {\n                    callback(null, { socket: sock });\n                    resolve({ socket: sock }); // Resolves pending promise (prevents memory leaks).\n                }\n                else {\n                    resolve({ socket: sock });\n                }\n            }\n            catch (err) {\n                if (typeof callback === 'function') {\n                    callback(err);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    resolve(err); // Resolves pending promise (prevents memory leaks).\n                }\n                else {\n                    reject(err);\n                }\n            }\n        }));\n    }\n    /**\n     * Creates a SOCKS UDP Frame.\n     * @param options\n     */\n    static createUDPFrame(options) {\n        const buff = new smart_buffer_1.SmartBuffer();\n        buff.writeUInt16BE(0);\n        buff.writeUInt8(options.frameNumber || 0);\n        // IPv4/IPv6/Hostname\n        if (net.isIPv4(options.remoteHost.host)) {\n            buff.writeUInt8(constants_1.Socks5HostType.IPv4);\n            buff.writeUInt32BE(ip.toLong(options.remoteHost.host));\n        }\n        else if (net.isIPv6(options.remoteHost.host)) {\n            buff.writeUInt8(constants_1.Socks5HostType.IPv6);\n            buff.writeBuffer(ip.toBuffer(options.remoteHost.host));\n        }\n        else {\n            buff.writeUInt8(constants_1.Socks5HostType.Hostname);\n            buff.writeUInt8(Buffer.byteLength(options.remoteHost.host));\n            buff.writeString(options.remoteHost.host);\n        }\n        // Port\n        buff.writeUInt16BE(options.remoteHost.port);\n        // Data\n        buff.writeBuffer(options.data);\n        return buff.toBuffer();\n    }\n    /**\n     * Parses a SOCKS UDP frame.\n     * @param data\n     */\n    static parseUDPFrame(data) {\n        const buff = smart_buffer_1.SmartBuffer.fromBuffer(data);\n        buff.readOffset = 2;\n        const frameNumber = buff.readUInt8();\n        const hostType = buff.readUInt8();\n        let remoteHost;\n        if (hostType === constants_1.Socks5HostType.IPv4) {\n            remoteHost = ip.fromLong(buff.readUInt32BE());\n        }\n        else if (hostType === constants_1.Socks5HostType.IPv6) {\n            remoteHost = ip.toString(buff.readBuffer(16));\n        }\n        else {\n            remoteHost = buff.readString(buff.readUInt8());\n        }\n        const remotePort = buff.readUInt16BE();\n        return {\n            frameNumber,\n            remoteHost: {\n                host: remoteHost,\n                port: remotePort,\n            },\n            data: buff.readBuffer(),\n        };\n    }\n    /**\n     * Internal state setter. If the SocksClient is in an error state, it cannot be changed to a non error state.\n     */\n    setState(newState) {\n        if (this.state !== constants_1.SocksClientState.Error) {\n            this.state = newState;\n        }\n    }\n    /**\n     * Starts the connection establishment to the proxy and destination.\n     * @param existingSocket Connected socket to use instead of creating a new one (internal use).\n     */\n    connect(existingSocket) {\n        this.onDataReceived = (data) => this.onDataReceivedHandler(data);\n        this.onClose = () => this.onCloseHandler();\n        this.onError = (err) => this.onErrorHandler(err);\n        this.onConnect = () => this.onConnectHandler();\n        // Start timeout timer (defaults to 30 seconds)\n        const timer = setTimeout(() => this.onEstablishedTimeout(), this.options.timeout || constants_1.DEFAULT_TIMEOUT);\n        // check whether unref is available as it differs from browser to NodeJS (#33)\n        if (timer.unref && typeof timer.unref === 'function') {\n            timer.unref();\n        }\n        // If an existing socket is provided, use it to negotiate SOCKS handshake. Otherwise create a new Socket.\n        if (existingSocket) {\n            this.socket = existingSocket;\n        }\n        else {\n            this.socket = new net.Socket();\n        }\n        // Attach Socket error handlers.\n        this.socket.once('close', this.onClose);\n        this.socket.once('error', this.onError);\n        this.socket.once('connect', this.onConnect);\n        this.socket.on('data', this.onDataReceived);\n        this.setState(constants_1.SocksClientState.Connecting);\n        this.receiveBuffer = new receivebuffer_1.ReceiveBuffer();\n        if (existingSocket) {\n            this.socket.emit('connect');\n        }\n        else {\n            this.socket.connect(this.getSocketOptions());\n            if (this.options.set_tcp_nodelay !== undefined &&\n                this.options.set_tcp_nodelay !== null) {\n                this.socket.setNoDelay(!!this.options.set_tcp_nodelay);\n            }\n        }\n        // Listen for established event so we can re-emit any excess data received during handshakes.\n        this.prependOnceListener('established', (info) => {\n            setImmediate(() => {\n                if (this.receiveBuffer.length > 0) {\n                    const excessData = this.receiveBuffer.get(this.receiveBuffer.length);\n                    info.socket.emit('data', excessData);\n                }\n                info.socket.resume();\n            });\n        });\n    }\n    // Socket options (defaults host/port to options.proxy.host/options.proxy.port)\n    getSocketOptions() {\n        return Object.assign(Object.assign({}, this.options.socket_options), { host: this.options.proxy.host || this.options.proxy.ipaddress, port: this.options.proxy.port });\n    }\n    /**\n     * Handles internal Socks timeout callback.\n     * Note: If the Socks client is not BoundWaitingForConnection or Established, the connection will be closed.\n     */\n    onEstablishedTimeout() {\n        if (this.state !== constants_1.SocksClientState.Established &&\n            this.state !== constants_1.SocksClientState.BoundWaitingForConnection) {\n            this.closeSocket(constants_1.ERRORS.ProxyConnectionTimedOut);\n        }\n    }\n    /**\n     * Handles Socket connect event.\n     */\n    onConnectHandler() {\n        this.setState(constants_1.SocksClientState.Connected);\n        // Send initial handshake.\n        if (this.options.proxy.type === 4) {\n            this.sendSocks4InitialHandshake();\n        }\n        else {\n            this.sendSocks5InitialHandshake();\n        }\n        this.setState(constants_1.SocksClientState.SentInitialHandshake);\n    }\n    /**\n     * Handles Socket data event.\n     * @param data\n     */\n    onDataReceivedHandler(data) {\n        /*\n          All received data is appended to a ReceiveBuffer.\n          This makes sure that all the data we need is received before we attempt to process it.\n        */\n        this.receiveBuffer.append(data);\n        // Process data that we have.\n        this.processData();\n    }\n    /**\n     * Handles processing of the data we have received.\n     */\n    processData() {\n        // If we have enough data to process the next step in the SOCKS handshake, proceed.\n        while (this.state !== constants_1.SocksClientState.Established &&\n            this.state !== constants_1.SocksClientState.Error &&\n            this.receiveBuffer.length >= this.nextRequiredPacketBufferSize) {\n            // Sent initial handshake, waiting for response.\n            if (this.state === constants_1.SocksClientState.SentInitialHandshake) {\n                if (this.options.proxy.type === 4) {\n                    // Socks v4 only has one handshake response.\n                    this.handleSocks4FinalHandshakeResponse();\n                }\n                else {\n                    // Socks v5 has two handshakes, handle initial one here.\n                    this.handleInitialSocks5HandshakeResponse();\n                }\n                // Sent auth request for Socks v5, waiting for response.\n            }\n            else if (this.state === constants_1.SocksClientState.SentAuthentication) {\n                this.handleInitialSocks5AuthenticationHandshakeResponse();\n                // Sent final Socks v5 handshake, waiting for final response.\n            }\n            else if (this.state === constants_1.SocksClientState.SentFinalHandshake) {\n                this.handleSocks5FinalHandshakeResponse();\n                // Socks BIND established. Waiting for remote connection via proxy.\n            }\n            else if (this.state === constants_1.SocksClientState.BoundWaitingForConnection) {\n                if (this.options.proxy.type === 4) {\n                    this.handleSocks4IncomingConnectionResponse();\n                }\n                else {\n                    this.handleSocks5IncomingConnectionResponse();\n                }\n            }\n            else {\n                this.closeSocket(constants_1.ERRORS.InternalError);\n                break;\n            }\n        }\n    }\n    /**\n     * Handles Socket close event.\n     * @param had_error\n     */\n    onCloseHandler() {\n        this.closeSocket(constants_1.ERRORS.SocketClosed);\n    }\n    /**\n     * Handles Socket error event.\n     * @param err\n     */\n    onErrorHandler(err) {\n        this.closeSocket(err.message);\n    }\n    /**\n     * Removes internal event listeners on the underlying Socket.\n     */\n    removeInternalSocketHandlers() {\n        // Pauses data flow of the socket (this is internally resumed after 'established' is emitted)\n        this.socket.pause();\n        this.socket.removeListener('data', this.onDataReceived);\n        this.socket.removeListener('close', this.onClose);\n        this.socket.removeListener('error', this.onError);\n        this.socket.removeListener('connect', this.onConnect);\n    }\n    /**\n     * Closes and destroys the underlying Socket. Emits an error event.\n     * @param err { String } An error string to include in error event.\n     */\n    closeSocket(err) {\n        // Make sure only one 'error' event is fired for the lifetime of this SocksClient instance.\n        if (this.state !== constants_1.SocksClientState.Error) {\n            // Set internal state to Error.\n            this.setState(constants_1.SocksClientState.Error);\n            // Destroy Socket\n            this.socket.destroy();\n            // Remove internal listeners\n            this.removeInternalSocketHandlers();\n            // Fire 'error' event.\n            this.emit('error', new util_1.SocksClientError(err, this.options));\n        }\n    }\n    /**\n     * Sends initial Socks v4 handshake request.\n     */\n    sendSocks4InitialHandshake() {\n        const userId = this.options.proxy.userId || '';\n        const buff = new smart_buffer_1.SmartBuffer();\n        buff.writeUInt8(0x04);\n        buff.writeUInt8(constants_1.SocksCommand[this.options.command]);\n        buff.writeUInt16BE(this.options.destination.port);\n        // Socks 4 (IPv4)\n        if (net.isIPv4(this.options.destination.host)) {\n            buff.writeBuffer(ip.toBuffer(this.options.destination.host));\n            buff.writeStringNT(userId);\n            // Socks 4a (hostname)\n        }\n        else {\n            buff.writeUInt8(0x00);\n            buff.writeUInt8(0x00);\n            buff.writeUInt8(0x00);\n            buff.writeUInt8(0x01);\n            buff.writeStringNT(userId);\n            buff.writeStringNT(this.options.destination.host);\n        }\n        this.nextRequiredPacketBufferSize =\n            constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks4Response;\n        this.socket.write(buff.toBuffer());\n    }\n    /**\n     * Handles Socks v4 handshake response.\n     * @param data\n     */\n    handleSocks4FinalHandshakeResponse() {\n        const data = this.receiveBuffer.get(8);\n        if (data[1] !== constants_1.Socks4Response.Granted) {\n            this.closeSocket(`${constants_1.ERRORS.Socks4ProxyRejectedConnection} - (${constants_1.Socks4Response[data[1]]})`);\n        }\n        else {\n            // Bind response\n            if (constants_1.SocksCommand[this.options.command] === constants_1.SocksCommand.bind) {\n                const buff = smart_buffer_1.SmartBuffer.fromBuffer(data);\n                buff.readOffset = 2;\n                const remoteHost = {\n                    port: buff.readUInt16BE(),\n                    host: ip.fromLong(buff.readUInt32BE()),\n                };\n                // If host is 0.0.0.0, set to proxy host.\n                if (remoteHost.host === '0.0.0.0') {\n                    remoteHost.host = this.options.proxy.ipaddress;\n                }\n                this.setState(constants_1.SocksClientState.BoundWaitingForConnection);\n                this.emit('bound', { remoteHost, socket: this.socket });\n                // Connect response\n            }\n            else {\n                this.setState(constants_1.SocksClientState.Established);\n                this.removeInternalSocketHandlers();\n                this.emit('established', { socket: this.socket });\n            }\n        }\n    }\n    /**\n     * Handles Socks v4 incoming connection request (BIND)\n     * @param data\n     */\n    handleSocks4IncomingConnectionResponse() {\n        const data = this.receiveBuffer.get(8);\n        if (data[1] !== constants_1.Socks4Response.Granted) {\n            this.closeSocket(`${constants_1.ERRORS.Socks4ProxyRejectedIncomingBoundConnection} - (${constants_1.Socks4Response[data[1]]})`);\n        }\n        else {\n            const buff = smart_buffer_1.SmartBuffer.fromBuffer(data);\n            buff.readOffset = 2;\n            const remoteHost = {\n                port: buff.readUInt16BE(),\n                host: ip.fromLong(buff.readUInt32BE()),\n            };\n            this.setState(constants_1.SocksClientState.Established);\n            this.removeInternalSocketHandlers();\n            this.emit('established', { remoteHost, socket: this.socket });\n        }\n    }\n    /**\n     * Sends initial Socks v5 handshake request.\n     */\n    sendSocks5InitialHandshake() {\n        const buff = new smart_buffer_1.SmartBuffer();\n        // By default we always support no auth.\n        const supportedAuthMethods = [constants_1.Socks5Auth.NoAuth];\n        // We should only tell the proxy we support user/pass auth if auth info is actually provided.\n        // Note: As of Tor v0.3.5.7+, if user/pass auth is an option from the client, by default it will always take priority.\n        if (this.options.proxy.userId || this.options.proxy.password) {\n            supportedAuthMethods.push(constants_1.Socks5Auth.UserPass);\n        }\n        // Custom auth method?\n        if (this.options.proxy.custom_auth_method !== undefined) {\n            supportedAuthMethods.push(this.options.proxy.custom_auth_method);\n        }\n        // Build handshake packet\n        buff.writeUInt8(0x05);\n        buff.writeUInt8(supportedAuthMethods.length);\n        for (const authMethod of supportedAuthMethods) {\n            buff.writeUInt8(authMethod);\n        }\n        this.nextRequiredPacketBufferSize =\n            constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks5InitialHandshakeResponse;\n        this.socket.write(buff.toBuffer());\n        this.setState(constants_1.SocksClientState.SentInitialHandshake);\n    }\n    /**\n     * Handles initial Socks v5 handshake response.\n     * @param data\n     */\n    handleInitialSocks5HandshakeResponse() {\n        const data = this.receiveBuffer.get(2);\n        if (data[0] !== 0x05) {\n            this.closeSocket(constants_1.ERRORS.InvalidSocks5IntiailHandshakeSocksVersion);\n        }\n        else if (data[1] === constants_1.SOCKS5_NO_ACCEPTABLE_AUTH) {\n            this.closeSocket(constants_1.ERRORS.InvalidSocks5InitialHandshakeNoAcceptedAuthType);\n        }\n        else {\n            // If selected Socks v5 auth method is no auth, send final handshake request.\n            if (data[1] === constants_1.Socks5Auth.NoAuth) {\n                this.socks5ChosenAuthType = constants_1.Socks5Auth.NoAuth;\n                this.sendSocks5CommandRequest();\n                // If selected Socks v5 auth method is user/password, send auth handshake.\n            }\n            else if (data[1] === constants_1.Socks5Auth.UserPass) {\n                this.socks5ChosenAuthType = constants_1.Socks5Auth.UserPass;\n                this.sendSocks5UserPassAuthentication();\n                // If selected Socks v5 auth method is the custom_auth_method, send custom handshake.\n            }\n            else if (data[1] === this.options.proxy.custom_auth_method) {\n                this.socks5ChosenAuthType = this.options.proxy.custom_auth_method;\n                this.sendSocks5CustomAuthentication();\n            }\n            else {\n                this.closeSocket(constants_1.ERRORS.InvalidSocks5InitialHandshakeUnknownAuthType);\n            }\n        }\n    }\n    /**\n     * Sends Socks v5 user & password auth handshake.\n     *\n     * Note: No auth and user/pass are currently supported.\n     */\n    sendSocks5UserPassAuthentication() {\n        const userId = this.options.proxy.userId || '';\n        const password = this.options.proxy.password || '';\n        const buff = new smart_buffer_1.SmartBuffer();\n        buff.writeUInt8(0x01);\n        buff.writeUInt8(Buffer.byteLength(userId));\n        buff.writeString(userId);\n        buff.writeUInt8(Buffer.byteLength(password));\n        buff.writeString(password);\n        this.nextRequiredPacketBufferSize =\n            constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks5UserPassAuthenticationResponse;\n        this.socket.write(buff.toBuffer());\n        this.setState(constants_1.SocksClientState.SentAuthentication);\n    }\n    sendSocks5CustomAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.nextRequiredPacketBufferSize =\n                this.options.proxy.custom_auth_response_size;\n            this.socket.write(yield this.options.proxy.custom_auth_request_handler());\n            this.setState(constants_1.SocksClientState.SentAuthentication);\n        });\n    }\n    handleSocks5CustomAuthHandshakeResponse(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.options.proxy.custom_auth_response_handler(data);\n        });\n    }\n    handleSocks5AuthenticationNoAuthHandshakeResponse(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return data[1] === 0x00;\n        });\n    }\n    handleSocks5AuthenticationUserPassHandshakeResponse(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return data[1] === 0x00;\n        });\n    }\n    /**\n     * Handles Socks v5 auth handshake response.\n     * @param data\n     */\n    handleInitialSocks5AuthenticationHandshakeResponse() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.setState(constants_1.SocksClientState.ReceivedAuthenticationResponse);\n            let authResult = false;\n            if (this.socks5ChosenAuthType === constants_1.Socks5Auth.NoAuth) {\n                authResult = yield this.handleSocks5AuthenticationNoAuthHandshakeResponse(this.receiveBuffer.get(2));\n            }\n            else if (this.socks5ChosenAuthType === constants_1.Socks5Auth.UserPass) {\n                authResult =\n                    yield this.handleSocks5AuthenticationUserPassHandshakeResponse(this.receiveBuffer.get(2));\n            }\n            else if (this.socks5ChosenAuthType === this.options.proxy.custom_auth_method) {\n                authResult = yield this.handleSocks5CustomAuthHandshakeResponse(this.receiveBuffer.get(this.options.proxy.custom_auth_response_size));\n            }\n            if (!authResult) {\n                this.closeSocket(constants_1.ERRORS.Socks5AuthenticationFailed);\n            }\n            else {\n                this.sendSocks5CommandRequest();\n            }\n        });\n    }\n    /**\n     * Sends Socks v5 final handshake request.\n     */\n    sendSocks5CommandRequest() {\n        const buff = new smart_buffer_1.SmartBuffer();\n        buff.writeUInt8(0x05);\n        buff.writeUInt8(constants_1.SocksCommand[this.options.command]);\n        buff.writeUInt8(0x00);\n        // ipv4, ipv6, domain?\n        if (net.isIPv4(this.options.destination.host)) {\n            buff.writeUInt8(constants_1.Socks5HostType.IPv4);\n            buff.writeBuffer(ip.toBuffer(this.options.destination.host));\n        }\n        else if (net.isIPv6(this.options.destination.host)) {\n            buff.writeUInt8(constants_1.Socks5HostType.IPv6);\n            buff.writeBuffer(ip.toBuffer(this.options.destination.host));\n        }\n        else {\n            buff.writeUInt8(constants_1.Socks5HostType.Hostname);\n            buff.writeUInt8(this.options.destination.host.length);\n            buff.writeString(this.options.destination.host);\n        }\n        buff.writeUInt16BE(this.options.destination.port);\n        this.nextRequiredPacketBufferSize =\n            constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks5ResponseHeader;\n        this.socket.write(buff.toBuffer());\n        this.setState(constants_1.SocksClientState.SentFinalHandshake);\n    }\n    /**\n     * Handles Socks v5 final handshake response.\n     * @param data\n     */\n    handleSocks5FinalHandshakeResponse() {\n        // Peek at available data (we need at least 5 bytes to get the hostname length)\n        const header = this.receiveBuffer.peek(5);\n        if (header[0] !== 0x05 || header[1] !== constants_1.Socks5Response.Granted) {\n            this.closeSocket(`${constants_1.ERRORS.InvalidSocks5FinalHandshakeRejected} - ${constants_1.Socks5Response[header[1]]}`);\n        }\n        else {\n            // Read address type\n            const addressType = header[3];\n            let remoteHost;\n            let buff;\n            // IPv4\n            if (addressType === constants_1.Socks5HostType.IPv4) {\n                // Check if data is available.\n                const dataNeeded = constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks5ResponseIPv4;\n                if (this.receiveBuffer.length < dataNeeded) {\n                    this.nextRequiredPacketBufferSize = dataNeeded;\n                    return;\n                }\n                buff = smart_buffer_1.SmartBuffer.fromBuffer(this.receiveBuffer.get(dataNeeded).slice(4));\n                remoteHost = {\n                    host: ip.fromLong(buff.readUInt32BE()),\n                    port: buff.readUInt16BE(),\n                };\n                // If given host is 0.0.0.0, assume remote proxy ip instead.\n                if (remoteHost.host === '0.0.0.0') {\n                    remoteHost.host = this.options.proxy.ipaddress;\n                }\n                // Hostname\n            }\n            else if (addressType === constants_1.Socks5HostType.Hostname) {\n                const hostLength = header[4];\n                const dataNeeded = constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks5ResponseHostname(hostLength); // header + host length + host + port\n                // Check if data is available.\n                if (this.receiveBuffer.length < dataNeeded) {\n                    this.nextRequiredPacketBufferSize = dataNeeded;\n                    return;\n                }\n                buff = smart_buffer_1.SmartBuffer.fromBuffer(this.receiveBuffer.get(dataNeeded).slice(5));\n                remoteHost = {\n                    host: buff.readString(hostLength),\n                    port: buff.readUInt16BE(),\n                };\n                // IPv6\n            }\n            else if (addressType === constants_1.Socks5HostType.IPv6) {\n                // Check if data is available.\n                const dataNeeded = constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks5ResponseIPv6;\n                if (this.receiveBuffer.length < dataNeeded) {\n                    this.nextRequiredPacketBufferSize = dataNeeded;\n                    return;\n                }\n                buff = smart_buffer_1.SmartBuffer.fromBuffer(this.receiveBuffer.get(dataNeeded).slice(4));\n                remoteHost = {\n                    host: ip.toString(buff.readBuffer(16)),\n                    port: buff.readUInt16BE(),\n                };\n            }\n            // We have everything we need\n            this.setState(constants_1.SocksClientState.ReceivedFinalResponse);\n            // If using CONNECT, the client is now in the established state.\n            if (constants_1.SocksCommand[this.options.command] === constants_1.SocksCommand.connect) {\n                this.setState(constants_1.SocksClientState.Established);\n                this.removeInternalSocketHandlers();\n                this.emit('established', { remoteHost, socket: this.socket });\n            }\n            else if (constants_1.SocksCommand[this.options.command] === constants_1.SocksCommand.bind) {\n                /* If using BIND, the Socks client is now in BoundWaitingForConnection state.\n                   This means that the remote proxy server is waiting for a remote connection to the bound port. */\n                this.setState(constants_1.SocksClientState.BoundWaitingForConnection);\n                this.nextRequiredPacketBufferSize =\n                    constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks5ResponseHeader;\n                this.emit('bound', { remoteHost, socket: this.socket });\n                /*\n                  If using Associate, the Socks client is now Established. And the proxy server is now accepting UDP packets at the\n                  given bound port. This initial Socks TCP connection must remain open for the UDP relay to continue to work.\n                */\n            }\n            else if (constants_1.SocksCommand[this.options.command] === constants_1.SocksCommand.associate) {\n                this.setState(constants_1.SocksClientState.Established);\n                this.removeInternalSocketHandlers();\n                this.emit('established', {\n                    remoteHost,\n                    socket: this.socket,\n                });\n            }\n        }\n    }\n    /**\n     * Handles Socks v5 incoming connection request (BIND).\n     */\n    handleSocks5IncomingConnectionResponse() {\n        // Peek at available data (we need at least 5 bytes to get the hostname length)\n        const header = this.receiveBuffer.peek(5);\n        if (header[0] !== 0x05 || header[1] !== constants_1.Socks5Response.Granted) {\n            this.closeSocket(`${constants_1.ERRORS.Socks5ProxyRejectedIncomingBoundConnection} - ${constants_1.Socks5Response[header[1]]}`);\n        }\n        else {\n            // Read address type\n            const addressType = header[3];\n            let remoteHost;\n            let buff;\n            // IPv4\n            if (addressType === constants_1.Socks5HostType.IPv4) {\n                // Check if data is available.\n                const dataNeeded = constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks5ResponseIPv4;\n                if (this.receiveBuffer.length < dataNeeded) {\n                    this.nextRequiredPacketBufferSize = dataNeeded;\n                    return;\n                }\n                buff = smart_buffer_1.SmartBuffer.fromBuffer(this.receiveBuffer.get(dataNeeded).slice(4));\n                remoteHost = {\n                    host: ip.fromLong(buff.readUInt32BE()),\n                    port: buff.readUInt16BE(),\n                };\n                // If given host is 0.0.0.0, assume remote proxy ip instead.\n                if (remoteHost.host === '0.0.0.0') {\n                    remoteHost.host = this.options.proxy.ipaddress;\n                }\n                // Hostname\n            }\n            else if (addressType === constants_1.Socks5HostType.Hostname) {\n                const hostLength = header[4];\n                const dataNeeded = constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks5ResponseHostname(hostLength); // header + host length + port\n                // Check if data is available.\n                if (this.receiveBuffer.length < dataNeeded) {\n                    this.nextRequiredPacketBufferSize = dataNeeded;\n                    return;\n                }\n                buff = smart_buffer_1.SmartBuffer.fromBuffer(this.receiveBuffer.get(dataNeeded).slice(5));\n                remoteHost = {\n                    host: buff.readString(hostLength),\n                    port: buff.readUInt16BE(),\n                };\n                // IPv6\n            }\n            else if (addressType === constants_1.Socks5HostType.IPv6) {\n                // Check if data is available.\n                const dataNeeded = constants_1.SOCKS_INCOMING_PACKET_SIZES.Socks5ResponseIPv6;\n                if (this.receiveBuffer.length < dataNeeded) {\n                    this.nextRequiredPacketBufferSize = dataNeeded;\n                    return;\n                }\n                buff = smart_buffer_1.SmartBuffer.fromBuffer(this.receiveBuffer.get(dataNeeded).slice(4));\n                remoteHost = {\n                    host: ip.toString(buff.readBuffer(16)),\n                    port: buff.readUInt16BE(),\n                };\n            }\n            this.setState(constants_1.SocksClientState.Established);\n            this.removeInternalSocketHandlers();\n            this.emit('established', { remoteHost, socket: this.socket });\n        }\n    }\n    get socksClientOptions() {\n        return Object.assign({}, this.options);\n    }\n}\nexports.SocksClient = SocksClient;\n//# sourceMappingURL=socksclient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SOCKS5_NO_ACCEPTABLE_AUTH = exports.SOCKS5_CUSTOM_AUTH_END = exports.SOCKS5_CUSTOM_AUTH_START = exports.SOCKS_INCOMING_PACKET_SIZES = exports.SocksClientState = exports.Socks5Response = exports.Socks5HostType = exports.Socks5Auth = exports.Socks4Response = exports.SocksCommand = exports.ERRORS = exports.DEFAULT_TIMEOUT = void 0;\nconst DEFAULT_TIMEOUT = 30000;\nexports.DEFAULT_TIMEOUT = DEFAULT_TIMEOUT;\n// prettier-ignore\nconst ERRORS = {\n    InvalidSocksCommand: 'An invalid SOCKS command was provided. Valid options are connect, bind, and associate.',\n    InvalidSocksCommandForOperation: 'An invalid SOCKS command was provided. Only a subset of commands are supported for this operation.',\n    InvalidSocksCommandChain: 'An invalid SOCKS command was provided. Chaining currently only supports the connect command.',\n    InvalidSocksClientOptionsDestination: 'An invalid destination host was provided.',\n    InvalidSocksClientOptionsExistingSocket: 'An invalid existing socket was provided. This should be an instance of stream.Duplex.',\n    InvalidSocksClientOptionsProxy: 'Invalid SOCKS proxy details were provided.',\n    InvalidSocksClientOptionsTimeout: 'An invalid timeout value was provided. Please enter a value above 0 (in ms).',\n    InvalidSocksClientOptionsProxiesLength: 'At least two socks proxies must be provided for chaining.',\n    InvalidSocksClientOptionsCustomAuthRange: 'Custom auth must be a value between 0x80 and 0xFE.',\n    InvalidSocksClientOptionsCustomAuthOptions: 'When a custom_auth_method is provided, custom_auth_request_handler, custom_auth_response_size, and custom_auth_response_handler must also be provided and valid.',\n    NegotiationError: 'Negotiation error',\n    SocketClosed: 'Socket closed',\n    ProxyConnectionTimedOut: 'Proxy connection timed out',\n    InternalError: 'SocksClient internal error (this should not happen)',\n    InvalidSocks4HandshakeResponse: 'Received invalid Socks4 handshake response',\n    Socks4ProxyRejectedConnection: 'Socks4 Proxy rejected connection',\n    InvalidSocks4IncomingConnectionResponse: 'Socks4 invalid incoming connection response',\n    Socks4ProxyRejectedIncomingBoundConnection: 'Socks4 Proxy rejected incoming bound connection',\n    InvalidSocks5InitialHandshakeResponse: 'Received invalid Socks5 initial handshake response',\n    InvalidSocks5IntiailHandshakeSocksVersion: 'Received invalid Socks5 initial handshake (invalid socks version)',\n    InvalidSocks5InitialHandshakeNoAcceptedAuthType: 'Received invalid Socks5 initial handshake (no accepted authentication type)',\n    InvalidSocks5InitialHandshakeUnknownAuthType: 'Received invalid Socks5 initial handshake (unknown authentication type)',\n    Socks5AuthenticationFailed: 'Socks5 Authentication failed',\n    InvalidSocks5FinalHandshake: 'Received invalid Socks5 final handshake response',\n    InvalidSocks5FinalHandshakeRejected: 'Socks5 proxy rejected connection',\n    InvalidSocks5IncomingConnectionResponse: 'Received invalid Socks5 incoming connection response',\n    Socks5ProxyRejectedIncomingBoundConnection: 'Socks5 Proxy rejected incoming bound connection',\n};\nexports.ERRORS = ERRORS;\nconst SOCKS_INCOMING_PACKET_SIZES = {\n    Socks5InitialHandshakeResponse: 2,\n    Socks5UserPassAuthenticationResponse: 2,\n    // Command response + incoming connection (bind)\n    Socks5ResponseHeader: 5,\n    Socks5ResponseIPv4: 10,\n    Socks5ResponseIPv6: 22,\n    Socks5ResponseHostname: (hostNameLength) => hostNameLength + 7,\n    // Command response + incoming connection (bind)\n    Socks4Response: 8, // 2 header + 2 port + 4 ip\n};\nexports.SOCKS_INCOMING_PACKET_SIZES = SOCKS_INCOMING_PACKET_SIZES;\nvar SocksCommand;\n(function (SocksCommand) {\n    SocksCommand[SocksCommand[\"connect\"] = 1] = \"connect\";\n    SocksCommand[SocksCommand[\"bind\"] = 2] = \"bind\";\n    SocksCommand[SocksCommand[\"associate\"] = 3] = \"associate\";\n})(SocksCommand || (SocksCommand = {}));\nexports.SocksCommand = SocksCommand;\nvar Socks4Response;\n(function (Socks4Response) {\n    Socks4Response[Socks4Response[\"Granted\"] = 90] = \"Granted\";\n    Socks4Response[Socks4Response[\"Failed\"] = 91] = \"Failed\";\n    Socks4Response[Socks4Response[\"Rejected\"] = 92] = \"Rejected\";\n    Socks4Response[Socks4Response[\"RejectedIdent\"] = 93] = \"RejectedIdent\";\n})(Socks4Response || (Socks4Response = {}));\nexports.Socks4Response = Socks4Response;\nvar Socks5Auth;\n(function (Socks5Auth) {\n    Socks5Auth[Socks5Auth[\"NoAuth\"] = 0] = \"NoAuth\";\n    Socks5Auth[Socks5Auth[\"GSSApi\"] = 1] = \"GSSApi\";\n    Socks5Auth[Socks5Auth[\"UserPass\"] = 2] = \"UserPass\";\n})(Socks5Auth || (Socks5Auth = {}));\nexports.Socks5Auth = Socks5Auth;\nconst SOCKS5_CUSTOM_AUTH_START = 0x80;\nexports.SOCKS5_CUSTOM_AUTH_START = SOCKS5_CUSTOM_AUTH_START;\nconst SOCKS5_CUSTOM_AUTH_END = 0xfe;\nexports.SOCKS5_CUSTOM_AUTH_END = SOCKS5_CUSTOM_AUTH_END;\nconst SOCKS5_NO_ACCEPTABLE_AUTH = 0xff;\nexports.SOCKS5_NO_ACCEPTABLE_AUTH = SOCKS5_NO_ACCEPTABLE_AUTH;\nvar Socks5Response;\n(function (Socks5Response) {\n    Socks5Response[Socks5Response[\"Granted\"] = 0] = \"Granted\";\n    Socks5Response[Socks5Response[\"Failure\"] = 1] = \"Failure\";\n    Socks5Response[Socks5Response[\"NotAllowed\"] = 2] = \"NotAllowed\";\n    Socks5Response[Socks5Response[\"NetworkUnreachable\"] = 3] = \"NetworkUnreachable\";\n    Socks5Response[Socks5Response[\"HostUnreachable\"] = 4] = \"HostUnreachable\";\n    Socks5Response[Socks5Response[\"ConnectionRefused\"] = 5] = \"ConnectionRefused\";\n    Socks5Response[Socks5Response[\"TTLExpired\"] = 6] = \"TTLExpired\";\n    Socks5Response[Socks5Response[\"CommandNotSupported\"] = 7] = \"CommandNotSupported\";\n    Socks5Response[Socks5Response[\"AddressNotSupported\"] = 8] = \"AddressNotSupported\";\n})(Socks5Response || (Socks5Response = {}));\nexports.Socks5Response = Socks5Response;\nvar Socks5HostType;\n(function (Socks5HostType) {\n    Socks5HostType[Socks5HostType[\"IPv4\"] = 1] = \"IPv4\";\n    Socks5HostType[Socks5HostType[\"Hostname\"] = 3] = \"Hostname\";\n    Socks5HostType[Socks5HostType[\"IPv6\"] = 4] = \"IPv6\";\n})(Socks5HostType || (Socks5HostType = {}));\nexports.Socks5HostType = Socks5HostType;\nvar SocksClientState;\n(function (SocksClientState) {\n    SocksClientState[SocksClientState[\"Created\"] = 0] = \"Created\";\n    SocksClientState[SocksClientState[\"Connecting\"] = 1] = \"Connecting\";\n    SocksClientState[SocksClientState[\"Connected\"] = 2] = \"Connected\";\n    SocksClientState[SocksClientState[\"SentInitialHandshake\"] = 3] = \"SentInitialHandshake\";\n    SocksClientState[SocksClientState[\"ReceivedInitialHandshakeResponse\"] = 4] = \"ReceivedInitialHandshakeResponse\";\n    SocksClientState[SocksClientState[\"SentAuthentication\"] = 5] = \"SentAuthentication\";\n    SocksClientState[SocksClientState[\"ReceivedAuthenticationResponse\"] = 6] = \"ReceivedAuthenticationResponse\";\n    SocksClientState[SocksClientState[\"SentFinalHandshake\"] = 7] = \"SentFinalHandshake\";\n    SocksClientState[SocksClientState[\"ReceivedFinalResponse\"] = 8] = \"ReceivedFinalResponse\";\n    SocksClientState[SocksClientState[\"BoundWaitingForConnection\"] = 9] = \"BoundWaitingForConnection\";\n    SocksClientState[SocksClientState[\"Established\"] = 10] = \"Established\";\n    SocksClientState[SocksClientState[\"Disconnected\"] = 11] = \"Disconnected\";\n    SocksClientState[SocksClientState[\"Error\"] = 99] = \"Error\";\n})(SocksClientState || (SocksClientState = {}));\nexports.SocksClientState = SocksClientState;\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSocksClientChainOptions = exports.validateSocksClientOptions = void 0;\nconst util_1 = require(\"./util\");\nconst constants_1 = require(\"./constants\");\nconst stream = require(\"stream\");\n/**\n * Validates the provided SocksClientOptions\n * @param options { SocksClientOptions }\n * @param acceptedCommands { string[] } A list of accepted SocksProxy commands.\n */\nfunction validateSocksClientOptions(options, acceptedCommands = ['connect', 'bind', 'associate']) {\n    // Check SOCKs command option.\n    if (!constants_1.SocksCommand[options.command]) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommand, options);\n    }\n    // Check SocksCommand for acceptable command.\n    if (acceptedCommands.indexOf(options.command) === -1) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandForOperation, options);\n    }\n    // Check destination\n    if (!isValidSocksRemoteHost(options.destination)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n    }\n    // Check SOCKS proxy to use\n    if (!isValidSocksProxy(options.proxy)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n    }\n    // Validate custom auth (if set)\n    validateCustomProxyAuth(options.proxy, options);\n    // Check timeout\n    if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n    }\n    // Check existing_socket (if provided)\n    if (options.existing_socket &&\n        !(options.existing_socket instanceof stream.Duplex)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsExistingSocket, options);\n    }\n}\nexports.validateSocksClientOptions = validateSocksClientOptions;\n/**\n * Validates the SocksClientChainOptions\n * @param options { SocksClientChainOptions }\n */\nfunction validateSocksClientChainOptions(options) {\n    // Only connect is supported when chaining.\n    if (options.command !== 'connect') {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandChain, options);\n    }\n    // Check destination\n    if (!isValidSocksRemoteHost(options.destination)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n    }\n    // Validate proxies (length)\n    if (!(options.proxies &&\n        Array.isArray(options.proxies) &&\n        options.proxies.length >= 2)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxiesLength, options);\n    }\n    // Validate proxies\n    options.proxies.forEach((proxy) => {\n        if (!isValidSocksProxy(proxy)) {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n        }\n        // Validate custom auth (if set)\n        validateCustomProxyAuth(proxy, options);\n    });\n    // Check timeout\n    if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n    }\n}\nexports.validateSocksClientChainOptions = validateSocksClientChainOptions;\nfunction validateCustomProxyAuth(proxy, options) {\n    if (proxy.custom_auth_method !== undefined) {\n        // Invalid auth method range\n        if (proxy.custom_auth_method < constants_1.SOCKS5_CUSTOM_AUTH_START ||\n            proxy.custom_auth_method > constants_1.SOCKS5_CUSTOM_AUTH_END) {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthRange, options);\n        }\n        // Missing custom_auth_request_handler\n        if (proxy.custom_auth_request_handler === undefined ||\n            typeof proxy.custom_auth_request_handler !== 'function') {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n        }\n        // Missing custom_auth_response_size\n        if (proxy.custom_auth_response_size === undefined) {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n        }\n        // Missing/invalid custom_auth_response_handler\n        if (proxy.custom_auth_response_handler === undefined ||\n            typeof proxy.custom_auth_response_handler !== 'function') {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n        }\n    }\n}\n/**\n * Validates a SocksRemoteHost\n * @param remoteHost { SocksRemoteHost }\n */\nfunction isValidSocksRemoteHost(remoteHost) {\n    return (remoteHost &&\n        typeof remoteHost.host === 'string' &&\n        typeof remoteHost.port === 'number' &&\n        remoteHost.port >= 0 &&\n        remoteHost.port <= 65535);\n}\n/**\n * Validates a SocksProxy\n * @param proxy { SocksProxy }\n */\nfunction isValidSocksProxy(proxy) {\n    return (proxy &&\n        (typeof proxy.host === 'string' || typeof proxy.ipaddress === 'string') &&\n        typeof proxy.port === 'number' &&\n        proxy.port >= 0 &&\n        proxy.port <= 65535 &&\n        (proxy.type === 4 || proxy.type === 5));\n}\n/**\n * Validates a timeout value.\n * @param value { Number }\n */\nfunction isValidTimeoutValue(value) {\n    return typeof value === 'number' && value > 0;\n}\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReceiveBuffer = void 0;\nclass ReceiveBuffer {\n    constructor(size = 4096) {\n        this.buffer = Buffer.allocUnsafe(size);\n        this.offset = 0;\n        this.originalSize = size;\n    }\n    get length() {\n        return this.offset;\n    }\n    append(data) {\n        if (!Buffer.isBuffer(data)) {\n            throw new Error('Attempted to append a non-buffer instance to ReceiveBuffer.');\n        }\n        if (this.offset + data.length >= this.buffer.length) {\n            const tmp = this.buffer;\n            this.buffer = Buffer.allocUnsafe(Math.max(this.buffer.length + this.originalSize, this.buffer.length + data.length));\n            tmp.copy(this.buffer);\n        }\n        data.copy(this.buffer, this.offset);\n        return (this.offset += data.length);\n    }\n    peek(length) {\n        if (length > this.offset) {\n            throw new Error('Attempted to read beyond the bounds of the managed internal data.');\n        }\n        return this.buffer.slice(0, length);\n    }\n    get(length) {\n        if (length > this.offset) {\n            throw new Error('Attempted to read beyond the bounds of the managed internal data.');\n        }\n        const value = Buffer.allocUnsafe(length);\n        this.buffer.slice(0, length).copy(value);\n        this.buffer.copyWithin(0, length, length + this.offset - length);\n        this.offset -= length;\n        return value;\n    }\n}\nexports.ReceiveBuffer = ReceiveBuffer;\n//# sourceMappingURL=receivebuffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shuffleArray = exports.SocksClientError = void 0;\n/**\n * Error wrapper for SocksClient\n */\nclass SocksClientError extends Error {\n    constructor(message, options) {\n        super(message);\n        this.options = options;\n    }\n}\nexports.SocksClientError = SocksClientError;\n/**\n * Shuffles a given array.\n * @param array The array to shuffle.\n */\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\nexports.shuffleArray = shuffleArray;\n//# sourceMappingURL=util.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./client/socksclient\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nconst punycode = require(\"punycode\");\nconst regexes = require(\"./lib/regexes.js\");\nconst mappingTable = require(\"./lib/mappingTable.json\");\nconst { STATUS_MAPPING } = require(\"./lib/statusMapping.js\");\n\nfunction containsNonASCII(str) {\n  return /[^\\x00-\\x7F]/u.test(str);\n}\n\nfunction findStatus(val, { useSTD3ASCIIRules }) {\n  let start = 0;\n  let end = mappingTable.length - 1;\n\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n\n    const target = mappingTable[mid];\n    const min = Array.isArray(target[0]) ? target[0][0] : target[0];\n    const max = Array.isArray(target[0]) ? target[0][1] : target[0];\n\n    if (min <= val && max >= val) {\n      if (useSTD3ASCIIRules &&\n          (target[1] === STATUS_MAPPING.disallowed_STD3_valid || target[1] === STATUS_MAPPING.disallowed_STD3_mapped)) {\n        return [STATUS_MAPPING.disallowed, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_valid) {\n        return [STATUS_MAPPING.valid, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_mapped) {\n        return [STATUS_MAPPING.mapped, ...target.slice(2)];\n      }\n\n      return target.slice(1);\n    } else if (min > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nfunction mapChars(domainName, { useSTD3ASCIIRules, processingOption }) {\n  let hasError = false;\n  let processed = \"\";\n\n  for (const ch of domainName) {\n    const [status, mapping] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n\n    switch (status) {\n      case STATUS_MAPPING.disallowed:\n        hasError = true;\n        processed += ch;\n        break;\n      case STATUS_MAPPING.ignored:\n        break;\n      case STATUS_MAPPING.mapped:\n        processed += mapping;\n        break;\n      case STATUS_MAPPING.deviation:\n        if (processingOption === \"transitional\") {\n          processed += mapping;\n        } else {\n          processed += ch;\n        }\n        break;\n      case STATUS_MAPPING.valid:\n        processed += ch;\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nfunction validateLabel(label, { checkHyphens, checkBidi, checkJoiners, processingOption, useSTD3ASCIIRules }) {\n  if (label.normalize(\"NFC\") !== label) {\n    return false;\n  }\n\n  const codePoints = Array.from(label);\n\n  if (checkHyphens) {\n    if ((codePoints[2] === \"-\" && codePoints[3] === \"-\") ||\n        (label.startsWith(\"-\") || label.endsWith(\"-\"))) {\n      return false;\n    }\n  }\n\n  if (label.includes(\".\") ||\n      (codePoints.length > 0 && regexes.combiningMarks.test(codePoints[0]))) {\n    return false;\n  }\n\n  for (const ch of codePoints) {\n    const [status] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n    if ((processingOption === \"transitional\" && status !== STATUS_MAPPING.valid) ||\n        (processingOption === \"nontransitional\" &&\n         status !== STATUS_MAPPING.valid && status !== STATUS_MAPPING.deviation)) {\n      return false;\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5892#appendix-A\n  if (checkJoiners) {\n    let last = 0;\n    for (const [i, ch] of codePoints.entries()) {\n      if (ch === \"\\u200C\" || ch === \"\\u200D\") {\n        if (i > 0) {\n          if (regexes.combiningClassVirama.test(codePoints[i - 1])) {\n            continue;\n          }\n          if (ch === \"\\u200C\") {\n            // TODO: make this more efficient\n            const next = codePoints.indexOf(\"\\u200C\", i + 1);\n            const test = next < 0 ? codePoints.slice(last) : codePoints.slice(last, next);\n            if (regexes.validZWNJ.test(test.join(\"\"))) {\n              last = i + 1;\n              continue;\n            }\n          }\n        }\n        return false;\n      }\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5893#section-2\n  if (checkBidi) {\n    let rtl;\n\n    // 1\n    if (regexes.bidiS1LTR.test(codePoints[0])) {\n      rtl = false;\n    } else if (regexes.bidiS1RTL.test(codePoints[0])) {\n      rtl = true;\n    } else {\n      return false;\n    }\n\n    if (rtl) {\n      // 2-4\n      if (!regexes.bidiS2.test(label) ||\n          !regexes.bidiS3.test(label) ||\n          (regexes.bidiS4EN.test(label) && regexes.bidiS4AN.test(label))) {\n        return false;\n      }\n    } else if (!regexes.bidiS5.test(label) ||\n               !regexes.bidiS6.test(label)) { // 5-6\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isBidiDomain(labels) {\n  const domain = labels.map(label => {\n    if (label.startsWith(\"xn--\")) {\n      try {\n        return punycode.decode(label.substring(4));\n      } catch (err) {\n        return \"\";\n      }\n    }\n    return label;\n  }).join(\".\");\n  return regexes.bidiDomain.test(domain);\n}\n\nfunction processing(domainName, options) {\n  const { processingOption } = options;\n\n  // 1. Map.\n  let { string, error } = mapChars(domainName, options);\n\n  // 2. Normalize.\n  string = string.normalize(\"NFC\");\n\n  // 3. Break.\n  const labels = string.split(\".\");\n  const isBidi = isBidiDomain(labels);\n\n  // 4. Convert/Validate.\n  for (const [i, origLabel] of labels.entries()) {\n    let label = origLabel;\n    let curProcessing = processingOption;\n    if (label.startsWith(\"xn--\")) {\n      try {\n        label = punycode.decode(label.substring(4));\n        labels[i] = label;\n      } catch (err) {\n        error = true;\n        continue;\n      }\n      curProcessing = \"nontransitional\";\n    }\n\n    // No need to validate if we already know there is an error.\n    if (error) {\n      continue;\n    }\n    const validation = validateLabel(label, {\n      ...options,\n      processingOption: curProcessing,\n      checkBidi: options.checkBidi && isBidi\n    });\n    if (!validation) {\n      error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error\n  };\n}\n\nfunction toASCII(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\",\n  verifyDNSLength = false\n} = {}) {\n  if (processingOption !== \"transitional\" && processingOption !== \"nontransitional\") {\n    throw new RangeError(\"processingOption must be either transitional or nontransitional\");\n  }\n\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n  let labels = result.string.split(\".\");\n  labels = labels.map(l => {\n    if (containsNonASCII(l)) {\n      try {\n        return `xn--${punycode.encode(l)}`;\n      } catch (e) {\n        result.error = true;\n      }\n    }\n    return l;\n  });\n\n  if (verifyDNSLength) {\n    const total = labels.join(\".\").length;\n    if (total > 253 || total === 0) {\n      result.error = true;\n    }\n\n    for (let i = 0; i < labels.length; ++i) {\n      if (labels[i].length > 63 || labels[i].length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) {\n    return null;\n  }\n  return labels.join(\".\");\n}\n\nfunction toUnicode(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\"\n} = {}) {\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n}\n\nmodule.exports = {\n  toASCII,\n  toUnicode\n};\n","\"use strict\";\n\nconst combiningMarks = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{11002}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11082}\\u{110B0}-\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{11134}\\u{11145}\\u{11146}\\u{11173}\\u{11180}-\\u{11182}\\u{111B3}-\\u{111C0}\\u{111C9}-\\u{111CC}\\u{111CE}\\u{111CF}\\u{1122C}-\\u{11237}\\u{1123E}\\u{112DF}-\\u{112EA}\\u{11300}-\\u{11303}\\u{1133B}\\u{1133C}\\u{1133E}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11357}\\u{11362}\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11435}-\\u{11446}\\u{1145E}\\u{114B0}-\\u{114C3}\\u{115AF}-\\u{115B5}\\u{115B8}-\\u{115C0}\\u{115DC}\\u{115DD}\\u{11630}-\\u{11640}\\u{116AB}-\\u{116B7}\\u{1171D}-\\u{1172B}\\u{1182C}-\\u{1183A}\\u{11930}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{1193E}\\u{11940}\\u{11942}\\u{11943}\\u{119D1}-\\u{119D7}\\u{119DA}-\\u{119E0}\\u{119E4}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A39}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A5B}\\u{11A8A}-\\u{11A99}\\u{11C2F}-\\u{11C36}\\u{11C38}-\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D8A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D97}\\u{11EF3}-\\u{11EF6}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F51}-\\u{16F87}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D165}-\\u{1D169}\\u{1D16D}-\\u{1D172}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]/u;\nconst combiningClassVirama = /[\\u094D\\u09CD\\u0A4D\\u0ACD\\u0B4D\\u0BCD\\u0C4D\\u0CCD\\u0D3B\\u0D3C\\u0D4D\\u0DCA\\u0E3A\\u0EBA\\u0F84\\u1039\\u103A\\u1714\\u1734\\u17D2\\u1A60\\u1B44\\u1BAA\\u1BAB\\u1BF2\\u1BF3\\u2D7F\\uA806\\uA8C4\\uA953\\uA9C0\\uAAF6\\uABED\\u{10A3F}\\u{11046}\\u{1107F}\\u{110B9}\\u{11133}\\u{11134}\\u{111C0}\\u{11235}\\u{112EA}\\u{1134D}\\u{11442}\\u{114C2}\\u{115BF}\\u{1163F}\\u{116B6}\\u{1172B}\\u{11839}\\u{119E0}\\u{11A34}\\u{11A47}\\u{11A99}\\u{11C3F}\\u{11D44}\\u{11D45}\\u{11D97}]/u;\nconst validZWNJ = /[\\u0620\\u0626\\u0628\\u062A-\\u062E\\u0633-\\u063F\\u0641-\\u0647\\u0649\\u064A\\u066E\\u066F\\u0678-\\u0687\\u069A-\\u06BF\\u06C1\\u06C2\\u06CC\\u06CE\\u06D0\\u06D1\\u06FA-\\u06FC\\u06FF\\u0712-\\u0714\\u071A-\\u071D\\u071F-\\u0727\\u0729\\u072B\\u072D\\u072E\\u074E-\\u0758\\u075C-\\u076A\\u076D-\\u0770\\u0772\\u0775-\\u0777\\u077A-\\u077F\\u07CA-\\u07EA\\u0841-\\u0845\\u0848\\u084A-\\u0853\\u0855\\u0860\\u0862-\\u0865\\u0868\\u08A0-\\u08A9\\u08AF\\u08B0\\u08B3\\u08B4\\u08B6-\\u08B8\\u08BA-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA872\\u{10AC0}-\\u{10AC4}\\u{10ACD}\\u{10AD3}-\\u{10ADC}\\u{10ADE}-\\u{10AE0}\\u{10AEB}-\\u{10AEE}\\u{10B80}\\u{10B82}\\u{10B86}-\\u{10B88}\\u{10B8A}\\u{10B8B}\\u{10B8D}\\u{10B90}\\u{10BAD}\\u{10BAE}\\u{10D00}-\\u{10D21}\\u{10D23}\\u{10F30}-\\u{10F32}\\u{10F34}-\\u{10F44}\\u{10F51}-\\u{10F53}\\u{1E900}-\\u{1E943}][\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*\\u200C[\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*[\\u0620\\u0622-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u0673\\u0675-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u077F\\u07CA-\\u07EA\\u0840-\\u0855\\u0860\\u0862-\\u0865\\u0867-\\u086A\\u08A0-\\u08AC\\u08AE-\\u08B4\\u08B6-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA871\\u{10AC0}-\\u{10AC5}\\u{10AC7}\\u{10AC9}\\u{10ACA}\\u{10ACE}-\\u{10AD6}\\u{10AD8}-\\u{10AE1}\\u{10AE4}\\u{10AEB}-\\u{10AEF}\\u{10B80}-\\u{10B91}\\u{10BA9}-\\u{10BAE}\\u{10D01}-\\u{10D23}\\u{10F30}-\\u{10F44}\\u{10F51}-\\u{10F54}\\u{1E900}-\\u{1E943}]/u;\nconst bidiDomain = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS1LTR = /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u249C-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D800}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]/u;\nconst bidiS1RTL = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS2 = /^[\\0-\\x08\\x0E-\\x1B!-@\\[-`\\{-\\x84\\x86-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9\\u02BA\\u02C2-\\u02CF\\u02D2-\\u02DF\\u02E5-\\u02ED\\u02EF-\\u036F\\u0374\\u0375\\u037E\\u0384\\u0385\\u0387\\u03F6\\u0483-\\u0489\\u058A\\u058D-\\u058F\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u070D\\u070F-\\u074A\\u074D-\\u07B1\\u07C0-\\u07FA\\u07FD-\\u082D\\u0830-\\u083E\\u0840-\\u085B\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u0898-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09F2\\u09F3\\u09FB\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AF1\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0BF3-\\u0BFA\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C78-\\u0C7E\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E3F\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39-\\u0F3D\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1390-\\u1399\\u1400\\u169B\\u169C\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DB\\u17DD\\u17F0-\\u17F9\\u1800-\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1940\\u1944\\u1945\\u19DE-\\u19FF\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u200B-\\u200D\\u200F-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u2150-\\u215F\\u2189-\\u218B\\u2190-\\u2335\\u237B-\\u2394\\u2396-\\u2426\\u2440-\\u244A\\u2460-\\u249B\\u24EA-\\u26AB\\u26AD-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF9-\\u2CFF\\u2D7F\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u3004\\u3008-\\u3020\\u302A-\\u302D\\u3030\\u3036\\u3037\\u303D-\\u303F\\u3099-\\u309C\\u30A0\\u30FB\\u31C0-\\u31E3\\u321D\\u321E\\u3250-\\u325F\\u327C-\\u327E\\u32B1-\\u32BF\\u32CC-\\u32CF\\u3377-\\u337A\\u33DE\\u33DF\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA60D-\\uA60F\\uA66F-\\uA67F\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA700-\\uA721\\uA788\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA828-\\uA82C\\uA838\\uA839\\uA874-\\uA877\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uAB6A\\uAB6B\\uABE5\\uABE8\\uABED\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD8F\\uFD92-\\uFDC7\\uFDCF\\uFDF0-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10101}\\u{10140}-\\u{1018C}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101FD}\\u{102E0}-\\u{102FB}\\u{10376}-\\u{1037A}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{1091F}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A38}-\\u{10A3A}\\u{10A3F}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE6}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B39}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D27}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAB}-\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F59}\\u{10F70}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{11001}\\u{11038}-\\u{11046}\\u{11052}-\\u{11065}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{11660}-\\u{1166C}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11FD5}-\\u{11FF1}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE2}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D1E9}\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D300}-\\u{1D356}\\u{1D6DB}\\u{1D715}\\u{1D74F}\\u{1D789}\\u{1D7C3}\\u{1D7CE}-\\u{1D7FF}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E2FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8D6}\\u{1E900}-\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F10F}\\u{1F12F}\\u{1F16A}-\\u{1F16F}\\u{1F1AD}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DD}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA74}\\u{1FA78}-\\u{1FA7C}\\u{1FA80}-\\u{1FA86}\\u{1FA90}-\\u{1FAAC}\\u{1FAB0}-\\u{1FABA}\\u{1FAC0}-\\u{1FAC5}\\u{1FAD0}-\\u{1FAD9}\\u{1FAE0}-\\u{1FAE7}\\u{1FAF0}-\\u{1FAF6}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS3 = /[0-9\\xB2\\xB3\\xB9\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1D7CE}-\\u{1D7FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS4EN = /[0-9\\xB2\\xB3\\xB9\\u06F0-\\u06F9\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{1D7CE}-\\u{1D7FF}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}]/u;\nconst bidiS4AN = /[\\u0600-\\u0605\\u0660-\\u0669\\u066B\\u066C\\u06DD\\u0890\\u0891\\u08E2\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}]/u;\nconst bidiS5 = /^[\\0-\\x08\\x0E-\\x1B!-\\x84\\x86-\\u0377\\u037A-\\u037F\\u0384-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u052F\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0606\\u0607\\u0609\\u060A\\u060C\\u060E-\\u061A\\u064B-\\u065F\\u066A\\u0670\\u06D6-\\u06DC\\u06DE-\\u06E4\\u06E7-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E3A\\u0E3F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1400-\\u167F\\u1681-\\u169C\\u16A0-\\u16F8\\u1700-\\u1715\\u171F-\\u1736\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1800-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE-\\u1A1B\\u1A1E-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1AB0-\\u1ACE\\u1B00-\\u1B4C\\u1B50-\\u1B7E\\u1B80-\\u1BF3\\u1BFC-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD0-\\u1CFA\\u1D00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u200B-\\u200E\\u2010-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2071\\u2074-\\u208E\\u2090-\\u209C\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2CF3\\u2CF9-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u303F\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31E3\\u31F0-\\u321E\\u3220-\\uA48C\\uA490-\\uA4C6\\uA4D0-\\uA62B\\uA640-\\uA6F7\\uA700-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA82C\\uA830-\\uA839\\uA840-\\uA877\\uA880-\\uA8C5\\uA8CE-\\uA8D9\\uA8E0-\\uA953\\uA95F-\\uA97C\\uA980-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAAC2\\uAADB-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB6B\\uAB70-\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E\\uFB29\\uFD3E-\\uFD4F\\uFDCF\\uFDFD-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}-\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1018E}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101D0}-\\u{101FD}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E0}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{1037A}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{1091F}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10B39}-\\u{10B3F}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{1104D}\\u{11052}-\\u{11075}\\u{1107F}-\\u{110C2}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11100}-\\u{11134}\\u{11136}-\\u{11147}\\u{11150}-\\u{11176}\\u{11180}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1123E}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112EA}\\u{112F0}-\\u{112F9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133B}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11400}-\\u{1145B}\\u{1145D}-\\u{11461}\\u{11480}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B5}\\u{115B8}-\\u{115DD}\\u{11600}-\\u{11644}\\u{11650}-\\u{11659}\\u{11660}-\\u{1166C}\\u{11680}-\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{1171D}-\\u{1172B}\\u{11730}-\\u{11746}\\u{11800}-\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D7}\\u{119DA}-\\u{119E4}\\u{11A00}-\\u{11A47}\\u{11A50}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C36}\\u{11C38}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D47}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FF1}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF0}-\\u{16AF5}\\u{16B00}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F4F}-\\u{16F87}\\u{16F8F}-\\u{16F9F}\\u{16FE0}-\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D2E0}-\\u{1D2F3}\\u{1D300}-\\u{1D356}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D7CB}\\u{1D7CE}-\\u{1DA8B}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1DF00}-\\u{1DF1E}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E100}-\\u{1E12C}\\u{1E130}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AE}\\u{1E2C0}-\\u{1E2F9}\\u{1E2FF}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F1AD}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DD}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA74}\\u{1FA78}-\\u{1FA7C}\\u{1FA80}-\\u{1FA86}\\u{1FA90}-\\u{1FAAC}\\u{1FAB0}-\\u{1FABA}\\u{1FAC0}-\\u{1FAC5}\\u{1FAD0}-\\u{1FAD9}\\u{1FAE0}-\\u{1FAE7}\\u{1FAF0}-\\u{1FAF6}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]*$/u;\nconst bidiS6 = /[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u06F0-\\u06F9\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u2488-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E1}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D7CE}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F100}-\\u{1F10A}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\n\nmodule.exports = {\n  combiningMarks,\n  combiningClassVirama,\n  validZWNJ,\n  bidiDomain,\n  bidiS1LTR,\n  bidiS1RTL,\n  bidiS2,\n  bidiS3,\n  bidiS4EN,\n  bidiS4AN,\n  bidiS5,\n  bidiS6\n};\n","\"use strict\";\n\nmodule.exports.STATUS_MAPPING = {\n  mapped: 1,\n  valid: 2,\n  disallowed: 3,\n  disallowed_STD3_valid: 4,\n  disallowed_STD3_mapped: 5,\n  deviation: 6,\n  ignored: 7\n};\n","import { List } from './list'\n\n/** @public */\nexport type GenericListener = (...args: any[]) => void;\n\n/**\n * Event description type\n * @public\n */\nexport type EventsDescription = Record<string, GenericListener>;\n\n/** @public */\nexport type CommonEvents = 'newListener' | 'removeListener';\n\nexport class EventEmitter<Events extends EventsDescription> {\n    private _events: Map<string, List<GenericListener>>;\n    maxListeners: number;\n    constructor() {\n        this._events = new Map();\n    }\n\n    addListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n    addListener(\n        event: CommonEvents,\n        listener: (eventName: string | symbol, listener: GenericListener) => void\n    ): this;\n    addListener(event: string | symbol, listener: GenericListener): this;\n    addListener(event: any, listener: any): this {\n        if (!this._events.has(event)) {\n            this._events.set(event, new List());\n        }\n        this._events.get(event)?.push(listener)\n        return this;\n    }\n\n    on<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n    on(\n        event: CommonEvents,\n        listener: (eventName: string | symbol, listener: GenericListener) => void\n    ): this;\n    on(event: string | symbol, listener: GenericListener): this;\n    on(event: any, listener: any): this {\n        this.addListener(event, listener);\n        return this;\n    }\n\n    once<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n    once(\n        event: CommonEvents,\n        listener: (eventName: string | symbol, listener: GenericListener) => void\n    ): this;\n    once(event: string | symbol, listener: GenericListener): this;\n    once(event: any, listener: any): this {\n        const selfRemovingListener = () => {\n            try {\n                listener();\n            } finally {\n                this.removeListener(event, selfRemovingListener);\n            }\n        }\n        this.addListener(event, selfRemovingListener)\n        return this;\n    }\n\n    removeListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n    removeListener(\n        event: CommonEvents,\n        listener: (eventName: string | symbol, listener: GenericListener) => void\n    ): this;\n    removeListener(event: string | symbol, listener: GenericListener): this;\n    removeListener(event: any, listener: any): this {\n        this._events.get(event)?.prune(l => l === listener);\n        return this;\n    }\n\n\n    off<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n    off(\n        event: CommonEvents,\n        listener: (eventName: string | symbol, listener: GenericListener) => void\n    ): this;\n    off(event: string | symbol, listener: GenericListener): this;\n    off(event: any, listener: any): this {\n        this.removeListener(event, listener);\n        return this;\n    }\n\n    removeAllListeners<EventKey extends keyof Events>(\n        event?: EventKey | CommonEvents | symbol | string\n    ): this;\n    removeAllListeners(event: any): this {\n        this._events.delete(event)\n        return this;\n    }\n\n    listeners<EventKey extends keyof Events>(\n        event: EventKey | CommonEvents | symbol | string\n    ): Events[EventKey][];\n    listeners(event: any) {\n        return this._events.get(event)?.toArray() ?? [];\n    }\n\n    rawListeners<EventKey extends keyof Events>(\n        event: EventKey | CommonEvents | symbol | string\n    ): Events[EventKey][];\n    rawListeners(event: any) {\n        return this.listeners(event);\n    }\n\n\n    emit<EventKey extends keyof Events>(\n        event: EventKey | symbol,\n        ...args: Parameters<Events[EventKey]>\n    ): boolean;\n    emit(event, ...args) {\n        for (const eventFn of this._events.get(event) ?? []) {\n            eventFn(...args);\n        }\n        return true;\n    }\n\n    listenerCount<EventKey extends keyof Events>(\n        type: EventKey | CommonEvents | symbol | string\n    ): number;\n    listenerCount(type) {\n        return this._events.get(type)?.length\n    }\n\n    setMaxListeners(n: number): this{\n        this.maxListeners = n;\n        return this;\n    };\n}\n","export * from 'mongodb';\n","type ListNode<T> = {\n    value: T;\n    next: ListNode<T> | HeadNode<T>;\n    prev: ListNode<T> | HeadNode<T>;\n};\n\ntype HeadNode<T> = {\n    value: null;\n    next: ListNode<T>;\n    prev: ListNode<T>;\n};\n\n/**\n * When a list is empty the head is a reference with pointers to itself\n * So this type represents that self referential state\n */\ntype EmptyNode = {\n    value: null;\n    next: EmptyNode;\n    prev: EmptyNode;\n};\n\n/**\n * A sequential list of items in a circularly linked list\n * @remarks\n * The head node is special, it is always defined and has a value of null.\n * It is never \"included\" in the list, in that, it is not returned by pop/shift or yielded by the iterator.\n * The circular linkage and always defined head node are to reduce checks for null next/prev references to zero.\n * New nodes are declared as object literals with keys always in the same order: next, prev, value.\n * @internal\n */\nexport class List<T = unknown> {\n    private readonly head: HeadNode<T> | EmptyNode;\n    private count: number;\n\n    get length() {\n        return this.count;\n    }\n\n    get [Symbol.toStringTag]() {\n        return 'List' as const;\n    }\n\n    constructor() {\n        this.count = 0;\n\n        // this is carefully crafted:\n        // declaring a complete and consistently key ordered\n        // object is beneficial to the runtime optimizations\n        this.head = {\n            next: null,\n            prev: null,\n            value: null\n        } as unknown as EmptyNode;\n        this.head.next = this.head;\n        this.head.prev = this.head;\n    }\n\n    toArray() {\n        return Array.from(this);\n    }\n\n    toString() {\n        return `head <=> ${this.toArray().join(' <=> ')} <=> head`;\n    }\n\n    *[Symbol.iterator](): Generator<T, void, void> {\n        for (const node of this.nodes()) {\n            yield node.value;\n        }\n    }\n\n    private *nodes(): Generator<ListNode<T>, void, void> {\n        let ptr: HeadNode<T> | ListNode<T> | EmptyNode = this.head.next;\n        while (ptr !== this.head) {\n            // Save next before yielding so that we make removing within iteration safe\n            const { next } = ptr as ListNode<T>;\n            yield ptr as ListNode<T>;\n            ptr = next;\n        }\n    }\n\n    /** Insert at end of list */\n    push(value: T) {\n        this.count += 1;\n        const newNode: ListNode<T> = {\n            next: this.head as HeadNode<T>,\n            prev: this.head.prev as ListNode<T>,\n            value\n        };\n        this.head.prev.next = newNode;\n        this.head.prev = newNode;\n    }\n\n    /** Inserts every item inside an iterable instead of the iterable itself */\n    pushMany(iterable: Iterable<T>) {\n        for (const value of iterable) {\n            this.push(value);\n        }\n    }\n\n    /** Insert at front of list */\n    unshift(value: T) {\n        this.count += 1;\n        const newNode: ListNode<T> = {\n            next: this.head.next as ListNode<T>,\n            prev: this.head as HeadNode<T>,\n            value\n        };\n        this.head.next.prev = newNode;\n        this.head.next = newNode;\n    }\n\n    private remove(node: ListNode<T> | EmptyNode): T | null {\n        if (node === this.head || this.length === 0) {\n            return null;\n        }\n\n        this.count -= 1;\n\n        const prevNode = node.prev;\n        const nextNode = node.next;\n        prevNode.next = nextNode;\n        nextNode.prev = prevNode;\n\n        return node.value;\n    }\n\n    /** Removes the first node at the front of the list */\n    shift(): T | null {\n        return this.remove(this.head.next);\n    }\n\n    /** Removes the last node at the end of the list */\n    pop(): T | null {\n        return this.remove(this.head.prev);\n    }\n\n    /** Iterates through the list and removes nodes where filter returns true */\n    prune(filter: (value: T) => boolean) {\n        for (const node of this.nodes()) {\n            if (filter(node.value)) {\n                this.remove(node);\n            }\n        }\n    }\n\n    clear() {\n        this.count = 0;\n        this.head.next = this.head as EmptyNode;\n        this.head.prev = this.head as EmptyNode;\n    }\n\n    /** Returns the first item in the list, does not remove */\n    first(): T | null {\n        // If the list is empty, value will be the head's null\n        return this.head.next.value;\n    }\n\n    /** Returns the last item in the list, does not remove */\n    last(): T | null {\n        // If the list is empty, value will be the head's null\n        return this.head.prev.value;\n    }\n}\n","\ntype TextDecoder = {\n  readonly encoding: string;\n  readonly fatal: boolean;\n  readonly ignoreBOM: boolean;\n  decode(input?: Uint8Array): string;\n};\ntype TextDecoderConstructor = {\n  new(label: 'utf8', options: { fatal: boolean; ignoreBOM?: boolean }): TextDecoder;\n};\n\ntype TextEncoder = {\n  readonly encoding: string;\n  encode(input?: string): Uint8Array;\n};\ntype TextEncoderConstructor = {\n  new(): TextEncoder;\n};\n\n// Web global\ndeclare const TextDecoder: TextDecoderConstructor;\ndeclare const TextEncoder: TextEncoderConstructor;\ndeclare const atob: (base64: string) => string;\ndeclare const btoa: (binary: string) => string;\n\ntype ArrayBufferViewWithTag = ArrayBufferView & {\n  [Symbol.toStringTag]?: string;\n};\n\nfunction isReactNative() {\n  const { navigator } = globalThis as { navigator?: { product?: string } };\n  return typeof navigator === 'object' && navigator.product === 'ReactNative';\n}\n\n/** @internal */\nexport function webMathRandomBytes(byteLength: number) {\n  if (byteLength < 0) {\n    throw new RangeError(`The argument 'byteLength' is invalid. Received ${byteLength}`);\n  }\n  return webByteUtils.fromNumberArray(\n    Array.from({ length: byteLength }, () => Math.floor(Math.random() * 256))\n  );\n}\n\nconst HEX_DIGIT = /(\\d|[a-f])/i;\n\n/** @internal */\nexport const webByteUtils = {\n  toLocalBufferType(\n    potentialUint8array: Uint8Array | ArrayBufferViewWithTag | ArrayBuffer\n  ): Uint8Array {\n    const stringTag =\n      potentialUint8array?.[Symbol.toStringTag] ??\n      Object.prototype.toString.call(potentialUint8array);\n\n    if (stringTag === 'Uint8Array') {\n      return potentialUint8array as Uint8Array;\n    }\n\n    if (ArrayBuffer.isView(potentialUint8array)) {\n      return new Uint8Array(\n        potentialUint8array.buffer.slice(\n          potentialUint8array.byteOffset,\n          potentialUint8array.byteOffset + potentialUint8array.byteLength\n        )\n      );\n    }\n\n    if (\n      stringTag === 'ArrayBuffer' ||\n      stringTag === 'SharedArrayBuffer' ||\n      stringTag === '[object ArrayBuffer]' ||\n      stringTag === '[object SharedArrayBuffer]'\n    ) {\n      return new Uint8Array(potentialUint8array);\n    }\n\n    throw new Error(`Cannot make a Uint8Array from ${String(potentialUint8array)}`);\n  },\n\n  allocate(size: number): Uint8Array {\n    if (typeof size !== 'number') {\n      throw new TypeError(`The \"size\" argument must be of type number. Received ${String(size)}`);\n    }\n    return new Uint8Array(size);\n  },\n\n  equals(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.byteLength !== b.byteLength) {\n      return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  fromNumberArray(array: number[]): Uint8Array {\n    return Uint8Array.from(array);\n  },\n\n  fromBase64(base64: string): Uint8Array {\n    return Uint8Array.from(atob(base64), c => c.charCodeAt(0));\n  },\n\n  toBase64(uint8array: Uint8Array): string {\n    return btoa(webByteUtils.toISO88591(uint8array));\n  },\n\n  /** **Legacy** binary strings are an outdated method of data transfer. Do not add public API support for interpreting this format */\n  fromISO88591(codePoints: string): Uint8Array {\n    return Uint8Array.from(codePoints, c => c.charCodeAt(0) & 0xff);\n  },\n\n  /** **Legacy** binary strings are an outdated method of data transfer. Do not add public API support for interpreting this format */\n  toISO88591(uint8array: Uint8Array): string {\n    return Array.from(Uint16Array.from(uint8array), b => String.fromCharCode(b)).join('');\n  },\n\n  fromHex(hex: string): Uint8Array {\n    const evenLengthHex = hex.length % 2 === 0 ? hex : hex.slice(0, hex.length - 1);\n    const buffer: number[] = [];\n\n    for (let i = 0; i < evenLengthHex.length; i += 2) {\n      const firstDigit = evenLengthHex[i];\n      const secondDigit = evenLengthHex[i + 1];\n\n      if (!HEX_DIGIT.test(firstDigit)) {\n        break;\n      }\n      if (!HEX_DIGIT.test(secondDigit)) {\n        break;\n      }\n\n      const hexDigit = Number.parseInt(`${firstDigit}${secondDigit}`, 16);\n      buffer.push(hexDigit);\n    }\n\n    return Uint8Array.from(buffer);\n  },\n\n  toHex(uint8array: Uint8Array): string {\n    return Array.from(uint8array, byte => byte.toString(16).padStart(2, '0')).join('');\n  },\n\n  fromUTF8(text: string): Uint8Array {\n    return new TextEncoder().encode(text);\n  },\n\n  toUTF8(uint8array: Uint8Array): string {\n    return new TextDecoder('utf8', { fatal: false }).decode(uint8array);\n  },\n\n  utf8ByteLength(input: string): number {\n    return webByteUtils.fromUTF8(input).byteLength;\n  },\n\n  encodeUTF8Into(buffer: Uint8Array, source: string, byteOffset: number): number {\n    const bytes = webByteUtils.fromUTF8(source);\n    buffer.set(bytes, byteOffset);\n    return bytes.byteLength;\n  },\n\n  randomBytes(byteLength: number) {\n    // You cannot separate getRandomValues from crypto (need to have this === crypto)\n    return crypto.getRandomValues(webByteUtils.allocate(byteLength));\n  },\n\n  concat(buffers: Uint8Array | Array<Uint8Array>) {\n    if (!Array.isArray(buffers)) {\n      buffers = [buffers]\n    }\n    const sum = buffers.reduce((acc, i) => (acc += i.byteLength), 0)\n    const space = new Uint8Array(sum)\n    let offset = 0;\n    for (const b of buffers) {\n      space.set(b, offset)\n      offset += b.byteLength;\n    }\n    return space;\n  }\n};\n\nexport class Buffer extends Uint8Array {\n  _myCustomMongoDBBuffer = true;\n\n  constructor(buffer: ArrayBufferLike, byteOffset?: number, length?: number);\n  constructor(size: number)\n  constructor(...args: ConstructorParameters<Uint8ArrayConstructor>) {\n    super(...args)\n  }\n\n  static isBuffer(b) {\n    return !!b._myCustomMongoDBBuffer;\n  }\n\n  static byteLength(input) {\n    return webByteUtils.utf8ByteLength(input)\n  }\n\n  static alloc(space) {\n    return new Buffer(webByteUtils.allocate(space));\n  }\n\n  static allocUnsafe(space) {\n    return this.alloc(space);\n  }\n\n  write(s: string, offset: number, format) {\n    if (format !== 'utf8') throw new Error('cannot serialize not utf8!!');\n    this.set(webByteUtils.fromUTF8(s), offset);\n  }\n\n  writeInt32LE(value: number, offset: number) {\n    const space = new DataView(new ArrayBuffer(4));\n    space.setInt32(0, value, true);\n    this.set(new Uint8Array(space.buffer), offset);\n  }\n\n  writeUInt32LE(value: number, offset: number) {\n    const space = new DataView(new ArrayBuffer(4));\n    space.setUint32(0, value, true);\n    this.set(new Uint8Array(space.buffer), offset);\n  }\n\n  readInt32LE(offset: number) {\n    const dv = new DataView(this.buffer, this.byteOffset, this.byteLength);\n    return dv.getInt32(offset, true);\n  }\n\n  readUInt8(offset: number) {\n    const dv = new DataView(this.buffer, this.byteOffset, this.byteLength);\n    return dv.getUint8(offset);\n  }\n\n  readUInt32LE(offset: number) {\n    const dv = new DataView(this.buffer, this.byteOffset, this.byteLength);\n    return dv.getUint32(offset, true);\n  }\n\n  static concat(buffers: Uint8Array | Array<Uint8Array>) {\n    return webByteUtils.concat(buffers);\n  }\n}\n","import { webByteUtils, Buffer } from \"./buffer\";\n\nexport function randomBytes(byteLength) {\n    return new Buffer(crypto.getRandomValues(webByteUtils.allocate(byteLength)));\n}\n","import { BSON } from \"mongodb\";\nimport { webByteUtils, Buffer } from \"./buffer\";\nimport { Duplex } from \"./stream\";\nimport { WebbySocket } from '../ws'\n\nexport const OP_MSG = 2013;\n\nconst myHello = () => ({\n    helloOk: true,\n    isWritablePrimary: true,\n    topologyVersion: { processId: new BSON.ObjectId(), counter: 0 },\n    maxBsonObjectSize: 16777216,\n    maxMessageSizeBytes: 48000000,\n    maxWriteBatchSize: 100000,\n    localTime: new Date(),\n    logicalSessionTimeoutMinutes: null,\n    connectionId: 85,\n    minWireVersion: 0,\n    maxWireVersion: 17,\n    readOnly: false,\n    ok: 1,\n});\n\nexport class FakeSocket extends Duplex {\n    options: { host: string };\n    isKeptAlive: boolean;\n    keepAliveDelay: number;\n    timeoutMS: number;\n    noDelay: boolean;\n    /** We make one websocket for every socket in the driver. Now we do not need multiplexing */\n    ws: WebbySocket;\n    wsReader: AsyncGenerator<Uint8Array, any, unknown>;\n    forwarder: Promise<void>;\n    remoteAddress: string;\n    remotePort: number;\n\n    constructor(options: { port: number; host: string }) {\n        console.log(\"creating fakesocket\");\n        super();\n        this.options = options;\n        this.remoteAddress = options.host;\n        this.remotePort = options.port;\n        this.ws = new WebbySocket(options);\n        this.wsReader = this.ws[Symbol.asyncIterator]();\n        this.forwarder = this.forwardMessagesToDriver()\n    }\n    // TCP specific\n    setKeepAlive(enable: boolean, initialDelayMS: number) {\n        this.isKeptAlive = enable;\n        this.keepAliveDelay = initialDelayMS;\n    }\n\n    setTimeout(timeoutMS: number) {\n        this.timeoutMS = timeoutMS;\n    }\n\n    setNoDelay(noDelay: boolean) {\n        this.noDelay = noDelay;\n    }\n\n    // MessageStream requirement\n    pipe<T extends NodeJS.WritableStream = any>(stream: T): void {\n        console.info(`pipe(${stream})`);\n        this.stream = stream;\n    }\n\n    override once(eventName: any, listener: any): this {\n        super.once(eventName, listener);\n        if (eventName === 'connect') {\n            setTimeout(() => {\n                listener('connect');\n            }, 1)\n        }\n        return this;\n    }\n\n    // MessageStream internally calls write as Msgs are pushed to it\n    write(chunk: any): void {\n        console.info('write');\n    }\n    // Two different shutdown APIs\n    end(callback: () => void) {\n        this.destroy();\n        setTimeout(callback, 1)\n    }\n\n    override push(outgoingDataBuffer: Uint8Array) {\n        const outgoing = parseMessage(outgoingDataBuffer);\n        if (outgoing.doc.hello || outgoing.doc.ismaster) {\n            this.ws.sendFakeMessage(outgoing.requestId, myHello())\n            return;\n        }\n        console.dir({ send: outgoing });\n        this.ws.send(outgoingDataBuffer);\n    }\n\n    async forwardMessagesToDriver() {\n        for await (const message of this.wsReader) {\n            const incoming = parseMessage(message)\n            if (!incoming.doc.isWritablePrimary) {\n                console.dir({ recv: incoming });\n            }\n            this.stream._write(new Buffer(message), null, () => null)\n        }\n    }\n}\n\n\nfunction parseMessage(message: Uint8Array) {\n    const dv = new DataView(message.buffer, message.byteOffset, message.byteLength);\n    const messageHeader = {\n        length: dv.getInt32(0, true),\n        requestId: dv.getInt32(4, true),\n        responseTo: dv.getInt32(8, true),\n        opCode: dv.getInt32(12, true),\n        flags: dv.getInt32(16, true)\n    };\n\n    if (messageHeader.opCode !== OP_MSG) {\n        const nsNullTerm = message.indexOf(0x00, 20);\n        const ns = webByteUtils.toUTF8(message.subarray(20, nsNullTerm));\n        const nsLen = nsNullTerm - 20 + 1;\n        const numberToSkip = dv.getInt32(20 + nsLen, true);\n        const numberToReturn = dv.getInt32(20 + nsLen + 4, true);\n        const docStart = 20 + nsLen + 4 + 4;\n        const docLen = dv.getInt32(docStart, true);\n        const doc = BSON.deserialize(message.subarray(docStart, docStart + docLen));\n        return {\n            ...messageHeader,\n            ns,\n            numberToSkip,\n            numberToReturn,\n            doc\n        };\n    } else {\n        const payloadType = dv.getUint8(20);\n        const docStart = 20 + 1;\n        const docLen = dv.getUint32(docStart, true);\n        const doc = BSON.deserialize(message.subarray(docStart, docStart + docLen));\n        return {\n            ...messageHeader,\n            payloadType,\n            doc\n        };\n    }\n}\n\nexport function createConnection(options) {\n    console.log(\"createconnection\");\n    const socket = new FakeSocket(options);\n    return socket;\n}\n","export function type() {\n    return 'browser'\n}\n\nexport function release() {\n    return 'cool version'\n}\n\nexport function endianness() {\n    return 'medium'\n}\n\nexport const version = 'Wow!'\n","export function hrtime() {\n    return [0, 0]\n}\n\nexport function nextTick(fn, ...args) {\n    setTimeout(fn, 1, ...args);\n}\n","import { EventEmitter } from \"../event_emitter\";\n\nexport class Readable extends EventEmitter<any> {\n    constructor() {\n        super();\n    }\n\n    pipe() {\n\n    }\n}\nexport class Writable extends EventEmitter<any> {\n    constructor() {\n        super();\n    }\n}\nexport class Duplex extends EventEmitter<any> {\n    destroyed: boolean = false;\n    writableEnded: boolean = false;\n    stream: any;\n    constructor() {\n        console.log(\"creating duplex\");\n        super();\n    }\n\n    pipe(stream) {\n        this.stream = stream\n    }\n\n    destroy() {\n        this.destroyed = true;\n        this.writableEnded = true;\n    }\n\n    push(outgoingDataBuffer) {\n        this.stream.push(outgoingDataBuffer);\n    }\n}\n","export const { setTimeout, clearTimeout } = globalThis;\n","export const { URL } = globalThis;\n","export function promisify<T>(fn: Function): Function {\n    return (...args) => {\n        return new Promise<any>((resolve, reject) => {\n            fn(...args, (error, ...results) => {\n                if (error) return reject(error);\n                // @ts-ignore\n                return resolve(...results);\n            })\n        })\n    }\n}\n","import { BSON } from \"mongodb\";\nimport { webByteUtils } from \"./modules/buffer\";\n\nfunction makeNotifier<T>(): { p: Promise<T>, resolve: (value: T) => void; reject: (reason?: Error) => void } {\n    /** @type {() => void} */\n    let resolve\n    /** @type {(error: Error) => void} */\n    let reject\n    /** @type {Promise<void>} */\n    const p = new Promise((pRes, pRej) => {\n        resolve = pRes;\n        reject = pRej\n    })\n    // @ts-ignore\n    return { p, resolve, reject }\n}\n\nexport class WebbySocket {\n    socket: WebSocket;\n    messages: Array<Uint8Array> = [];\n    notify: ReturnType<typeof makeNotifier<void>>;\n\n    constructor({ host = 'localhost', port = 9080 } = {}) {\n        // this.socket = new WebSocket(`ws://${host}:${port}/ws`);\n        console.log(\"creating webbysocket\");\n        this.socket = new WebSocket(`ws://localhost:9080/ws`);\n        this.socket.addEventListener('close', () => this.#onClose());\n        this.socket.addEventListener('error', () => this.#onError());\n        this.socket.addEventListener('message', message => this.#onMessage(message));\n        this.socket.addEventListener('open', () => this.#onOpen());\n        this.socket.binaryType = 'arraybuffer';\n        this.notify = makeNotifier<void>();\n    }\n\n    #onClose() {\n        console.log('WebbySocket: #onClose()');\n    }\n    #onError() {\n        console.log('WebbySocket: #onError()');\n    }\n    #onMessage(message: { data: ArrayBuffer }) {\n        console.log('WebbySocket: #onMessage()');\n        this.messages.push(new Uint8Array(message.data))\n        this.notify.resolve();\n    }\n    #onOpen() {\n        console.log('WebbySocket: #onOpen()');\n    }\n\n    async *[Symbol.asyncIterator](): AsyncGenerator<Uint8Array> {\n        await this.notify.p;\n        this.notify = makeNotifier();\n        while (this.messages.length) {\n            const value = this.messages.shift();\n            if (value) {\n                yield value\n            }\n            await this.notify.p;\n            this.notify = makeNotifier();\n        }\n        throw new Error('socket had no messages after notify.resolve() was called')\n    }\n\n    sendFakeMessage(reqId: number, data: Record<string, any>) {\n        setTimeout(() => {\n            this.#onMessage({ data: constructMessage(reqId, data).buffer });\n        }, 1);\n    }\n\n    send(buffer: Uint8Array) {\n        this.socket.send(buffer);\n    }\n}\n\nexport const OP_MSG = 2013;\nfunction constructMessage(requestId, response) {\n    console.log(\"constructingmessage\");\n    const responseBytes = BSON.serialize(response);\n    const payloadTypeBuffer = new Uint8Array([0]);\n    const headers = new DataView(new ArrayBuffer(20))\n    headers.setInt32(4, 0, true);\n    headers.setInt32(8, requestId, true);\n    headers.setInt32(12, OP_MSG, true);\n    headers.setInt32(16, 0, true);\n    const bufferResponse = webByteUtils.concat([new Uint8Array(headers.buffer), payloadTypeBuffer, responseBytes]);\n    const dv = new DataView(bufferResponse.buffer, bufferResponse.byteOffset, bufferResponse.byteLength);\n    dv.setInt32(0, bufferResponse.byteLength, true);\n    return new Uint8Array(dv.buffer, dv.byteOffset, dv.byteLength);\n}\n","\"use strict\";\n\nfunction makeException(ErrorType, message, options) {\n  if (options.globals) {\n    ErrorType = options.globals[ErrorType.name];\n  }\n  return new ErrorType(`${options.context ? options.context : \"Value\"} ${message}.`);\n}\n\nfunction toNumber(value, options) {\n  if (typeof value === \"bigint\") {\n    throw makeException(TypeError, \"is a BigInt which cannot be converted to a number\", options);\n  }\n  if (!options.globals) {\n    return Number(value);\n  }\n  return options.globals.Number(value);\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\n    return censorNegativeZero(Math.floor(x));\n  }\n\n  return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, { unsigned }) {\n  let lowerBound, upperBound;\n  if (unsigned) {\n    lowerBound = 0;\n    upperBound = 2 ** bitLength - 1;\n  } else {\n    lowerBound = -(2 ** (bitLength - 1));\n    upperBound = 2 ** (bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = 2 ** bitLength;\n  const twoToOneLessThanTheBitLength = 2 ** (bitLength - 1);\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64, but oh well. See the README for more details.\n    x = modulo(x, twoToTheBitLength);\n    if (!unsigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength, { unsigned }) {\n  const upperBound = Number.MAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength, xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nexports.any = value => {\n  return value;\n};\n\nexports.undefined = () => {\n  return undefined;\n};\n\nexports.boolean = value => {\n  return Boolean(value);\n};\n\nexports.byte = createIntegerConversion(8, { unsigned: false });\nexports.octet = createIntegerConversion(8, { unsigned: true });\n\nexports.short = createIntegerConversion(16, { unsigned: false });\nexports[\"unsigned short\"] = createIntegerConversion(16, { unsigned: true });\n\nexports.long = createIntegerConversion(32, { unsigned: false });\nexports[\"unsigned long\"] = createIntegerConversion(32, { unsigned: true });\n\nexports[\"long long\"] = createLongLongConversion(64, { unsigned: false });\nexports[\"unsigned long long\"] = createLongLongConversion(64, { unsigned: true });\n\nexports.double = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  return x;\n};\n\nexports[\"unrestricted double\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  return x;\n};\n\nexports.float = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  const y = Math.fround(x);\n\n  if (!Number.isFinite(y)) {\n    throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", options);\n  }\n\n  return y;\n};\n\nexports[\"unrestricted float\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  return Math.fround(x);\n};\n\nexports.DOMString = (value, options = {}) => {\n  if (options.treatNullAsEmptyString && value === null) {\n    return \"\";\n  }\n\n  if (typeof value === \"symbol\") {\n    throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", options);\n  }\n\n  const StringCtor = options.globals ? options.globals.String : String;\n  return StringCtor(value);\n};\n\nexports.ByteString = (value, options = {}) => {\n  const x = exports.DOMString(value, options);\n  let c;\n  for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n    if (c > 255) {\n      throw makeException(TypeError, \"is not a valid ByteString\", options);\n    }\n  }\n\n  return x;\n};\n\nexports.USVString = (value, options = {}) => {\n  const S = exports.DOMString(value, options);\n  const n = S.length;\n  const U = [];\n  for (let i = 0; i < n; ++i) {\n    const c = S.charCodeAt(i);\n    if (c < 0xD800 || c > 0xDFFF) {\n      U.push(String.fromCodePoint(c));\n    } else if (0xDC00 <= c && c <= 0xDFFF) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else if (i === n - 1) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else {\n      const d = S.charCodeAt(i + 1);\n      if (0xDC00 <= d && d <= 0xDFFF) {\n        const a = c & 0x3FF;\n        const b = d & 0x3FF;\n        U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\n        ++i;\n      } else {\n        U.push(String.fromCodePoint(0xFFFD));\n      }\n    }\n  }\n\n  return U.join(\"\");\n};\n\nexports.object = (value, options = {}) => {\n  if (value === null || (typeof value !== \"object\" && typeof value !== \"function\")) {\n    throw makeException(TypeError, \"is not an object\", options);\n  }\n\n  return value;\n};\n\nconst abByteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter =\n    typeof SharedArrayBuffer === \"function\" ?\n      Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get :\n      null;\n\nfunction isNonSharedArrayBuffer(value) {\n  try {\n    // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n    // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n    abByteLengthGetter.call(value);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isSharedArrayBuffer(value) {\n  try {\n    sabByteLengthGetter.call(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isArrayBufferDetached(value) {\n  try {\n    // eslint-disable-next-line no-new\n    new Uint8Array(value);\n    return false;\n  } catch {\n    return true;\n  }\n}\n\nexports.ArrayBuffer = (value, options = {}) => {\n  if (!isNonSharedArrayBuffer(value)) {\n    if (options.allowShared && !isSharedArrayBuffer(value)) {\n      throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", options);\n    }\n    throw makeException(TypeError, \"is not an ArrayBuffer\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nconst dvByteLengthGetter =\n    Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (value, options = {}) => {\n  try {\n    dvByteLengthGetter.call(value);\n  } catch (e) {\n    throw makeException(TypeError, \"is not a DataView\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", options);\n  }\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\n// Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(\n  Object.getPrototypeOf(Uint8Array).prototype,\n  Symbol.toStringTag\n).get;\n[\n  Int8Array,\n  Int16Array,\n  Int32Array,\n  Uint8Array,\n  Uint16Array,\n  Uint32Array,\n  Uint8ClampedArray,\n  Float32Array,\n  Float64Array\n].forEach(func => {\n  const { name } = func;\n  const article = /^[AEIOU]/u.test(name) ? \"an\" : \"a\";\n  exports[name] = (value, options = {}) => {\n    if (!ArrayBuffer.isView(value) || typedArrayNameGetter.call(value) !== name) {\n      throw makeException(TypeError, `is not ${article} ${name} object`, options);\n    }\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n\n    return value;\n  };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (value, options = {}) => {\n  if (!ArrayBuffer.isView(value)) {\n    throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n  }\n\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n  }\n  return value;\n};\n\nexports.BufferSource = (value, options = {}) => {\n  if (ArrayBuffer.isView(value)) {\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n    return value;\n  }\n\n  if (!options.allowShared && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", options);\n  }\n  if (options.allowShared && !isSharedArrayBuffer(value) && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBuffer, or a view on one\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\n","\"use strict\";\n\nconst { URL, URLSearchParams } = require(\"./webidl2js-wrapper\");\nconst urlStateMachine = require(\"./lib/url-state-machine\");\nconst percentEncoding = require(\"./lib/percent-encoding\");\n\nconst sharedGlobalObject = { Array, Object, Promise, String, TypeError };\nURL.install(sharedGlobalObject, [\"Window\"]);\nURLSearchParams.install(sharedGlobalObject, [\"Window\"]);\n\nexports.URL = sharedGlobalObject.URL;\nexports.URLSearchParams = sharedGlobalObject.URLSearchParams;\n\nexports.parseURL = urlStateMachine.parseURL;\nexports.basicURLParse = urlStateMachine.basicURLParse;\nexports.serializeURL = urlStateMachine.serializeURL;\nexports.serializePath = urlStateMachine.serializePath;\nexports.serializeHost = urlStateMachine.serializeHost;\nexports.serializeInteger = urlStateMachine.serializeInteger;\nexports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;\nexports.setTheUsername = urlStateMachine.setTheUsername;\nexports.setThePassword = urlStateMachine.setThePassword;\nexports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;\nexports.hasAnOpaquePath = urlStateMachine.hasAnOpaquePath;\n\nexports.percentDecodeString = percentEncoding.percentDecodeString;\nexports.percentDecodeBytes = percentEncoding.percentDecodeBytes;\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(...args) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    callResult = Reflect.apply(value, thisArg, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = (...args) => {\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    let callResult = Reflect.construct(value, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\nconst urlencoded = require(\"./urlencoded\");\nconst URLSearchParams = require(\"./URLSearchParams\");\n\nexports.implementation = class URLImpl {\n  constructor(globalObject, constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        throw new TypeError(`Invalid base URL: ${base}`);\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${url}`);\n    }\n\n    const query = parsedURL.query !== null ? parsedURL.query : \"\";\n\n    this._url = parsedURL;\n\n    // We cannot invoke the \"new URLSearchParams object\" algorithm without going through the constructor, which strips\n    // question mark by default. Therefore the doNotStripQMark hack is used.\n    this._query = URLSearchParams.createImpl(globalObject, [query], { doNotStripQMark: true });\n    this._query._url = this;\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${v}`);\n    }\n\n    this._url = parsedURL;\n\n    this._query._list.splice(0);\n    const { query } = parsedURL;\n    if (query !== null) {\n      this._query._list = urlencoded.parseUrlencodedString(query);\n    }\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return `${this._url.scheme}:`;\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(`${v}:`, { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return `${usm.serializeHost(url.host)}:${usm.serializeInteger(url.port)}`;\n  }\n\n  set host(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    return usm.serializePath(this._url);\n  }\n\n  set pathname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return `?${this._url.query}`;\n  }\n\n  set search(v) {\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      this._query._list = [];\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n    this._query._list = urlencoded.parseUrlencodedString(input);\n  }\n\n  get searchParams() {\n    return this._query;\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return `#${this._url.fragment}`;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URL\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URL'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URL\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URL {\n    constructor(url) {\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to construct 'URL': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to construct 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    toJSON() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toJSON' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol].toJSON();\n    }\n\n    get href() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get href' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    set href(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set href' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'href' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"href\"] = V;\n    }\n\n    toString() {\n      const esValue = this;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toString' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    get origin() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get origin' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"origin\"];\n    }\n\n    get protocol() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"protocol\"];\n    }\n\n    set protocol(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'protocol' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"protocol\"] = V;\n    }\n\n    get username() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get username' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"username\"];\n    }\n\n    set username(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set username' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'username' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"username\"] = V;\n    }\n\n    get password() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get password' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"password\"];\n    }\n\n    set password(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set password' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'password' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"password\"] = V;\n    }\n\n    get host() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get host' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"host\"];\n    }\n\n    set host(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set host' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'host' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"host\"] = V;\n    }\n\n    get hostname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hostname\"];\n    }\n\n    set hostname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hostname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hostname\"] = V;\n    }\n\n    get port() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get port' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"port\"];\n    }\n\n    set port(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set port' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'port' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"port\"] = V;\n    }\n\n    get pathname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"pathname\"];\n    }\n\n    set pathname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'pathname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"pathname\"] = V;\n    }\n\n    get search() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get search' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"search\"];\n    }\n\n    set search(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set search' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'search' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"search\"] = V;\n    }\n\n    get searchParams() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get searchParams' called on an object that is not a valid instance of URL.\");\n      }\n\n      return utils.getSameObject(this, \"searchParams\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"searchParams\"]);\n      });\n    }\n\n    get hash() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hash\"];\n    }\n\n    set hash(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hash' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hash\"] = V;\n    }\n  }\n  Object.defineProperties(URL.prototype, {\n    toJSON: { enumerable: true },\n    href: { enumerable: true },\n    toString: { enumerable: true },\n    origin: { enumerable: true },\n    protocol: { enumerable: true },\n    username: { enumerable: true },\n    password: { enumerable: true },\n    host: { enumerable: true },\n    hostname: { enumerable: true },\n    port: { enumerable: true },\n    pathname: { enumerable: true },\n    search: { enumerable: true },\n    searchParams: { enumerable: true },\n    hash: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URL\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = URL;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URL\n  });\n\n  if (globalNames.includes(\"Window\")) {\n    Object.defineProperty(globalObject, \"webkitURL\", {\n      configurable: true,\n      writable: true,\n      value: URL\n    });\n  }\n};\n\nconst Impl = require(\"./URL-impl.js\");\n","\"use strict\";\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let query = urlencoded.serializeUrlencoded(this._list);\n      if (query === \"\") {\n        query = null;\n      }\n      this._url._url.query = query;\n    }\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list.sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      }\n      if (a[0] > b[0]) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Function = require(\"./Function.js\");\nconst newObjectInRealm = utils.newObjectInRealm;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URLSearchParams\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URLSearchParams'.`);\n};\n\nexports.createDefaultIterator = (globalObject, target, kind) => {\n  const ctorRegistry = globalObject[ctorRegistrySymbol];\n  const iteratorPrototype = ctorRegistry[\"URLSearchParams Iterator\"];\n  const iterator = Object.create(iteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URLSearchParams\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URLSearchParams {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          if (utils.isObject(curArg)) {\n            if (curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" sequence\" + \" is not an iterable object.\"\n                );\n              } else {\n                const V = [];\n                const tmp = curArg;\n                for (let nextItem of tmp) {\n                  if (!utils.isObject(nextItem)) {\n                    throw new globalObject.TypeError(\n                      \"Failed to construct 'URLSearchParams': parameter 1\" +\n                        \" sequence\" +\n                        \"'s element\" +\n                        \" is not an iterable object.\"\n                    );\n                  } else {\n                    const V = [];\n                    const tmp = nextItem;\n                    for (let nextItem of tmp) {\n                      nextItem = conversions[\"USVString\"](nextItem, {\n                        context:\n                          \"Failed to construct 'URLSearchParams': parameter 1\" +\n                          \" sequence\" +\n                          \"'s element\" +\n                          \"'s element\",\n                        globals: globalObject\n                      });\n\n                      V.push(nextItem);\n                    }\n                    nextItem = V;\n                  }\n\n                  V.push(nextItem);\n                }\n                curArg = V;\n              }\n            } else {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \" is not an object.\"\n                );\n              } else {\n                const result = Object.create(null);\n                for (const key of Reflect.ownKeys(curArg)) {\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\n                  if (desc && desc.enumerable) {\n                    let typedKey = key;\n\n                    typedKey = conversions[\"USVString\"](typedKey, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s key\",\n                      globals: globalObject\n                    });\n\n                    let typedValue = curArg[key];\n\n                    typedValue = conversions[\"USVString\"](typedValue, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s value\",\n                      globals: globalObject\n                    });\n\n                    result[typedKey] = typedValue;\n                  }\n                }\n                curArg = result;\n              }\n            }\n          } else {\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to construct 'URLSearchParams': parameter 1\",\n              globals: globalObject\n            });\n          }\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'append' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'append' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].append(...args));\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'delete' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'delete' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].delete(...args));\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'get' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'getAll' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'getAll' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'has' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'has' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'set' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].set(...args));\n    }\n\n    sort() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'sort' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].sort());\n    }\n\n    toString() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'toString' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      return esValue[implSymbol].toString();\n    }\n\n    keys() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'keys' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key\");\n    }\n\n    values() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'values' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"value\");\n    }\n\n    entries() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'entries' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'forEach' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          \"Failed to execute 'forEach' on 'iterable': 1 argument required, but only 0 present.\"\n        );\n      }\n      callback = Function.convert(globalObject, callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(URLSearchParams.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    sort: { enumerable: true },\n    toString: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URLSearchParams\", configurable: true },\n    [Symbol.iterator]: { value: URLSearchParams.prototype.entries, configurable: true, writable: true }\n  });\n  ctorRegistry[interfaceName] = URLSearchParams;\n\n  ctorRegistry[\"URLSearchParams Iterator\"] = Object.create(ctorRegistry[\"%IteratorPrototype%\"], {\n    [Symbol.toStringTag]: {\n      configurable: true,\n      value: \"URLSearchParams Iterator\"\n    }\n  });\n  utils.define(ctorRegistry[\"URLSearchParams Iterator\"], {\n    next() {\n      const internal = this && this[utils.iterInternalSymbol];\n      if (!internal) {\n        throw new globalObject.TypeError(\"next() called on a value that is not a URLSearchParams iterator object\");\n      }\n\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return newObjectInRealm(globalObject, { value: undefined, done: true });\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      return newObjectInRealm(globalObject, utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind));\n    }\n  });\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URLSearchParams\n  });\n};\n\nconst Impl = require(\"./URLSearchParams-impl.js\");\n","\"use strict\";\nconst utf8Encoder = new TextEncoder();\nconst utf8Decoder = new TextDecoder(\"utf-8\", { ignoreBOM: true });\n\nfunction utf8Encode(string) {\n  return utf8Encoder.encode(string);\n}\n\nfunction utf8DecodeWithoutBOM(bytes) {\n  return utf8Decoder.decode(bytes);\n}\n\nmodule.exports = {\n  utf8Encode,\n  utf8DecodeWithoutBOM\n};\n","\"use strict\";\n\n// Note that we take code points as JS numbers, not JS strings.\n\nfunction isASCIIDigit(c) {\n  return c >= 0x30 && c <= 0x39;\n}\n\nfunction isASCIIAlpha(c) {\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\n}\n\nfunction isASCIIAlphanumeric(c) {\n  return isASCIIAlpha(c) || isASCIIDigit(c);\n}\n\nfunction isASCIIHex(c) {\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\n}\n\nmodule.exports = {\n  isASCIIDigit,\n  isASCIIAlpha,\n  isASCIIAlphanumeric,\n  isASCIIHex\n};\n","\"use strict\";\nconst { isASCIIHex } = require(\"./infra\");\nconst { utf8Encode } = require(\"./encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#percent-encode\nfunction percentEncode(c) {\n  let hex = c.toString(16).toUpperCase();\n  if (hex.length === 1) {\n    hex = `0${hex}`;\n  }\n\n  return `%${hex}`;\n}\n\n// https://url.spec.whatwg.org/#percent-decode\nfunction percentDecodeBytes(input) {\n  const output = new Uint8Array(input.byteLength);\n  let outputIndex = 0;\n  for (let i = 0; i < input.byteLength; ++i) {\n    const byte = input[i];\n    if (byte !== 0x25) {\n      output[outputIndex++] = byte;\n    } else if (byte === 0x25 && (!isASCIIHex(input[i + 1]) || !isASCIIHex(input[i + 2]))) {\n      output[outputIndex++] = byte;\n    } else {\n      const bytePoint = parseInt(String.fromCodePoint(input[i + 1], input[i + 2]), 16);\n      output[outputIndex++] = bytePoint;\n      i += 2;\n    }\n  }\n\n  return output.slice(0, outputIndex);\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\nfunction percentDecodeString(input) {\n  const bytes = utf8Encode(input);\n  return percentDecodeBytes(bytes);\n}\n\n// https://url.spec.whatwg.org/#c0-control-percent-encode-set\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\n// https://url.spec.whatwg.org/#fragment-percent-encode-set\nconst extraFragmentPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"<\"), p(\">\"), p(\"`\")]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#query-percent-encode-set\nconst extraQueryPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"#\"), p(\"<\"), p(\">\")]);\nfunction isQueryPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraQueryPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#special-query-percent-encode-set\nfunction isSpecialQueryPercentEncode(c) {\n  return isQueryPercentEncode(c) || c === p(\"'\");\n}\n\n// https://url.spec.whatwg.org/#path-percent-encode-set\nconst extraPathPercentEncodeSet = new Set([p(\"?\"), p(\"`\"), p(\"{\"), p(\"}\")]);\nfunction isPathPercentEncode(c) {\n  return isQueryPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#userinfo-percent-encode-set\nconst extraUserinfoPercentEncodeSet =\n  new Set([p(\"/\"), p(\":\"), p(\";\"), p(\"=\"), p(\"@\"), p(\"[\"), p(\"\\\\\"), p(\"]\"), p(\"^\"), p(\"|\")]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#component-percent-encode-set\nconst extraComponentPercentEncodeSet = new Set([p(\"$\"), p(\"%\"), p(\"&\"), p(\"+\"), p(\",\")]);\nfunction isComponentPercentEncode(c) {\n  return isUserinfoPercentEncode(c) || extraComponentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#application-x-www-form-urlencoded-percent-encode-set\nconst extraURLEncodedPercentEncodeSet = new Set([p(\"!\"), p(\"'\"), p(\"(\"), p(\")\"), p(\"~\")]);\nfunction isURLEncodedPercentEncode(c) {\n  return isComponentPercentEncode(c) || extraURLEncodedPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#code-point-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#utf-8-percent-encode\n// Assuming encoding is always utf-8 allows us to trim one of the logic branches. TODO: support encoding.\n// The \"-Internal\" variant here has code points as JS strings. The external version used by other files has code points\n// as JS numbers, like the rest of the codebase.\nfunction utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate) {\n  const bytes = utf8Encode(codePoint);\n  let output = \"\";\n  for (const byte of bytes) {\n    // Our percentEncodePredicate operates on bytes, not code points, so this is slightly different from the spec.\n    if (!percentEncodePredicate(byte)) {\n      output += String.fromCharCode(byte);\n    } else {\n      output += percentEncode(byte);\n    }\n  }\n\n  return output;\n}\n\nfunction utf8PercentEncodeCodePoint(codePoint, percentEncodePredicate) {\n  return utf8PercentEncodeCodePointInternal(String.fromCodePoint(codePoint), percentEncodePredicate);\n}\n\n// https://url.spec.whatwg.org/#string-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#string-utf-8-percent-encode\nfunction utf8PercentEncodeString(input, percentEncodePredicate, spaceAsPlus = false) {\n  let output = \"\";\n  for (const codePoint of input) {\n    if (spaceAsPlus && codePoint === \" \") {\n      output += \"+\";\n    } else {\n      output += utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate);\n    }\n  }\n  return output;\n}\n\nmodule.exports = {\n  isC0ControlPercentEncode,\n  isFragmentPercentEncode,\n  isQueryPercentEncode,\n  isSpecialQueryPercentEncode,\n  isPathPercentEncode,\n  isUserinfoPercentEncode,\n  isURLEncodedPercentEncode,\n  percentDecodeString,\n  percentDecodeBytes,\n  utf8PercentEncodeString,\n  utf8PercentEncodeCodePoint\n};\n","\"use strict\";\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeString, utf8PercentEncodeCodePoint, utf8PercentEncodeString, isC0ControlPercentEncode,\n  isFragmentPercentEncode, isQueryPercentEncode, isSpecialQueryPercentEncode, isPathPercentEncode,\n  isUserinfoPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return [...str].length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === p(\":\") || cp2 === p(\"|\"));\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction parseIPv4Number(input) {\n  if (input === \"\") {\n    return failure;\n  }\n\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/u;\n  if (R === 10) {\n    regex = /[^0-9]/u;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/u;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return failure;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return failure;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= 256 ** (5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * 256 ** (3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = `.${output}`;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = Array.from(input, c => c.codePointAt(0));\n\n  if (input[pointer] === p(\":\")) {\n    if (input[pointer + 1] !== p(\":\")) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === p(\":\")) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === p(\".\")) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === p(\".\") && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === p(\":\")) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const compress = findLongestZeroSequence(address);\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = utf8DecodeWithoutBOM(percentDecodeString(input));\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  if (endsInANumber(asciiDomain)) {\n    return parseIPv4(asciiDomain);\n  }\n\n  return asciiDomain;\n}\n\nfunction endsInANumber(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length === 1) {\n      return false;\n    }\n    parts.pop();\n  }\n\n  const last = parts[parts.length - 1];\n  if (parseIPv4Number(last) !== failure) {\n    return true;\n  }\n\n  if (/^[0-9]+$/u.test(last)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n\n  return utf8PercentEncodeString(input, isC0ControlPercentEncode);\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    return currStart;\n  }\n\n  return maxIdx;\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return `[${serializeIPv6(host)}]`;\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null || result === \"\") {\n    return failure;\n  }\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/ug, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/ug, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || hasAnOpaquePath(url) || url.scheme === \"file\";\n}\n\nfunction hasAnOpaquePath(url) {\n  return typeof url.path === \"string\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/u.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = Array.from(this.input, c => c.codePointAt(0));\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[`parse ${this.state}`](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === p(\"+\") || c === p(\"-\") || c === p(\".\")) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === p(\":\")) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && this.url.host === \"\") {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== p(\"/\") || this.input[this.pointer + 2] !== p(\"/\")) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === p(\"/\")) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.path = \"\";\n      this.state = \"opaque path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (hasAnOpaquePath(this.base) && c !== p(\"#\"))) {\n    return failure;\n  } else if (hasAnOpaquePath(this.base) && c === p(\"#\")) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path;\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (c === p(\"/\")) {\n    this.state = \"relative slash\";\n  } else if (isSpecial(this.url) && c === p(\"\\\\\")) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      this.url.path.pop();\n      this.state = \"path\";\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === p(\"/\") || c === p(\"\\\\\"))) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === p(\"@\")) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = `%40${this.buffer}`;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === p(\":\") && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = utf8PercentEncodeCodePoint(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === p(\":\") && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === p(\"[\")) {\n      this.arrFlag = true;\n    } else if (c === p(\"]\")) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\")) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > 2 ** 16 - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([p(\"/\"), p(\"\\\\\"), p(\"?\"), p(\"#\")]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  this.url.host = \"\";\n\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    this.url.host = this.base.host;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n        this.url.path = [];\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\") {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer) &&\n          isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      }\n      this.url.host = this.base.host;\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === p(\"/\") || c === p(\"\\\\\") || c === p(\"?\") || c === p(\"#\")) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== p(\"/\")) {\n      --this.pointer;\n    }\n  } else if (this.stateOverride && this.url.host === null) {\n    this.url.path.push(\"\");\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === p(\"/\") || (isSpecial(this.url) && c === p(\"\\\\\")) ||\n      (!this.stateOverride && (c === p(\"?\") || c === p(\"#\")))) {\n    if (isSpecial(this.url) && c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== p(\"/\") && !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== p(\"/\") &&\n               !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        this.buffer = `${this.buffer[0]}:`;\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += utf8PercentEncodeCodePoint(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse opaque path\"] = function parseOpaquePath(c) {\n  if (c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== p(\"%\")) {\n      this.parseError = true;\n    }\n\n    if (c === p(\"%\") &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path += utf8PercentEncodeCodePoint(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n    this.encodingOverride = \"utf-8\";\n  }\n\n  if ((!this.stateOverride && c === p(\"#\")) || isNaN(c)) {\n    const queryPercentEncodePredicate = isSpecial(this.url) ? isSpecialQueryPercentEncode : isQueryPercentEncode;\n    this.url.query += utf8PercentEncodeString(this.buffer, queryPercentEncodePredicate);\n\n    this.buffer = \"\";\n\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += utf8PercentEncodeCodePoint(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = `${url.scheme}:`;\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += `:${url.password}`;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += `:${url.port}`;\n    }\n  }\n\n  if (url.host === null && !hasAnOpaquePath(url) && url.path.length > 1 && url.path[0] === \"\") {\n    output += \"/.\";\n  }\n  output += serializePath(url);\n\n  if (url.query !== null) {\n    output += `?${url.query}`;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += `#${url.fragment}`;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = `${tuple.scheme}://`;\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += `:${tuple.port}`;\n  }\n\n  return result;\n}\n\nfunction serializePath(url) {\n  if (hasAnOpaquePath(url)) {\n    return url.path;\n  }\n\n  let output = \"\";\n  for (const segment of url.path) {\n    output += `/${segment}`;\n  }\n  return output;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializePath = serializePath;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(serializePath(url)));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = utf8PercentEncodeString(username, isUserinfoPercentEncode);\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = utf8PercentEncodeString(password, isUserinfoPercentEncode);\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.hasAnOpaquePath = hasAnOpaquePath;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n","\"use strict\";\nconst { utf8Encode, utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeBytes, utf8PercentEncodeString, isURLEncodedPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseUrlencoded(input) {\n  const sequences = strictlySplitByteSequence(input, p(\"&\"));\n  const output = [];\n  for (const bytes of sequences) {\n    if (bytes.length === 0) {\n      continue;\n    }\n\n    let name, value;\n    const indexOfEqual = bytes.indexOf(p(\"=\"));\n\n    if (indexOfEqual >= 0) {\n      name = bytes.slice(0, indexOfEqual);\n      value = bytes.slice(indexOfEqual + 1);\n    } else {\n      name = bytes;\n      value = new Uint8Array(0);\n    }\n\n    name = replaceByteInByteSequence(name, 0x2B, 0x20);\n    value = replaceByteInByteSequence(value, 0x2B, 0x20);\n\n    const nameString = utf8DecodeWithoutBOM(percentDecodeBytes(name));\n    const valueString = utf8DecodeWithoutBOM(percentDecodeBytes(value));\n\n    output.push([nameString, valueString]);\n  }\n  return output;\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-string-parser\nfunction parseUrlencodedString(input) {\n  return parseUrlencoded(utf8Encode(input));\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeUrlencoded(tuples, encodingOverride = undefined) {\n  let encoding = \"utf-8\";\n  if (encodingOverride !== undefined) {\n    // TODO \"get the output encoding\", i.e. handle encoding labels vs. names.\n    encoding = encodingOverride;\n  }\n\n  let output = \"\";\n  for (const [i, tuple] of tuples.entries()) {\n    // TODO: handle encoding override\n\n    const name = utf8PercentEncodeString(tuple[0], isURLEncodedPercentEncode, true);\n\n    let value = tuple[1];\n    if (tuple.length > 2 && tuple[2] !== undefined) {\n      if (tuple[2] === \"hidden\" && name === \"_charset_\") {\n        value = encoding;\n      } else if (tuple[2] === \"file\") {\n        // value is a File object\n        value = value.name;\n      }\n    }\n\n    value = utf8PercentEncodeString(value, isURLEncodedPercentEncode, true);\n\n    if (i !== 0) {\n      output += \"&\";\n    }\n    output += `${name}=${value}`;\n  }\n  return output;\n}\n\nfunction strictlySplitByteSequence(buf, cp) {\n  const list = [];\n  let last = 0;\n  let i = buf.indexOf(cp);\n  while (i >= 0) {\n    list.push(buf.slice(last, i));\n    last = i + 1;\n    i = buf.indexOf(cp, last);\n  }\n  if (last !== buf.length) {\n    list.push(buf.slice(last));\n  }\n  return list;\n}\n\nfunction replaceByteInByteSequence(buf, from, to) {\n  let i = buf.indexOf(from);\n  while (i >= 0) {\n    buf[i] = to;\n    i = buf.indexOf(from, i + 1);\n  }\n  return buf;\n}\n\nmodule.exports = {\n  parseUrlencodedString,\n  serializeUrlencoded\n};\n","\"use strict\";\n\n// Returns \"Type(value) is Object\" in ES terminology.\nfunction isObject(value) {\n  return (typeof value === \"object\" && value !== null) || typeof value === \"function\";\n}\n\nconst hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n\n// Like `Object.assign`, but using `[[GetOwnProperty]]` and `[[DefineOwnProperty]]`\n// instead of `[[Get]]` and `[[Set]]` and only allowing objects\nfunction define(target, source) {\n  for (const key of Reflect.ownKeys(source)) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(source, key);\n    if (descriptor && !Reflect.defineProperty(target, key, descriptor)) {\n      throw new TypeError(`Cannot redefine property: ${String(key)}`);\n    }\n  }\n}\n\nfunction newObjectInRealm(globalObject, object) {\n  const ctorRegistry = initCtorRegistry(globalObject);\n  return Object.defineProperties(\n    Object.create(ctorRegistry[\"%Object.prototype%\"]),\n    Object.getOwnPropertyDescriptors(object)\n  );\n}\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\nconst sameObjectCaches = Symbol(\"SameObject caches\");\nconst ctorRegistrySymbol = Symbol.for(\"[webidl2js] constructor registry\");\n\nconst AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {}).prototype);\n\nfunction initCtorRegistry(globalObject) {\n  if (hasOwn(globalObject, ctorRegistrySymbol)) {\n    return globalObject[ctorRegistrySymbol];\n  }\n\n  const ctorRegistry = Object.create(null);\n\n  // In addition to registering all the WebIDL2JS-generated types in the constructor registry,\n  // we also register a few intrinsics that we make use of in generated code, since they are not\n  // easy to grab from the globalObject variable.\n  ctorRegistry[\"%Object.prototype%\"] = globalObject.Object.prototype;\n  ctorRegistry[\"%IteratorPrototype%\"] = Object.getPrototypeOf(\n    Object.getPrototypeOf(new globalObject.Array()[Symbol.iterator]())\n  );\n\n  try {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        globalObject.eval(\"(async function* () {})\").prototype\n      )\n    );\n  } catch {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = AsyncIteratorPrototype;\n  }\n\n  globalObject[ctorRegistrySymbol] = ctorRegistry;\n  return ctorRegistry;\n}\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nconst iterInternalSymbol = Symbol(\"internal\");\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n  const i = P >>> 0;\n  if (i === 2 ** 32 - 1) {\n    return false;\n  }\n  const s = `${i}`;\n  if (P !== s) {\n    return false;\n  }\n  return true;\n}\n\nconst byteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nfunction isArrayBuffer(value) {\n  try {\n    byteLengthGetter.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction iteratorResult([key, value], kind) {\n  let result;\n  switch (kind) {\n    case \"key\":\n      result = key;\n      break;\n    case \"value\":\n      result = value;\n      break;\n    case \"key+value\":\n      result = [key, value];\n      break;\n  }\n  return { value: result, done: false };\n}\n\nconst supportsPropertyIndex = Symbol(\"supports property index\");\nconst supportedPropertyIndices = Symbol(\"supported property indices\");\nconst supportsPropertyName = Symbol(\"supports property name\");\nconst supportedPropertyNames = Symbol(\"supported property names\");\nconst indexedGet = Symbol(\"indexed property get\");\nconst indexedSetNew = Symbol(\"indexed property set new\");\nconst indexedSetExisting = Symbol(\"indexed property set existing\");\nconst namedGet = Symbol(\"named property get\");\nconst namedSetNew = Symbol(\"named property set new\");\nconst namedSetExisting = Symbol(\"named property set existing\");\nconst namedDelete = Symbol(\"named property delete\");\n\nconst asyncIteratorNext = Symbol(\"async iterator get the next iteration result\");\nconst asyncIteratorReturn = Symbol(\"async iterator return steps\");\nconst asyncIteratorInit = Symbol(\"async iterator initialization steps\");\nconst asyncIteratorEOI = Symbol(\"async iterator end of iteration\");\n\nmodule.exports = exports = {\n  isObject,\n  hasOwn,\n  define,\n  newObjectInRealm,\n  wrapperSymbol,\n  implSymbol,\n  getSameObject,\n  ctorRegistrySymbol,\n  initCtorRegistry,\n  wrapperForImpl,\n  implForWrapper,\n  tryWrapperForImpl,\n  tryImplForWrapper,\n  iterInternalSymbol,\n  isArrayBuffer,\n  isArrayIndexPropName,\n  supportsPropertyIndex,\n  supportedPropertyIndices,\n  supportsPropertyName,\n  supportedPropertyNames,\n  indexedGet,\n  indexedSetNew,\n  indexedSetExisting,\n  namedGet,\n  namedSetNew,\n  namedSetExisting,\n  namedDelete,\n  asyncIteratorNext,\n  asyncIteratorReturn,\n  asyncIteratorInit,\n  asyncIteratorEOI,\n  iteratorResult\n};\n","\"use strict\";\n\nconst URL = require(\"./lib/URL\");\nconst URLSearchParams = require(\"./lib/URLSearchParams\");\n\nexports.URL = URL;\nexports.URLSearchParams = URLSearchParams;\n","'use strict';\n\nconst BSON_MAJOR_VERSION = 5;\nconst BSON_INT32_MAX = 0x7fffffff;\nconst BSON_INT32_MIN = -0x80000000;\nconst BSON_INT64_MAX = Math.pow(2, 63) - 1;\nconst BSON_INT64_MIN = -Math.pow(2, 63);\nconst JS_INT_MAX = Math.pow(2, 53);\nconst JS_INT_MIN = -Math.pow(2, 53);\nconst BSON_DATA_NUMBER = 1;\nconst BSON_DATA_STRING = 2;\nconst BSON_DATA_OBJECT = 3;\nconst BSON_DATA_ARRAY = 4;\nconst BSON_DATA_BINARY = 5;\nconst BSON_DATA_UNDEFINED = 6;\nconst BSON_DATA_OID = 7;\nconst BSON_DATA_BOOLEAN = 8;\nconst BSON_DATA_DATE = 9;\nconst BSON_DATA_NULL = 10;\nconst BSON_DATA_REGEXP = 11;\nconst BSON_DATA_DBPOINTER = 12;\nconst BSON_DATA_CODE = 13;\nconst BSON_DATA_SYMBOL = 14;\nconst BSON_DATA_CODE_W_SCOPE = 15;\nconst BSON_DATA_INT = 16;\nconst BSON_DATA_TIMESTAMP = 17;\nconst BSON_DATA_LONG = 18;\nconst BSON_DATA_DECIMAL128 = 19;\nconst BSON_DATA_MIN_KEY = 0xff;\nconst BSON_DATA_MAX_KEY = 0x7f;\nconst BSON_BINARY_SUBTYPE_DEFAULT = 0;\nconst BSON_BINARY_SUBTYPE_UUID_NEW = 4;\nconst BSONType = Object.freeze({\n    double: 1,\n    string: 2,\n    object: 3,\n    array: 4,\n    binData: 5,\n    undefined: 6,\n    objectId: 7,\n    bool: 8,\n    date: 9,\n    null: 10,\n    regex: 11,\n    dbPointer: 12,\n    javascript: 13,\n    symbol: 14,\n    javascriptWithScope: 15,\n    int: 16,\n    timestamp: 17,\n    long: 18,\n    decimal: 19,\n    minKey: -1,\n    maxKey: 127\n});\n\nclass BSONError extends Error {\n    get bsonError() {\n        return true;\n    }\n    get name() {\n        return 'BSONError';\n    }\n    constructor(message) {\n        super(message);\n    }\n    static isBSONError(value) {\n        return (value != null &&\n            typeof value === 'object' &&\n            'bsonError' in value &&\n            value.bsonError === true &&\n            'name' in value &&\n            'message' in value &&\n            'stack' in value);\n    }\n}\nclass BSONVersionError extends BSONError {\n    get name() {\n        return 'BSONVersionError';\n    }\n    constructor() {\n        super(`Unsupported BSON version, bson types must be from bson ${BSON_MAJOR_VERSION}.0 or later`);\n    }\n}\nclass BSONRuntimeError extends BSONError {\n    get name() {\n        return 'BSONRuntimeError';\n    }\n    constructor(message) {\n        super(message);\n    }\n}\n\nfunction nodejsMathRandomBytes(byteLength) {\n    return nodeJsByteUtils.fromNumberArray(Array.from({ length: byteLength }, () => Math.floor(Math.random() * 256)));\n}\nconst nodejsRandomBytes = (() => {\n    try {\n        return require('crypto').randomBytes;\n    }\n    catch {\n        return nodejsMathRandomBytes;\n    }\n})();\nconst nodeJsByteUtils = {\n    toLocalBufferType(potentialBuffer) {\n        if (Buffer.isBuffer(potentialBuffer)) {\n            return potentialBuffer;\n        }\n        if (ArrayBuffer.isView(potentialBuffer)) {\n            return Buffer.from(potentialBuffer.buffer, potentialBuffer.byteOffset, potentialBuffer.byteLength);\n        }\n        const stringTag = potentialBuffer?.[Symbol.toStringTag] ?? Object.prototype.toString.call(potentialBuffer);\n        if (stringTag === 'ArrayBuffer' ||\n            stringTag === 'SharedArrayBuffer' ||\n            stringTag === '[object ArrayBuffer]' ||\n            stringTag === '[object SharedArrayBuffer]') {\n            return Buffer.from(potentialBuffer);\n        }\n        throw new BSONError(`Cannot create Buffer from ${String(potentialBuffer)}`);\n    },\n    allocate(size) {\n        return Buffer.alloc(size);\n    },\n    equals(a, b) {\n        return nodeJsByteUtils.toLocalBufferType(a).equals(b);\n    },\n    fromNumberArray(array) {\n        return Buffer.from(array);\n    },\n    fromBase64(base64) {\n        return Buffer.from(base64, 'base64');\n    },\n    toBase64(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('base64');\n    },\n    fromISO88591(codePoints) {\n        return Buffer.from(codePoints, 'binary');\n    },\n    toISO88591(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('binary');\n    },\n    fromHex(hex) {\n        return Buffer.from(hex, 'hex');\n    },\n    toHex(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('hex');\n    },\n    fromUTF8(text) {\n        return Buffer.from(text, 'utf8');\n    },\n    toUTF8(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('utf8');\n    },\n    utf8ByteLength(input) {\n        return Buffer.byteLength(input, 'utf8');\n    },\n    encodeUTF8Into(buffer, source, byteOffset) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).write(source, byteOffset, undefined, 'utf8');\n    },\n    randomBytes: nodejsRandomBytes\n};\n\nfunction isReactNative() {\n    const { navigator } = globalThis;\n    return typeof navigator === 'object' && navigator.product === 'ReactNative';\n}\nfunction webMathRandomBytes(byteLength) {\n    if (byteLength < 0) {\n        throw new RangeError(`The argument 'byteLength' is invalid. Received ${byteLength}`);\n    }\n    return webByteUtils.fromNumberArray(Array.from({ length: byteLength }, () => Math.floor(Math.random() * 256)));\n}\nconst webRandomBytes = (() => {\n    const { crypto } = globalThis;\n    if (crypto != null && typeof crypto.getRandomValues === 'function') {\n        return (byteLength) => {\n            return crypto.getRandomValues(webByteUtils.allocate(byteLength));\n        };\n    }\n    else {\n        if (isReactNative()) {\n            const { console } = globalThis;\n            console?.warn?.('BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values.');\n        }\n        return webMathRandomBytes;\n    }\n})();\nconst HEX_DIGIT = /(\\d|[a-f])/i;\nconst webByteUtils = {\n    toLocalBufferType(potentialUint8array) {\n        const stringTag = potentialUint8array?.[Symbol.toStringTag] ??\n            Object.prototype.toString.call(potentialUint8array);\n        if (stringTag === 'Uint8Array') {\n            return potentialUint8array;\n        }\n        if (ArrayBuffer.isView(potentialUint8array)) {\n            return new Uint8Array(potentialUint8array.buffer.slice(potentialUint8array.byteOffset, potentialUint8array.byteOffset + potentialUint8array.byteLength));\n        }\n        if (stringTag === 'ArrayBuffer' ||\n            stringTag === 'SharedArrayBuffer' ||\n            stringTag === '[object ArrayBuffer]' ||\n            stringTag === '[object SharedArrayBuffer]') {\n            return new Uint8Array(potentialUint8array);\n        }\n        throw new BSONError(`Cannot make a Uint8Array from ${String(potentialUint8array)}`);\n    },\n    allocate(size) {\n        if (typeof size !== 'number') {\n            throw new TypeError(`The \"size\" argument must be of type number. Received ${String(size)}`);\n        }\n        return new Uint8Array(size);\n    },\n    equals(a, b) {\n        if (a.byteLength !== b.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < a.byteLength; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    },\n    fromNumberArray(array) {\n        return Uint8Array.from(array);\n    },\n    fromBase64(base64) {\n        return Uint8Array.from(atob(base64), c => c.charCodeAt(0));\n    },\n    toBase64(uint8array) {\n        return btoa(webByteUtils.toISO88591(uint8array));\n    },\n    fromISO88591(codePoints) {\n        return Uint8Array.from(codePoints, c => c.charCodeAt(0) & 0xff);\n    },\n    toISO88591(uint8array) {\n        return Array.from(Uint16Array.from(uint8array), b => String.fromCharCode(b)).join('');\n    },\n    fromHex(hex) {\n        const evenLengthHex = hex.length % 2 === 0 ? hex : hex.slice(0, hex.length - 1);\n        const buffer = [];\n        for (let i = 0; i < evenLengthHex.length; i += 2) {\n            const firstDigit = evenLengthHex[i];\n            const secondDigit = evenLengthHex[i + 1];\n            if (!HEX_DIGIT.test(firstDigit)) {\n                break;\n            }\n            if (!HEX_DIGIT.test(secondDigit)) {\n                break;\n            }\n            const hexDigit = Number.parseInt(`${firstDigit}${secondDigit}`, 16);\n            buffer.push(hexDigit);\n        }\n        return Uint8Array.from(buffer);\n    },\n    toHex(uint8array) {\n        return Array.from(uint8array, byte => byte.toString(16).padStart(2, '0')).join('');\n    },\n    fromUTF8(text) {\n        return new TextEncoder().encode(text);\n    },\n    toUTF8(uint8array) {\n        return new TextDecoder('utf8', { fatal: false }).decode(uint8array);\n    },\n    utf8ByteLength(input) {\n        return webByteUtils.fromUTF8(input).byteLength;\n    },\n    encodeUTF8Into(buffer, source, byteOffset) {\n        const bytes = webByteUtils.fromUTF8(source);\n        buffer.set(bytes, byteOffset);\n        return bytes.byteLength;\n    },\n    randomBytes: webRandomBytes\n};\n\nconst hasGlobalBuffer = typeof Buffer === 'function' && Buffer.prototype?._isBuffer !== true;\nconst ByteUtils = hasGlobalBuffer ? nodeJsByteUtils : webByteUtils;\nclass BSONDataView extends DataView {\n    static fromUint8Array(input) {\n        return new DataView(input.buffer, input.byteOffset, input.byteLength);\n    }\n}\n\nconst VALIDATION_REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|[0-9a-f]{12}4[0-9a-f]{3}[89ab][0-9a-f]{15})$/i;\nconst uuidValidateString = (str) => typeof str === 'string' && VALIDATION_REGEX.test(str);\nconst uuidHexStringToBuffer = (hexString) => {\n    if (!uuidValidateString(hexString)) {\n        throw new BSONError('UUID string representations must be a 32 or 36 character hex string (dashes excluded/included). Format: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" or \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\".');\n    }\n    const sanitizedHexString = hexString.replace(/-/g, '');\n    return ByteUtils.fromHex(sanitizedHexString);\n};\nfunction bufferToUuidHexString(buffer, includeDashes = true) {\n    if (includeDashes) {\n        return [\n            ByteUtils.toHex(buffer.subarray(0, 4)),\n            ByteUtils.toHex(buffer.subarray(4, 6)),\n            ByteUtils.toHex(buffer.subarray(6, 8)),\n            ByteUtils.toHex(buffer.subarray(8, 10)),\n            ByteUtils.toHex(buffer.subarray(10, 16))\n        ].join('-');\n    }\n    return ByteUtils.toHex(buffer);\n}\n\nfunction isAnyArrayBuffer(value) {\n    return ['[object ArrayBuffer]', '[object SharedArrayBuffer]'].includes(Object.prototype.toString.call(value));\n}\nfunction isUint8Array(value) {\n    return Object.prototype.toString.call(value) === '[object Uint8Array]';\n}\nfunction isRegExp(d) {\n    return Object.prototype.toString.call(d) === '[object RegExp]';\n}\nfunction isMap(d) {\n    return Object.prototype.toString.call(d) === '[object Map]';\n}\nfunction isDate(d) {\n    return Object.prototype.toString.call(d) === '[object Date]';\n}\n\nclass BSONValue {\n    get [Symbol.for('@@mdb.bson.version')]() {\n        return BSON_MAJOR_VERSION;\n    }\n}\n\nclass Binary extends BSONValue {\n    get _bsontype() {\n        return 'Binary';\n    }\n    constructor(buffer, subType) {\n        super();\n        if (!(buffer == null) &&\n            !(typeof buffer === 'string') &&\n            !ArrayBuffer.isView(buffer) &&\n            !(buffer instanceof ArrayBuffer) &&\n            !Array.isArray(buffer)) {\n            throw new BSONError('Binary can only be constructed from string, Buffer, TypedArray, or Array<number>');\n        }\n        this.sub_type = subType ?? Binary.BSON_BINARY_SUBTYPE_DEFAULT;\n        if (buffer == null) {\n            this.buffer = ByteUtils.allocate(Binary.BUFFER_SIZE);\n            this.position = 0;\n        }\n        else {\n            if (typeof buffer === 'string') {\n                this.buffer = ByteUtils.fromISO88591(buffer);\n            }\n            else if (Array.isArray(buffer)) {\n                this.buffer = ByteUtils.fromNumberArray(buffer);\n            }\n            else {\n                this.buffer = ByteUtils.toLocalBufferType(buffer);\n            }\n            this.position = this.buffer.byteLength;\n        }\n    }\n    put(byteValue) {\n        if (typeof byteValue === 'string' && byteValue.length !== 1) {\n            throw new BSONError('only accepts single character String');\n        }\n        else if (typeof byteValue !== 'number' && byteValue.length !== 1)\n            throw new BSONError('only accepts single character Uint8Array or Array');\n        let decodedByte;\n        if (typeof byteValue === 'string') {\n            decodedByte = byteValue.charCodeAt(0);\n        }\n        else if (typeof byteValue === 'number') {\n            decodedByte = byteValue;\n        }\n        else {\n            decodedByte = byteValue[0];\n        }\n        if (decodedByte < 0 || decodedByte > 255) {\n            throw new BSONError('only accepts number in a valid unsigned byte range 0-255');\n        }\n        if (this.buffer.byteLength > this.position) {\n            this.buffer[this.position++] = decodedByte;\n        }\n        else {\n            const newSpace = ByteUtils.allocate(Binary.BUFFER_SIZE + this.buffer.length);\n            newSpace.set(this.buffer, 0);\n            this.buffer = newSpace;\n            this.buffer[this.position++] = decodedByte;\n        }\n    }\n    write(sequence, offset) {\n        offset = typeof offset === 'number' ? offset : this.position;\n        if (this.buffer.byteLength < offset + sequence.length) {\n            const newSpace = ByteUtils.allocate(this.buffer.byteLength + sequence.length);\n            newSpace.set(this.buffer, 0);\n            this.buffer = newSpace;\n        }\n        if (ArrayBuffer.isView(sequence)) {\n            this.buffer.set(ByteUtils.toLocalBufferType(sequence), offset);\n            this.position =\n                offset + sequence.byteLength > this.position ? offset + sequence.length : this.position;\n        }\n        else if (typeof sequence === 'string') {\n            const bytes = ByteUtils.fromISO88591(sequence);\n            this.buffer.set(bytes, offset);\n            this.position =\n                offset + sequence.length > this.position ? offset + sequence.length : this.position;\n        }\n    }\n    read(position, length) {\n        length = length && length > 0 ? length : this.position;\n        return this.buffer.slice(position, position + length);\n    }\n    value(asRaw) {\n        asRaw = !!asRaw;\n        if (asRaw && this.buffer.length === this.position) {\n            return this.buffer;\n        }\n        if (asRaw) {\n            return this.buffer.slice(0, this.position);\n        }\n        return ByteUtils.toISO88591(this.buffer.subarray(0, this.position));\n    }\n    length() {\n        return this.position;\n    }\n    toJSON() {\n        return ByteUtils.toBase64(this.buffer);\n    }\n    toString(encoding) {\n        if (encoding === 'hex')\n            return ByteUtils.toHex(this.buffer);\n        if (encoding === 'base64')\n            return ByteUtils.toBase64(this.buffer);\n        if (encoding === 'utf8' || encoding === 'utf-8')\n            return ByteUtils.toUTF8(this.buffer);\n        return ByteUtils.toUTF8(this.buffer);\n    }\n    toExtendedJSON(options) {\n        options = options || {};\n        const base64String = ByteUtils.toBase64(this.buffer);\n        const subType = Number(this.sub_type).toString(16);\n        if (options.legacy) {\n            return {\n                $binary: base64String,\n                $type: subType.length === 1 ? '0' + subType : subType\n            };\n        }\n        return {\n            $binary: {\n                base64: base64String,\n                subType: subType.length === 1 ? '0' + subType : subType\n            }\n        };\n    }\n    toUUID() {\n        if (this.sub_type === Binary.SUBTYPE_UUID) {\n            return new UUID(this.buffer.slice(0, this.position));\n        }\n        throw new BSONError(`Binary sub_type \"${this.sub_type}\" is not supported for converting to UUID. Only \"${Binary.SUBTYPE_UUID}\" is currently supported.`);\n    }\n    static fromExtendedJSON(doc, options) {\n        options = options || {};\n        let data;\n        let type;\n        if ('$binary' in doc) {\n            if (options.legacy && typeof doc.$binary === 'string' && '$type' in doc) {\n                type = doc.$type ? parseInt(doc.$type, 16) : 0;\n                data = ByteUtils.fromBase64(doc.$binary);\n            }\n            else {\n                if (typeof doc.$binary !== 'string') {\n                    type = doc.$binary.subType ? parseInt(doc.$binary.subType, 16) : 0;\n                    data = ByteUtils.fromBase64(doc.$binary.base64);\n                }\n            }\n        }\n        else if ('$uuid' in doc) {\n            type = 4;\n            data = uuidHexStringToBuffer(doc.$uuid);\n        }\n        if (!data) {\n            throw new BSONError(`Unexpected Binary Extended JSON format ${JSON.stringify(doc)}`);\n        }\n        return type === BSON_BINARY_SUBTYPE_UUID_NEW ? new UUID(data) : new Binary(data, type);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Binary(Buffer.from(\"${ByteUtils.toHex(this.buffer)}\", \"hex\"), ${this.sub_type})`;\n    }\n}\nBinary.BSON_BINARY_SUBTYPE_DEFAULT = 0;\nBinary.BUFFER_SIZE = 256;\nBinary.SUBTYPE_DEFAULT = 0;\nBinary.SUBTYPE_FUNCTION = 1;\nBinary.SUBTYPE_BYTE_ARRAY = 2;\nBinary.SUBTYPE_UUID_OLD = 3;\nBinary.SUBTYPE_UUID = 4;\nBinary.SUBTYPE_MD5 = 5;\nBinary.SUBTYPE_ENCRYPTED = 6;\nBinary.SUBTYPE_COLUMN = 7;\nBinary.SUBTYPE_USER_DEFINED = 128;\nconst UUID_BYTE_LENGTH = 16;\nclass UUID extends Binary {\n    constructor(input) {\n        let bytes;\n        let hexStr;\n        if (input == null) {\n            bytes = UUID.generate();\n        }\n        else if (input instanceof UUID) {\n            bytes = ByteUtils.toLocalBufferType(new Uint8Array(input.buffer));\n            hexStr = input.__id;\n        }\n        else if (ArrayBuffer.isView(input) && input.byteLength === UUID_BYTE_LENGTH) {\n            bytes = ByteUtils.toLocalBufferType(input);\n        }\n        else if (typeof input === 'string') {\n            bytes = uuidHexStringToBuffer(input);\n        }\n        else {\n            throw new BSONError('Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).');\n        }\n        super(bytes, BSON_BINARY_SUBTYPE_UUID_NEW);\n        this.__id = hexStr;\n    }\n    get id() {\n        return this.buffer;\n    }\n    set id(value) {\n        this.buffer = value;\n        if (UUID.cacheHexString) {\n            this.__id = bufferToUuidHexString(value);\n        }\n    }\n    toHexString(includeDashes = true) {\n        if (UUID.cacheHexString && this.__id) {\n            return this.__id;\n        }\n        const uuidHexString = bufferToUuidHexString(this.id, includeDashes);\n        if (UUID.cacheHexString) {\n            this.__id = uuidHexString;\n        }\n        return uuidHexString;\n    }\n    toString(encoding) {\n        if (encoding === 'hex')\n            return ByteUtils.toHex(this.id);\n        if (encoding === 'base64')\n            return ByteUtils.toBase64(this.id);\n        return this.toHexString();\n    }\n    toJSON() {\n        return this.toHexString();\n    }\n    equals(otherId) {\n        if (!otherId) {\n            return false;\n        }\n        if (otherId instanceof UUID) {\n            return ByteUtils.equals(otherId.id, this.id);\n        }\n        try {\n            return ByteUtils.equals(new UUID(otherId).id, this.id);\n        }\n        catch {\n            return false;\n        }\n    }\n    toBinary() {\n        return new Binary(this.id, Binary.SUBTYPE_UUID);\n    }\n    static generate() {\n        const bytes = ByteUtils.randomBytes(UUID_BYTE_LENGTH);\n        bytes[6] = (bytes[6] & 0x0f) | 0x40;\n        bytes[8] = (bytes[8] & 0x3f) | 0x80;\n        return bytes;\n    }\n    static isValid(input) {\n        if (!input) {\n            return false;\n        }\n        if (input instanceof UUID) {\n            return true;\n        }\n        if (typeof input === 'string') {\n            return uuidValidateString(input);\n        }\n        if (isUint8Array(input)) {\n            if (input.byteLength !== UUID_BYTE_LENGTH) {\n                return false;\n            }\n            return (input[6] & 0xf0) === 0x40 && (input[8] & 0x80) === 0x80;\n        }\n        return false;\n    }\n    static createFromHexString(hexString) {\n        const buffer = uuidHexStringToBuffer(hexString);\n        return new UUID(buffer);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new UUID(\"${this.toHexString()}\")`;\n    }\n}\n\nclass Code extends BSONValue {\n    get _bsontype() {\n        return 'Code';\n    }\n    constructor(code, scope) {\n        super();\n        this.code = code.toString();\n        this.scope = scope ?? null;\n    }\n    toJSON() {\n        if (this.scope != null) {\n            return { code: this.code, scope: this.scope };\n        }\n        return { code: this.code };\n    }\n    toExtendedJSON() {\n        if (this.scope) {\n            return { $code: this.code, $scope: this.scope };\n        }\n        return { $code: this.code };\n    }\n    static fromExtendedJSON(doc) {\n        return new Code(doc.$code, doc.$scope);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const codeJson = this.toJSON();\n        return `new Code(\"${String(codeJson.code)}\"${codeJson.scope != null ? `, ${JSON.stringify(codeJson.scope)}` : ''})`;\n    }\n}\n\nfunction isDBRefLike(value) {\n    return (value != null &&\n        typeof value === 'object' &&\n        '$id' in value &&\n        value.$id != null &&\n        '$ref' in value &&\n        typeof value.$ref === 'string' &&\n        (!('$db' in value) || ('$db' in value && typeof value.$db === 'string')));\n}\nclass DBRef extends BSONValue {\n    get _bsontype() {\n        return 'DBRef';\n    }\n    constructor(collection, oid, db, fields) {\n        super();\n        const parts = collection.split('.');\n        if (parts.length === 2) {\n            db = parts.shift();\n            collection = parts.shift();\n        }\n        this.collection = collection;\n        this.oid = oid;\n        this.db = db;\n        this.fields = fields || {};\n    }\n    get namespace() {\n        return this.collection;\n    }\n    set namespace(value) {\n        this.collection = value;\n    }\n    toJSON() {\n        const o = Object.assign({\n            $ref: this.collection,\n            $id: this.oid\n        }, this.fields);\n        if (this.db != null)\n            o.$db = this.db;\n        return o;\n    }\n    toExtendedJSON(options) {\n        options = options || {};\n        let o = {\n            $ref: this.collection,\n            $id: this.oid\n        };\n        if (options.legacy) {\n            return o;\n        }\n        if (this.db)\n            o.$db = this.db;\n        o = Object.assign(o, this.fields);\n        return o;\n    }\n    static fromExtendedJSON(doc) {\n        const copy = Object.assign({}, doc);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new DBRef(doc.$ref, doc.$id, doc.$db, copy);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const oid = this.oid === undefined || this.oid.toString === undefined ? this.oid : this.oid.toString();\n        return `new DBRef(\"${this.namespace}\", new ObjectId(\"${String(oid)}\")${this.db ? `, \"${this.db}\"` : ''})`;\n    }\n}\n\nlet wasm = undefined;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n}\ncatch {\n}\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_24_DBL = 1 << 24;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\nconst INT_CACHE = {};\nconst UINT_CACHE = {};\nconst MAX_INT64_STRING_LENGTH = 20;\nconst DECIMAL_REG_EX = /^(\\+?0|(\\+|-)?[1-9][0-9]*)$/;\nclass Long extends BSONValue {\n    get _bsontype() {\n        return 'Long';\n    }\n    get __isLong__() {\n        return true;\n    }\n    constructor(low = 0, high, unsigned) {\n        super();\n        if (typeof low === 'bigint') {\n            Object.assign(this, Long.fromBigInt(low, !!high));\n        }\n        else if (typeof low === 'string') {\n            Object.assign(this, Long.fromString(low, !!high));\n        }\n        else {\n            this.low = low | 0;\n            this.high = high | 0;\n            this.unsigned = !!unsigned;\n        }\n    }\n    static fromBits(lowBits, highBits, unsigned) {\n        return new Long(lowBits, highBits, unsigned);\n    }\n    static fromInt(value, unsigned) {\n        let obj, cachedObj, cache;\n        if (unsigned) {\n            value >>>= 0;\n            if ((cache = 0 <= value && value < 256)) {\n                cachedObj = UINT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n            if (cache)\n                UINT_CACHE[value] = obj;\n            return obj;\n        }\n        else {\n            value |= 0;\n            if ((cache = -128 <= value && value < 128)) {\n                cachedObj = INT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, value < 0 ? -1 : 0, false);\n            if (cache)\n                INT_CACHE[value] = obj;\n            return obj;\n        }\n    }\n    static fromNumber(value, unsigned) {\n        if (isNaN(value))\n            return unsigned ? Long.UZERO : Long.ZERO;\n        if (unsigned) {\n            if (value < 0)\n                return Long.UZERO;\n            if (value >= TWO_PWR_64_DBL)\n                return Long.MAX_UNSIGNED_VALUE;\n        }\n        else {\n            if (value <= -TWO_PWR_63_DBL)\n                return Long.MIN_VALUE;\n            if (value + 1 >= TWO_PWR_63_DBL)\n                return Long.MAX_VALUE;\n        }\n        if (value < 0)\n            return Long.fromNumber(-value, unsigned).neg();\n        return Long.fromBits(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n    }\n    static fromBigInt(value, unsigned) {\n        return Long.fromString(value.toString(), unsigned);\n    }\n    static fromString(str, unsigned, radix) {\n        if (str.length === 0)\n            throw new BSONError('empty string');\n        if (str === 'NaN' || str === 'Infinity' || str === '+Infinity' || str === '-Infinity')\n            return Long.ZERO;\n        if (typeof unsigned === 'number') {\n            (radix = unsigned), (unsigned = false);\n        }\n        else {\n            unsigned = !!unsigned;\n        }\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw new BSONError('radix');\n        let p;\n        if ((p = str.indexOf('-')) > 0)\n            throw new BSONError('interior hyphen');\n        else if (p === 0) {\n            return Long.fromString(str.substring(1), unsigned, radix).neg();\n        }\n        const radixToPower = Long.fromNumber(Math.pow(radix, 8));\n        let result = Long.ZERO;\n        for (let i = 0; i < str.length; i += 8) {\n            const size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n            if (size < 8) {\n                const power = Long.fromNumber(Math.pow(radix, size));\n                result = result.mul(power).add(Long.fromNumber(value));\n            }\n            else {\n                result = result.mul(radixToPower);\n                result = result.add(Long.fromNumber(value));\n            }\n        }\n        result.unsigned = unsigned;\n        return result;\n    }\n    static fromBytes(bytes, unsigned, le) {\n        return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n    }\n    static fromBytesLE(bytes, unsigned) {\n        return new Long(bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24), bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24), unsigned);\n    }\n    static fromBytesBE(bytes, unsigned) {\n        return new Long((bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7], (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3], unsigned);\n    }\n    static isLong(value) {\n        return (value != null &&\n            typeof value === 'object' &&\n            '__isLong__' in value &&\n            value.__isLong__ === true);\n    }\n    static fromValue(val, unsigned) {\n        if (typeof val === 'number')\n            return Long.fromNumber(val, unsigned);\n        if (typeof val === 'string')\n            return Long.fromString(val, unsigned);\n        return Long.fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n    }\n    add(addend) {\n        if (!Long.isLong(addend))\n            addend = Long.fromValue(addend);\n        const a48 = this.high >>> 16;\n        const a32 = this.high & 0xffff;\n        const a16 = this.low >>> 16;\n        const a00 = this.low & 0xffff;\n        const b48 = addend.high >>> 16;\n        const b32 = addend.high & 0xffff;\n        const b16 = addend.low >>> 16;\n        const b00 = addend.low & 0xffff;\n        let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 + b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 + b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 + b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 + b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    }\n    and(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n    }\n    compare(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.eq(other))\n            return 0;\n        const thisNeg = this.isNegative(), otherNeg = other.isNegative();\n        if (thisNeg && !otherNeg)\n            return -1;\n        if (!thisNeg && otherNeg)\n            return 1;\n        if (!this.unsigned)\n            return this.sub(other).isNegative() ? -1 : 1;\n        return other.high >>> 0 > this.high >>> 0 ||\n            (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n            ? -1\n            : 1;\n    }\n    comp(other) {\n        return this.compare(other);\n    }\n    divide(divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        if (divisor.isZero())\n            throw new BSONError('division by zero');\n        if (wasm) {\n            if (!this.unsigned &&\n                this.high === -0x80000000 &&\n                divisor.low === -1 &&\n                divisor.high === -1) {\n                return this;\n            }\n            const low = (this.unsigned ? wasm.div_u : wasm.div_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (this.isZero())\n            return this.unsigned ? Long.UZERO : Long.ZERO;\n        let approx, rem, res;\n        if (!this.unsigned) {\n            if (this.eq(Long.MIN_VALUE)) {\n                if (divisor.eq(Long.ONE) || divisor.eq(Long.NEG_ONE))\n                    return Long.MIN_VALUE;\n                else if (divisor.eq(Long.MIN_VALUE))\n                    return Long.ONE;\n                else {\n                    const halfThis = this.shr(1);\n                    approx = halfThis.div(divisor).shl(1);\n                    if (approx.eq(Long.ZERO)) {\n                        return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\n                    }\n                    else {\n                        rem = this.sub(divisor.mul(approx));\n                        res = approx.add(rem.div(divisor));\n                        return res;\n                    }\n                }\n            }\n            else if (divisor.eq(Long.MIN_VALUE))\n                return this.unsigned ? Long.UZERO : Long.ZERO;\n            if (this.isNegative()) {\n                if (divisor.isNegative())\n                    return this.neg().div(divisor.neg());\n                return this.neg().div(divisor).neg();\n            }\n            else if (divisor.isNegative())\n                return this.div(divisor.neg()).neg();\n            res = Long.ZERO;\n        }\n        else {\n            if (!divisor.unsigned)\n                divisor = divisor.toUnsigned();\n            if (divisor.gt(this))\n                return Long.UZERO;\n            if (divisor.gt(this.shru(1)))\n                return Long.UONE;\n            res = Long.UZERO;\n        }\n        rem = this;\n        while (rem.gte(divisor)) {\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n            const log2 = Math.ceil(Math.log(approx) / Math.LN2);\n            const delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n            let approxRes = Long.fromNumber(approx);\n            let approxRem = approxRes.mul(divisor);\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\n                approx -= delta;\n                approxRes = Long.fromNumber(approx, this.unsigned);\n                approxRem = approxRes.mul(divisor);\n            }\n            if (approxRes.isZero())\n                approxRes = Long.ONE;\n            res = res.add(approxRes);\n            rem = rem.sub(approxRem);\n        }\n        return res;\n    }\n    div(divisor) {\n        return this.divide(divisor);\n    }\n    equals(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1)\n            return false;\n        return this.high === other.high && this.low === other.low;\n    }\n    eq(other) {\n        return this.equals(other);\n    }\n    getHighBits() {\n        return this.high;\n    }\n    getHighBitsUnsigned() {\n        return this.high >>> 0;\n    }\n    getLowBits() {\n        return this.low;\n    }\n    getLowBitsUnsigned() {\n        return this.low >>> 0;\n    }\n    getNumBitsAbs() {\n        if (this.isNegative()) {\n            return this.eq(Long.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n        }\n        const val = this.high !== 0 ? this.high : this.low;\n        let bit;\n        for (bit = 31; bit > 0; bit--)\n            if ((val & (1 << bit)) !== 0)\n                break;\n        return this.high !== 0 ? bit + 33 : bit + 1;\n    }\n    greaterThan(other) {\n        return this.comp(other) > 0;\n    }\n    gt(other) {\n        return this.greaterThan(other);\n    }\n    greaterThanOrEqual(other) {\n        return this.comp(other) >= 0;\n    }\n    gte(other) {\n        return this.greaterThanOrEqual(other);\n    }\n    ge(other) {\n        return this.greaterThanOrEqual(other);\n    }\n    isEven() {\n        return (this.low & 1) === 0;\n    }\n    isNegative() {\n        return !this.unsigned && this.high < 0;\n    }\n    isOdd() {\n        return (this.low & 1) === 1;\n    }\n    isPositive() {\n        return this.unsigned || this.high >= 0;\n    }\n    isZero() {\n        return this.high === 0 && this.low === 0;\n    }\n    lessThan(other) {\n        return this.comp(other) < 0;\n    }\n    lt(other) {\n        return this.lessThan(other);\n    }\n    lessThanOrEqual(other) {\n        return this.comp(other) <= 0;\n    }\n    lte(other) {\n        return this.lessThanOrEqual(other);\n    }\n    modulo(divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        if (wasm) {\n            const low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        return this.sub(this.div(divisor).mul(divisor));\n    }\n    mod(divisor) {\n        return this.modulo(divisor);\n    }\n    rem(divisor) {\n        return this.modulo(divisor);\n    }\n    multiply(multiplier) {\n        if (this.isZero())\n            return Long.ZERO;\n        if (!Long.isLong(multiplier))\n            multiplier = Long.fromValue(multiplier);\n        if (wasm) {\n            const low = wasm.mul(this.low, this.high, multiplier.low, multiplier.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (multiplier.isZero())\n            return Long.ZERO;\n        if (this.eq(Long.MIN_VALUE))\n            return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (multiplier.eq(Long.MIN_VALUE))\n            return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (this.isNegative()) {\n            if (multiplier.isNegative())\n                return this.neg().mul(multiplier.neg());\n            else\n                return this.neg().mul(multiplier).neg();\n        }\n        else if (multiplier.isNegative())\n            return this.mul(multiplier.neg()).neg();\n        if (this.lt(Long.TWO_PWR_24) && multiplier.lt(Long.TWO_PWR_24))\n            return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n        const a48 = this.high >>> 16;\n        const a32 = this.high & 0xffff;\n        const a16 = this.low >>> 16;\n        const a00 = this.low & 0xffff;\n        const b48 = multiplier.high >>> 16;\n        const b32 = multiplier.high & 0xffff;\n        const b16 = multiplier.low >>> 16;\n        const b00 = multiplier.low & 0xffff;\n        let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 * b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 * b00;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c16 += a00 * b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 * b00;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a16 * b16;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a00 * b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    }\n    mul(multiplier) {\n        return this.multiply(multiplier);\n    }\n    negate() {\n        if (!this.unsigned && this.eq(Long.MIN_VALUE))\n            return Long.MIN_VALUE;\n        return this.not().add(Long.ONE);\n    }\n    neg() {\n        return this.negate();\n    }\n    not() {\n        return Long.fromBits(~this.low, ~this.high, this.unsigned);\n    }\n    notEquals(other) {\n        return !this.equals(other);\n    }\n    neq(other) {\n        return this.notEquals(other);\n    }\n    ne(other) {\n        return this.notEquals(other);\n    }\n    or(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n    }\n    shiftLeft(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n        else\n            return Long.fromBits(0, this.low << (numBits - 32), this.unsigned);\n    }\n    shl(numBits) {\n        return this.shiftLeft(numBits);\n    }\n    shiftRight(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n        else\n            return Long.fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n    }\n    shr(numBits) {\n        return this.shiftRight(numBits);\n    }\n    shiftRightUnsigned(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        numBits &= 63;\n        if (numBits === 0)\n            return this;\n        else {\n            const high = this.high;\n            if (numBits < 32) {\n                const low = this.low;\n                return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\n            }\n            else if (numBits === 32)\n                return Long.fromBits(high, 0, this.unsigned);\n            else\n                return Long.fromBits(high >>> (numBits - 32), 0, this.unsigned);\n        }\n    }\n    shr_u(numBits) {\n        return this.shiftRightUnsigned(numBits);\n    }\n    shru(numBits) {\n        return this.shiftRightUnsigned(numBits);\n    }\n    subtract(subtrahend) {\n        if (!Long.isLong(subtrahend))\n            subtrahend = Long.fromValue(subtrahend);\n        return this.add(subtrahend.neg());\n    }\n    sub(subtrahend) {\n        return this.subtract(subtrahend);\n    }\n    toInt() {\n        return this.unsigned ? this.low >>> 0 : this.low;\n    }\n    toNumber() {\n        if (this.unsigned)\n            return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    }\n    toBigInt() {\n        return BigInt(this.toString());\n    }\n    toBytes(le) {\n        return le ? this.toBytesLE() : this.toBytesBE();\n    }\n    toBytesLE() {\n        const hi = this.high, lo = this.low;\n        return [\n            lo & 0xff,\n            (lo >>> 8) & 0xff,\n            (lo >>> 16) & 0xff,\n            lo >>> 24,\n            hi & 0xff,\n            (hi >>> 8) & 0xff,\n            (hi >>> 16) & 0xff,\n            hi >>> 24\n        ];\n    }\n    toBytesBE() {\n        const hi = this.high, lo = this.low;\n        return [\n            hi >>> 24,\n            (hi >>> 16) & 0xff,\n            (hi >>> 8) & 0xff,\n            hi & 0xff,\n            lo >>> 24,\n            (lo >>> 16) & 0xff,\n            (lo >>> 8) & 0xff,\n            lo & 0xff\n        ];\n    }\n    toSigned() {\n        if (!this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, false);\n    }\n    toString(radix) {\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw new BSONError('radix');\n        if (this.isZero())\n            return '0';\n        if (this.isNegative()) {\n            if (this.eq(Long.MIN_VALUE)) {\n                const radixLong = Long.fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);\n                return div.toString(radix) + rem1.toInt().toString(radix);\n            }\n            else\n                return '-' + this.neg().toString(radix);\n        }\n        const radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned);\n        let rem = this;\n        let result = '';\n        while (true) {\n            const remDiv = rem.div(radixToPower);\n            const intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0;\n            let digits = intval.toString(radix);\n            rem = remDiv;\n            if (rem.isZero()) {\n                return digits + result;\n            }\n            else {\n                while (digits.length < 6)\n                    digits = '0' + digits;\n                result = '' + digits + result;\n            }\n        }\n    }\n    toUnsigned() {\n        if (this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, true);\n    }\n    xor(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n    }\n    eqz() {\n        return this.isZero();\n    }\n    le(other) {\n        return this.lessThanOrEqual(other);\n    }\n    toExtendedJSON(options) {\n        if (options && options.relaxed)\n            return this.toNumber();\n        return { $numberLong: this.toString() };\n    }\n    static fromExtendedJSON(doc, options) {\n        const { useBigInt64 = false, relaxed = true } = { ...options };\n        if (doc.$numberLong.length > MAX_INT64_STRING_LENGTH) {\n            throw new BSONError('$numberLong string is too long');\n        }\n        if (!DECIMAL_REG_EX.test(doc.$numberLong)) {\n            throw new BSONError(`$numberLong string \"${doc.$numberLong}\" is in an invalid format`);\n        }\n        if (useBigInt64) {\n            const bigIntResult = BigInt(doc.$numberLong);\n            return BigInt.asIntN(64, bigIntResult);\n        }\n        const longResult = Long.fromString(doc.$numberLong);\n        if (relaxed) {\n            return longResult.toNumber();\n        }\n        return longResult;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Long(\"${this.toString()}\"${this.unsigned ? ', true' : ''})`;\n    }\n}\nLong.TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\nLong.MAX_UNSIGNED_VALUE = Long.fromBits(0xffffffff | 0, 0xffffffff | 0, true);\nLong.ZERO = Long.fromInt(0);\nLong.UZERO = Long.fromInt(0, true);\nLong.ONE = Long.fromInt(1);\nLong.UONE = Long.fromInt(1, true);\nLong.NEG_ONE = Long.fromInt(-1);\nLong.MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0, false);\n\nconst PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nconst PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nconst PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\nconst EXPONENT_MAX = 6111;\nconst EXPONENT_MIN = -6176;\nconst EXPONENT_BIAS = 6176;\nconst MAX_DIGITS = 34;\nconst NAN_BUFFER = ByteUtils.fromNumberArray([\n    0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\nconst INF_NEGATIVE_BUFFER = ByteUtils.fromNumberArray([\n    0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\nconst INF_POSITIVE_BUFFER = ByteUtils.fromNumberArray([\n    0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\nconst EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\nconst COMBINATION_MASK = 0x1f;\nconst EXPONENT_MASK = 0x3fff;\nconst COMBINATION_INFINITY = 30;\nconst COMBINATION_NAN = 31;\nfunction isDigit(value) {\n    return !isNaN(parseInt(value, 10));\n}\nfunction divideu128(value) {\n    const DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n    let _rem = Long.fromNumber(0);\n    if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n        return { quotient: value, rem: _rem };\n    }\n    for (let i = 0; i <= 3; i++) {\n        _rem = _rem.shiftLeft(32);\n        _rem = _rem.add(new Long(value.parts[i], 0));\n        value.parts[i] = _rem.div(DIVISOR).low;\n        _rem = _rem.modulo(DIVISOR);\n    }\n    return { quotient: value, rem: _rem };\n}\nfunction multiply64x2(left, right) {\n    if (!left && !right) {\n        return { high: Long.fromNumber(0), low: Long.fromNumber(0) };\n    }\n    const leftHigh = left.shiftRightUnsigned(32);\n    const leftLow = new Long(left.getLowBits(), 0);\n    const rightHigh = right.shiftRightUnsigned(32);\n    const rightLow = new Long(right.getLowBits(), 0);\n    let productHigh = leftHigh.multiply(rightHigh);\n    let productMid = leftHigh.multiply(rightLow);\n    const productMid2 = leftLow.multiply(rightHigh);\n    let productLow = leftLow.multiply(rightLow);\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productMid = new Long(productMid.getLowBits(), 0)\n        .add(productMid2)\n        .add(productLow.shiftRightUnsigned(32));\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n    return { high: productHigh, low: productLow };\n}\nfunction lessThan(left, right) {\n    const uhleft = left.high >>> 0;\n    const uhright = right.high >>> 0;\n    if (uhleft < uhright) {\n        return true;\n    }\n    else if (uhleft === uhright) {\n        const ulleft = left.low >>> 0;\n        const ulright = right.low >>> 0;\n        if (ulleft < ulright)\n            return true;\n    }\n    return false;\n}\nfunction invalidErr(string, message) {\n    throw new BSONError(`\"${string}\" is not a valid Decimal128 string - ${message}`);\n}\nclass Decimal128 extends BSONValue {\n    get _bsontype() {\n        return 'Decimal128';\n    }\n    constructor(bytes) {\n        super();\n        if (typeof bytes === 'string') {\n            this.bytes = Decimal128.fromString(bytes).bytes;\n        }\n        else if (isUint8Array(bytes)) {\n            if (bytes.byteLength !== 16) {\n                throw new BSONError('Decimal128 must take a Buffer of 16 bytes');\n            }\n            this.bytes = bytes;\n        }\n        else {\n            throw new BSONError('Decimal128 must take a Buffer or string');\n        }\n    }\n    static fromString(representation) {\n        let isNegative = false;\n        let sawRadix = false;\n        let foundNonZero = false;\n        let significantDigits = 0;\n        let nDigitsRead = 0;\n        let nDigits = 0;\n        let radixPosition = 0;\n        let firstNonZero = 0;\n        const digits = [0];\n        let nDigitsStored = 0;\n        let digitsInsert = 0;\n        let firstDigit = 0;\n        let lastDigit = 0;\n        let exponent = 0;\n        let i = 0;\n        let significandHigh = new Long(0, 0);\n        let significandLow = new Long(0, 0);\n        let biasedExponent = 0;\n        let index = 0;\n        if (representation.length >= 7000) {\n            throw new BSONError('' + representation + ' not a valid Decimal128 string');\n        }\n        const stringMatch = representation.match(PARSE_STRING_REGEXP);\n        const infMatch = representation.match(PARSE_INF_REGEXP);\n        const nanMatch = representation.match(PARSE_NAN_REGEXP);\n        if ((!stringMatch && !infMatch && !nanMatch) || representation.length === 0) {\n            throw new BSONError('' + representation + ' not a valid Decimal128 string');\n        }\n        if (stringMatch) {\n            const unsignedNumber = stringMatch[2];\n            const e = stringMatch[4];\n            const expSign = stringMatch[5];\n            const expNumber = stringMatch[6];\n            if (e && expNumber === undefined)\n                invalidErr(representation, 'missing exponent power');\n            if (e && unsignedNumber === undefined)\n                invalidErr(representation, 'missing exponent base');\n            if (e === undefined && (expSign || expNumber)) {\n                invalidErr(representation, 'missing e before exponent');\n            }\n        }\n        if (representation[index] === '+' || representation[index] === '-') {\n            isNegative = representation[index++] === '-';\n        }\n        if (!isDigit(representation[index]) && representation[index] !== '.') {\n            if (representation[index] === 'i' || representation[index] === 'I') {\n                return new Decimal128(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER);\n            }\n            else if (representation[index] === 'N') {\n                return new Decimal128(NAN_BUFFER);\n            }\n        }\n        while (isDigit(representation[index]) || representation[index] === '.') {\n            if (representation[index] === '.') {\n                if (sawRadix)\n                    invalidErr(representation, 'contains multiple periods');\n                sawRadix = true;\n                index = index + 1;\n                continue;\n            }\n            if (nDigitsStored < 34) {\n                if (representation[index] !== '0' || foundNonZero) {\n                    if (!foundNonZero) {\n                        firstNonZero = nDigitsRead;\n                    }\n                    foundNonZero = true;\n                    digits[digitsInsert++] = parseInt(representation[index], 10);\n                    nDigitsStored = nDigitsStored + 1;\n                }\n            }\n            if (foundNonZero)\n                nDigits = nDigits + 1;\n            if (sawRadix)\n                radixPosition = radixPosition + 1;\n            nDigitsRead = nDigitsRead + 1;\n            index = index + 1;\n        }\n        if (sawRadix && !nDigitsRead)\n            throw new BSONError('' + representation + ' not a valid Decimal128 string');\n        if (representation[index] === 'e' || representation[index] === 'E') {\n            const match = representation.substr(++index).match(EXPONENT_REGEX);\n            if (!match || !match[2])\n                return new Decimal128(NAN_BUFFER);\n            exponent = parseInt(match[0], 10);\n            index = index + match[0].length;\n        }\n        if (representation[index])\n            return new Decimal128(NAN_BUFFER);\n        firstDigit = 0;\n        if (!nDigitsStored) {\n            firstDigit = 0;\n            lastDigit = 0;\n            digits[0] = 0;\n            nDigits = 1;\n            nDigitsStored = 1;\n            significantDigits = 0;\n        }\n        else {\n            lastDigit = nDigitsStored - 1;\n            significantDigits = nDigits;\n            if (significantDigits !== 1) {\n                while (digits[firstNonZero + significantDigits - 1] === 0) {\n                    significantDigits = significantDigits - 1;\n                }\n            }\n        }\n        if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n            exponent = EXPONENT_MIN;\n        }\n        else {\n            exponent = exponent - radixPosition;\n        }\n        while (exponent > EXPONENT_MAX) {\n            lastDigit = lastDigit + 1;\n            if (lastDigit - firstDigit > MAX_DIGITS) {\n                const digitsString = digits.join('');\n                if (digitsString.match(/^0+$/)) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n            exponent = exponent - 1;\n        }\n        while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n            if (lastDigit === 0 && significantDigits < nDigitsStored) {\n                exponent = EXPONENT_MIN;\n                significantDigits = 0;\n                break;\n            }\n            if (nDigitsStored < nDigits) {\n                nDigits = nDigits - 1;\n            }\n            else {\n                lastDigit = lastDigit - 1;\n            }\n            if (exponent < EXPONENT_MAX) {\n                exponent = exponent + 1;\n            }\n            else {\n                const digitsString = digits.join('');\n                if (digitsString.match(/^0+$/)) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n        }\n        if (lastDigit - firstDigit + 1 < significantDigits) {\n            let endOfString = nDigitsRead;\n            if (sawRadix) {\n                firstNonZero = firstNonZero + 1;\n                endOfString = endOfString + 1;\n            }\n            if (isNegative) {\n                firstNonZero = firstNonZero + 1;\n                endOfString = endOfString + 1;\n            }\n            const roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);\n            let roundBit = 0;\n            if (roundDigit >= 5) {\n                roundBit = 1;\n                if (roundDigit === 5) {\n                    roundBit = digits[lastDigit] % 2 === 1 ? 1 : 0;\n                    for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n                        if (parseInt(representation[i], 10)) {\n                            roundBit = 1;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (roundBit) {\n                let dIdx = lastDigit;\n                for (; dIdx >= 0; dIdx--) {\n                    if (++digits[dIdx] > 9) {\n                        digits[dIdx] = 0;\n                        if (dIdx === 0) {\n                            if (exponent < EXPONENT_MAX) {\n                                exponent = exponent + 1;\n                                digits[dIdx] = 1;\n                            }\n                            else {\n                                return new Decimal128(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        significandHigh = Long.fromNumber(0);\n        significandLow = Long.fromNumber(0);\n        if (significantDigits === 0) {\n            significandHigh = Long.fromNumber(0);\n            significandLow = Long.fromNumber(0);\n        }\n        else if (lastDigit - firstDigit < 17) {\n            let dIdx = firstDigit;\n            significandLow = Long.fromNumber(digits[dIdx++]);\n            significandHigh = new Long(0, 0);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(Long.fromNumber(10));\n                significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n            }\n        }\n        else {\n            let dIdx = firstDigit;\n            significandHigh = Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit - 17; dIdx++) {\n                significandHigh = significandHigh.multiply(Long.fromNumber(10));\n                significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n            }\n            significandLow = Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(Long.fromNumber(10));\n                significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n            }\n        }\n        const significand = multiply64x2(significandHigh, Long.fromString('100000000000000000'));\n        significand.low = significand.low.add(significandLow);\n        if (lessThan(significand.low, significandLow)) {\n            significand.high = significand.high.add(Long.fromNumber(1));\n        }\n        biasedExponent = exponent + EXPONENT_BIAS;\n        const dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n        if (significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber(1))) {\n            dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n            dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n            dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n        }\n        else {\n            dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n            dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n        }\n        dec.low = significand.low;\n        if (isNegative) {\n            dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n        }\n        const buffer = ByteUtils.allocate(16);\n        index = 0;\n        buffer[index++] = dec.low.low & 0xff;\n        buffer[index++] = (dec.low.low >> 8) & 0xff;\n        buffer[index++] = (dec.low.low >> 16) & 0xff;\n        buffer[index++] = (dec.low.low >> 24) & 0xff;\n        buffer[index++] = dec.low.high & 0xff;\n        buffer[index++] = (dec.low.high >> 8) & 0xff;\n        buffer[index++] = (dec.low.high >> 16) & 0xff;\n        buffer[index++] = (dec.low.high >> 24) & 0xff;\n        buffer[index++] = dec.high.low & 0xff;\n        buffer[index++] = (dec.high.low >> 8) & 0xff;\n        buffer[index++] = (dec.high.low >> 16) & 0xff;\n        buffer[index++] = (dec.high.low >> 24) & 0xff;\n        buffer[index++] = dec.high.high & 0xff;\n        buffer[index++] = (dec.high.high >> 8) & 0xff;\n        buffer[index++] = (dec.high.high >> 16) & 0xff;\n        buffer[index++] = (dec.high.high >> 24) & 0xff;\n        return new Decimal128(buffer);\n    }\n    toString() {\n        let biased_exponent;\n        let significand_digits = 0;\n        const significand = new Array(36);\n        for (let i = 0; i < significand.length; i++)\n            significand[i] = 0;\n        let index = 0;\n        let is_zero = false;\n        let significand_msb;\n        let significand128 = { parts: [0, 0, 0, 0] };\n        let j, k;\n        const string = [];\n        index = 0;\n        const buffer = this.bytes;\n        const low = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        const midl = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        const midh = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        const high = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        index = 0;\n        const dec = {\n            low: new Long(low, midl),\n            high: new Long(midh, high)\n        };\n        if (dec.high.lessThan(Long.ZERO)) {\n            string.push('-');\n        }\n        const combination = (high >> 26) & COMBINATION_MASK;\n        if (combination >> 3 === 3) {\n            if (combination === COMBINATION_INFINITY) {\n                return string.join('') + 'Infinity';\n            }\n            else if (combination === COMBINATION_NAN) {\n                return 'NaN';\n            }\n            else {\n                biased_exponent = (high >> 15) & EXPONENT_MASK;\n                significand_msb = 0x08 + ((high >> 14) & 0x01);\n            }\n        }\n        else {\n            significand_msb = (high >> 14) & 0x07;\n            biased_exponent = (high >> 17) & EXPONENT_MASK;\n        }\n        const exponent = biased_exponent - EXPONENT_BIAS;\n        significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n        significand128.parts[1] = midh;\n        significand128.parts[2] = midl;\n        significand128.parts[3] = low;\n        if (significand128.parts[0] === 0 &&\n            significand128.parts[1] === 0 &&\n            significand128.parts[2] === 0 &&\n            significand128.parts[3] === 0) {\n            is_zero = true;\n        }\n        else {\n            for (k = 3; k >= 0; k--) {\n                let least_digits = 0;\n                const result = divideu128(significand128);\n                significand128 = result.quotient;\n                least_digits = result.rem.low;\n                if (!least_digits)\n                    continue;\n                for (j = 8; j >= 0; j--) {\n                    significand[k * 9 + j] = least_digits % 10;\n                    least_digits = Math.floor(least_digits / 10);\n                }\n            }\n        }\n        if (is_zero) {\n            significand_digits = 1;\n            significand[index] = 0;\n        }\n        else {\n            significand_digits = 36;\n            while (!significand[index]) {\n                significand_digits = significand_digits - 1;\n                index = index + 1;\n            }\n        }\n        const scientific_exponent = significand_digits - 1 + exponent;\n        if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n            if (significand_digits > 34) {\n                string.push(`${0}`);\n                if (exponent > 0)\n                    string.push(`E+${exponent}`);\n                else if (exponent < 0)\n                    string.push(`E${exponent}`);\n                return string.join('');\n            }\n            string.push(`${significand[index++]}`);\n            significand_digits = significand_digits - 1;\n            if (significand_digits) {\n                string.push('.');\n            }\n            for (let i = 0; i < significand_digits; i++) {\n                string.push(`${significand[index++]}`);\n            }\n            string.push('E');\n            if (scientific_exponent > 0) {\n                string.push(`+${scientific_exponent}`);\n            }\n            else {\n                string.push(`${scientific_exponent}`);\n            }\n        }\n        else {\n            if (exponent >= 0) {\n                for (let i = 0; i < significand_digits; i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            }\n            else {\n                let radix_position = significand_digits + exponent;\n                if (radix_position > 0) {\n                    for (let i = 0; i < radix_position; i++) {\n                        string.push(`${significand[index++]}`);\n                    }\n                }\n                else {\n                    string.push('0');\n                }\n                string.push('.');\n                while (radix_position++ < 0) {\n                    string.push('0');\n                }\n                for (let i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            }\n        }\n        return string.join('');\n    }\n    toJSON() {\n        return { $numberDecimal: this.toString() };\n    }\n    toExtendedJSON() {\n        return { $numberDecimal: this.toString() };\n    }\n    static fromExtendedJSON(doc) {\n        return Decimal128.fromString(doc.$numberDecimal);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Decimal128(\"${this.toString()}\")`;\n    }\n}\n\nclass Double extends BSONValue {\n    get _bsontype() {\n        return 'Double';\n    }\n    constructor(value) {\n        super();\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value;\n    }\n    valueOf() {\n        return this.value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    toString(radix) {\n        return this.value.toString(radix);\n    }\n    toExtendedJSON(options) {\n        if (options && (options.legacy || (options.relaxed && isFinite(this.value)))) {\n            return this.value;\n        }\n        if (Object.is(Math.sign(this.value), -0)) {\n            return { $numberDouble: '-0.0' };\n        }\n        return {\n            $numberDouble: Number.isInteger(this.value) ? this.value.toFixed(1) : this.value.toString()\n        };\n    }\n    static fromExtendedJSON(doc, options) {\n        const doubleValue = parseFloat(doc.$numberDouble);\n        return options && options.relaxed ? doubleValue : new Double(doubleValue);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const eJSON = this.toExtendedJSON();\n        return `new Double(${eJSON.$numberDouble})`;\n    }\n}\n\nclass Int32 extends BSONValue {\n    get _bsontype() {\n        return 'Int32';\n    }\n    constructor(value) {\n        super();\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value | 0;\n    }\n    valueOf() {\n        return this.value;\n    }\n    toString(radix) {\n        return this.value.toString(radix);\n    }\n    toJSON() {\n        return this.value;\n    }\n    toExtendedJSON(options) {\n        if (options && (options.relaxed || options.legacy))\n            return this.value;\n        return { $numberInt: this.value.toString() };\n    }\n    static fromExtendedJSON(doc, options) {\n        return options && options.relaxed ? parseInt(doc.$numberInt, 10) : new Int32(doc.$numberInt);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Int32(${this.valueOf()})`;\n    }\n}\n\nclass MaxKey extends BSONValue {\n    get _bsontype() {\n        return 'MaxKey';\n    }\n    toExtendedJSON() {\n        return { $maxKey: 1 };\n    }\n    static fromExtendedJSON() {\n        return new MaxKey();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return 'new MaxKey()';\n    }\n}\n\nclass MinKey extends BSONValue {\n    get _bsontype() {\n        return 'MinKey';\n    }\n    toExtendedJSON() {\n        return { $minKey: 1 };\n    }\n    static fromExtendedJSON() {\n        return new MinKey();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return 'new MinKey()';\n    }\n}\n\nconst checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\nlet PROCESS_UNIQUE = null;\nconst kId = Symbol('id');\nclass ObjectId extends BSONValue {\n    get _bsontype() {\n        return 'ObjectId';\n    }\n    constructor(inputId) {\n        super();\n        let workingId;\n        if (typeof inputId === 'object' && inputId && 'id' in inputId) {\n            if (typeof inputId.id !== 'string' && !ArrayBuffer.isView(inputId.id)) {\n                throw new BSONError('Argument passed in must have an id that is of type string or Buffer');\n            }\n            if ('toHexString' in inputId && typeof inputId.toHexString === 'function') {\n                workingId = ByteUtils.fromHex(inputId.toHexString());\n            }\n            else {\n                workingId = inputId.id;\n            }\n        }\n        else {\n            workingId = inputId;\n        }\n        if (workingId == null || typeof workingId === 'number') {\n            this[kId] = ObjectId.generate(typeof workingId === 'number' ? workingId : undefined);\n        }\n        else if (ArrayBuffer.isView(workingId) && workingId.byteLength === 12) {\n            this[kId] = ByteUtils.toLocalBufferType(workingId);\n        }\n        else if (typeof workingId === 'string') {\n            if (workingId.length === 12) {\n                const bytes = ByteUtils.fromUTF8(workingId);\n                if (bytes.byteLength === 12) {\n                    this[kId] = bytes;\n                }\n                else {\n                    throw new BSONError('Argument passed in must be a string of 12 bytes');\n                }\n            }\n            else if (workingId.length === 24 && checkForHexRegExp.test(workingId)) {\n                this[kId] = ByteUtils.fromHex(workingId);\n            }\n            else {\n                throw new BSONError('Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer');\n            }\n        }\n        else {\n            throw new BSONError('Argument passed in does not match the accepted types');\n        }\n        if (ObjectId.cacheHexString) {\n            this.__id = ByteUtils.toHex(this.id);\n        }\n    }\n    get id() {\n        return this[kId];\n    }\n    set id(value) {\n        this[kId] = value;\n        if (ObjectId.cacheHexString) {\n            this.__id = ByteUtils.toHex(value);\n        }\n    }\n    toHexString() {\n        if (ObjectId.cacheHexString && this.__id) {\n            return this.__id;\n        }\n        const hexString = ByteUtils.toHex(this.id);\n        if (ObjectId.cacheHexString && !this.__id) {\n            this.__id = hexString;\n        }\n        return hexString;\n    }\n    static getInc() {\n        return (ObjectId.index = (ObjectId.index + 1) % 0xffffff);\n    }\n    static generate(time) {\n        if ('number' !== typeof time) {\n            time = Math.floor(Date.now() / 1000);\n        }\n        const inc = ObjectId.getInc();\n        const buffer = ByteUtils.allocate(12);\n        BSONDataView.fromUint8Array(buffer).setUint32(0, time, false);\n        if (PROCESS_UNIQUE === null) {\n            PROCESS_UNIQUE = ByteUtils.randomBytes(5);\n        }\n        buffer[4] = PROCESS_UNIQUE[0];\n        buffer[5] = PROCESS_UNIQUE[1];\n        buffer[6] = PROCESS_UNIQUE[2];\n        buffer[7] = PROCESS_UNIQUE[3];\n        buffer[8] = PROCESS_UNIQUE[4];\n        buffer[11] = inc & 0xff;\n        buffer[10] = (inc >> 8) & 0xff;\n        buffer[9] = (inc >> 16) & 0xff;\n        return buffer;\n    }\n    toString(encoding) {\n        if (encoding === 'base64')\n            return ByteUtils.toBase64(this.id);\n        if (encoding === 'hex')\n            return this.toHexString();\n        return this.toHexString();\n    }\n    toJSON() {\n        return this.toHexString();\n    }\n    equals(otherId) {\n        if (otherId === undefined || otherId === null) {\n            return false;\n        }\n        if (otherId instanceof ObjectId) {\n            return this[kId][11] === otherId[kId][11] && ByteUtils.equals(this[kId], otherId[kId]);\n        }\n        if (typeof otherId === 'string' &&\n            ObjectId.isValid(otherId) &&\n            otherId.length === 12 &&\n            isUint8Array(this.id)) {\n            return ByteUtils.equals(this.id, ByteUtils.fromISO88591(otherId));\n        }\n        if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 24) {\n            return otherId.toLowerCase() === this.toHexString();\n        }\n        if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 12) {\n            return ByteUtils.equals(ByteUtils.fromUTF8(otherId), this.id);\n        }\n        if (typeof otherId === 'object' &&\n            'toHexString' in otherId &&\n            typeof otherId.toHexString === 'function') {\n            const otherIdString = otherId.toHexString();\n            const thisIdString = this.toHexString().toLowerCase();\n            return typeof otherIdString === 'string' && otherIdString.toLowerCase() === thisIdString;\n        }\n        return false;\n    }\n    getTimestamp() {\n        const timestamp = new Date();\n        const time = BSONDataView.fromUint8Array(this.id).getUint32(0, false);\n        timestamp.setTime(Math.floor(time) * 1000);\n        return timestamp;\n    }\n    static createPk() {\n        return new ObjectId();\n    }\n    static createFromTime(time) {\n        const buffer = ByteUtils.fromNumberArray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n        BSONDataView.fromUint8Array(buffer).setUint32(0, time, false);\n        return new ObjectId(buffer);\n    }\n    static createFromHexString(hexString) {\n        if (typeof hexString === 'undefined' || (hexString != null && hexString.length !== 24)) {\n            throw new BSONError('Argument passed in must be a single String of 12 bytes or a string of 24 hex characters');\n        }\n        return new ObjectId(ByteUtils.fromHex(hexString));\n    }\n    static isValid(id) {\n        if (id == null)\n            return false;\n        try {\n            new ObjectId(id);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    toExtendedJSON() {\n        if (this.toHexString)\n            return { $oid: this.toHexString() };\n        return { $oid: this.toString('hex') };\n    }\n    static fromExtendedJSON(doc) {\n        return new ObjectId(doc.$oid);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new ObjectId(\"${this.toHexString()}\")`;\n    }\n}\nObjectId.index = Math.floor(Math.random() * 0xffffff);\n\nfunction internalCalculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n    let totalLength = 4 + 1;\n    if (Array.isArray(object)) {\n        for (let i = 0; i < object.length; i++) {\n            totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined);\n        }\n    }\n    else {\n        if (typeof object?.toBSON === 'function') {\n            object = object.toBSON();\n        }\n        for (const key of Object.keys(object)) {\n            totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n        }\n    }\n    return totalLength;\n}\nfunction calculateElement(name, value, serializeFunctions = false, isArray = false, ignoreUndefined = false) {\n    if (typeof value?.toBSON === 'function') {\n        value = value.toBSON();\n    }\n    switch (typeof value) {\n        case 'string':\n            return 1 + ByteUtils.utf8ByteLength(name) + 1 + 4 + ByteUtils.utf8ByteLength(value) + 1;\n        case 'number':\n            if (Math.floor(value) === value &&\n                value >= JS_INT_MIN &&\n                value <= JS_INT_MAX) {\n                if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n                    return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (4 + 1);\n                }\n                else {\n                    return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n                }\n            }\n            else {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n            }\n        case 'undefined':\n            if (isArray || !ignoreUndefined)\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + 1;\n            return 0;\n        case 'boolean':\n            return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (1 + 1);\n        case 'object':\n            if (value != null &&\n                typeof value._bsontype === 'string' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value == null || value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + 1;\n            }\n            else if (value._bsontype === 'ObjectId') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (12 + 1);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n            }\n            else if (ArrayBuffer.isView(value) ||\n                value instanceof ArrayBuffer ||\n                isAnyArrayBuffer(value)) {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (1 + 4 + 1) + value.byteLength);\n            }\n            else if (value._bsontype === 'Long' ||\n                value._bsontype === 'Double' ||\n                value._bsontype === 'Timestamp') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n            }\n            else if (value._bsontype === 'Decimal128') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (16 + 1);\n            }\n            else if (value._bsontype === 'Code') {\n                if (value.scope != null && Object.keys(value.scope).length > 0) {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                        1 +\n                        4 +\n                        4 +\n                        ByteUtils.utf8ByteLength(value.code.toString()) +\n                        1 +\n                        internalCalculateObjectSize(value.scope, serializeFunctions, ignoreUndefined));\n                }\n                else {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                        1 +\n                        4 +\n                        ByteUtils.utf8ByteLength(value.code.toString()) +\n                        1);\n                }\n            }\n            else if (value._bsontype === 'Binary') {\n                const binary = value;\n                if (binary.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                        (binary.position + 1 + 4 + 1 + 4));\n                }\n                else {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (binary.position + 1 + 4 + 1));\n                }\n            }\n            else if (value._bsontype === 'Symbol') {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    ByteUtils.utf8ByteLength(value.value) +\n                    4 +\n                    1 +\n                    1);\n            }\n            else if (value._bsontype === 'DBRef') {\n                const ordered_values = Object.assign({\n                    $ref: value.collection,\n                    $id: value.oid\n                }, value.fields);\n                if (value.db != null) {\n                    ordered_values['$db'] = value.db;\n                }\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    internalCalculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined));\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    ByteUtils.utf8ByteLength(value.source) +\n                    1 +\n                    (value.global ? 1 : 0) +\n                    (value.ignoreCase ? 1 : 0) +\n                    (value.multiline ? 1 : 0) +\n                    1);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    ByteUtils.utf8ByteLength(value.pattern) +\n                    1 +\n                    ByteUtils.utf8ByteLength(value.options) +\n                    1);\n            }\n            else {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    internalCalculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n                    1);\n            }\n        case 'function':\n            if (serializeFunctions) {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    4 +\n                    ByteUtils.utf8ByteLength(value.toString()) +\n                    1);\n            }\n    }\n    return 0;\n}\n\nfunction alphabetize(str) {\n    return str.split('').sort().join('');\n}\nclass BSONRegExp extends BSONValue {\n    get _bsontype() {\n        return 'BSONRegExp';\n    }\n    constructor(pattern, options) {\n        super();\n        this.pattern = pattern;\n        this.options = alphabetize(options ?? '');\n        if (this.pattern.indexOf('\\x00') !== -1) {\n            throw new BSONError(`BSON Regex patterns cannot contain null bytes, found: ${JSON.stringify(this.pattern)}`);\n        }\n        if (this.options.indexOf('\\x00') !== -1) {\n            throw new BSONError(`BSON Regex options cannot contain null bytes, found: ${JSON.stringify(this.options)}`);\n        }\n        for (let i = 0; i < this.options.length; i++) {\n            if (!(this.options[i] === 'i' ||\n                this.options[i] === 'm' ||\n                this.options[i] === 'x' ||\n                this.options[i] === 'l' ||\n                this.options[i] === 's' ||\n                this.options[i] === 'u')) {\n                throw new BSONError(`The regular expression option [${this.options[i]}] is not supported`);\n            }\n        }\n    }\n    static parseOptions(options) {\n        return options ? options.split('').sort().join('') : '';\n    }\n    toExtendedJSON(options) {\n        options = options || {};\n        if (options.legacy) {\n            return { $regex: this.pattern, $options: this.options };\n        }\n        return { $regularExpression: { pattern: this.pattern, options: this.options } };\n    }\n    static fromExtendedJSON(doc) {\n        if ('$regex' in doc) {\n            if (typeof doc.$regex !== 'string') {\n                if (doc.$regex._bsontype === 'BSONRegExp') {\n                    return doc;\n                }\n            }\n            else {\n                return new BSONRegExp(doc.$regex, BSONRegExp.parseOptions(doc.$options));\n            }\n        }\n        if ('$regularExpression' in doc) {\n            return new BSONRegExp(doc.$regularExpression.pattern, BSONRegExp.parseOptions(doc.$regularExpression.options));\n        }\n        throw new BSONError(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(doc)}`);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new BSONRegExp(${JSON.stringify(this.pattern)}, ${JSON.stringify(this.options)})`;\n    }\n}\n\nclass BSONSymbol extends BSONValue {\n    get _bsontype() {\n        return 'BSONSymbol';\n    }\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    valueOf() {\n        return this.value;\n    }\n    toString() {\n        return this.value;\n    }\n    inspect() {\n        return `new BSONSymbol(\"${this.value}\")`;\n    }\n    toJSON() {\n        return this.value;\n    }\n    toExtendedJSON() {\n        return { $symbol: this.value };\n    }\n    static fromExtendedJSON(doc) {\n        return new BSONSymbol(doc.$symbol);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n}\n\nconst LongWithoutOverridesClass = Long;\nclass Timestamp extends LongWithoutOverridesClass {\n    get _bsontype() {\n        return 'Timestamp';\n    }\n    constructor(low) {\n        if (low == null) {\n            super(0, 0, true);\n        }\n        else if (typeof low === 'bigint') {\n            super(low, true);\n        }\n        else if (Long.isLong(low)) {\n            super(low.low, low.high, true);\n        }\n        else if (typeof low === 'object' && 't' in low && 'i' in low) {\n            if (typeof low.t !== 'number' && (typeof low.t !== 'object' || low.t._bsontype !== 'Int32')) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide t as a number');\n            }\n            if (typeof low.i !== 'number' && (typeof low.i !== 'object' || low.i._bsontype !== 'Int32')) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide i as a number');\n            }\n            if (low.t < 0) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide a positive t');\n            }\n            if (low.i < 0) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide a positive i');\n            }\n            if (low.t > 4294967295) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide t equal or less than uint32 max');\n            }\n            if (low.i > 4294967295) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide i equal or less than uint32 max');\n            }\n            super(low.i.valueOf(), low.t.valueOf(), true);\n        }\n        else {\n            throw new BSONError('A Timestamp can only be constructed with: bigint, Long, or { t: number; i: number }');\n        }\n    }\n    toJSON() {\n        return {\n            $timestamp: this.toString()\n        };\n    }\n    static fromInt(value) {\n        return new Timestamp(Long.fromInt(value, true));\n    }\n    static fromNumber(value) {\n        return new Timestamp(Long.fromNumber(value, true));\n    }\n    static fromBits(lowBits, highBits) {\n        return new Timestamp({ i: lowBits, t: highBits });\n    }\n    static fromString(str, optRadix) {\n        return new Timestamp(Long.fromString(str, true, optRadix));\n    }\n    toExtendedJSON() {\n        return { $timestamp: { t: this.high >>> 0, i: this.low >>> 0 } };\n    }\n    static fromExtendedJSON(doc) {\n        const i = Long.isLong(doc.$timestamp.i)\n            ? doc.$timestamp.i.getLowBitsUnsigned()\n            : doc.$timestamp.i;\n        const t = Long.isLong(doc.$timestamp.t)\n            ? doc.$timestamp.t.getLowBitsUnsigned()\n            : doc.$timestamp.t;\n        return new Timestamp({ t, i });\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Timestamp({ t: ${this.getHighBits()}, i: ${this.getLowBits()} })`;\n    }\n}\nTimestamp.MAX_VALUE = Long.MAX_UNSIGNED_VALUE;\n\nconst FIRST_BIT = 0x80;\nconst FIRST_TWO_BITS = 0xc0;\nconst FIRST_THREE_BITS = 0xe0;\nconst FIRST_FOUR_BITS = 0xf0;\nconst FIRST_FIVE_BITS = 0xf8;\nconst TWO_BIT_CHAR = 0xc0;\nconst THREE_BIT_CHAR = 0xe0;\nconst FOUR_BIT_CHAR = 0xf0;\nconst CONTINUING_CHAR = 0x80;\nfunction validateUtf8(bytes, start, end) {\n    let continuation = 0;\n    for (let i = start; i < end; i += 1) {\n        const byte = bytes[i];\n        if (continuation) {\n            if ((byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {\n                return false;\n            }\n            continuation -= 1;\n        }\n        else if (byte & FIRST_BIT) {\n            if ((byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {\n                continuation = 1;\n            }\n            else if ((byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {\n                continuation = 2;\n            }\n            else if ((byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {\n                continuation = 3;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return !continuation;\n}\n\nconst JS_INT_MAX_LONG = Long.fromNumber(JS_INT_MAX);\nconst JS_INT_MIN_LONG = Long.fromNumber(JS_INT_MIN);\nfunction internalDeserialize(buffer, options, isArray) {\n    options = options == null ? {} : options;\n    const index = options && options.index ? options.index : 0;\n    const size = buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n    if (size < 5) {\n        throw new BSONError(`bson size must be >= 5, is ${size}`);\n    }\n    if (options.allowObjectSmallerThanBufferSize && buffer.length < size) {\n        throw new BSONError(`buffer length ${buffer.length} must be >= bson size ${size}`);\n    }\n    if (!options.allowObjectSmallerThanBufferSize && buffer.length !== size) {\n        throw new BSONError(`buffer length ${buffer.length} must === bson size ${size}`);\n    }\n    if (size + index > buffer.byteLength) {\n        throw new BSONError(`(bson size ${size} + options.index ${index} must be <= buffer length ${buffer.byteLength})`);\n    }\n    if (buffer[index + size - 1] !== 0) {\n        throw new BSONError(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n    }\n    return deserializeObject(buffer, index, options, isArray);\n}\nconst allowedDBRefKeys = /^\\$ref$|^\\$id$|^\\$db$/;\nfunction deserializeObject(buffer, index, options, isArray = false) {\n    const fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n    const raw = options['raw'] == null ? false : options['raw'];\n    const bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n    const promoteBuffers = options.promoteBuffers ?? false;\n    const promoteLongs = options.promoteLongs ?? true;\n    const promoteValues = options.promoteValues ?? true;\n    const useBigInt64 = options.useBigInt64 ?? false;\n    if (useBigInt64 && !promoteValues) {\n        throw new BSONError('Must either request bigint or Long for int64 deserialization');\n    }\n    if (useBigInt64 && !promoteLongs) {\n        throw new BSONError('Must either request bigint or Long for int64 deserialization');\n    }\n    const validation = options.validation == null ? { utf8: true } : options.validation;\n    let globalUTFValidation = true;\n    let validationSetting;\n    const utf8KeysSet = new Set();\n    const utf8ValidatedKeys = validation.utf8;\n    if (typeof utf8ValidatedKeys === 'boolean') {\n        validationSetting = utf8ValidatedKeys;\n    }\n    else {\n        globalUTFValidation = false;\n        const utf8ValidationValues = Object.keys(utf8ValidatedKeys).map(function (key) {\n            return utf8ValidatedKeys[key];\n        });\n        if (utf8ValidationValues.length === 0) {\n            throw new BSONError('UTF-8 validation setting cannot be empty');\n        }\n        if (typeof utf8ValidationValues[0] !== 'boolean') {\n            throw new BSONError('Invalid UTF-8 validation option, must specify boolean values');\n        }\n        validationSetting = utf8ValidationValues[0];\n        if (!utf8ValidationValues.every(item => item === validationSetting)) {\n            throw new BSONError('Invalid UTF-8 validation option - keys must be all true or all false');\n        }\n    }\n    if (!globalUTFValidation) {\n        for (const key of Object.keys(utf8ValidatedKeys)) {\n            utf8KeysSet.add(key);\n        }\n    }\n    const startIndex = index;\n    if (buffer.length < 5)\n        throw new BSONError('corrupt bson message < 5 bytes long');\n    const size = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n    if (size < 5 || size > buffer.length)\n        throw new BSONError('corrupt bson message');\n    const object = isArray ? [] : {};\n    let arrayIndex = 0;\n    const done = false;\n    let isPossibleDBRef = isArray ? false : null;\n    const dataview = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    while (!done) {\n        const elementType = buffer[index++];\n        if (elementType === 0)\n            break;\n        let i = index;\n        while (buffer[i] !== 0x00 && i < buffer.length) {\n            i++;\n        }\n        if (i >= buffer.byteLength)\n            throw new BSONError('Bad BSON Document: illegal CString');\n        const name = isArray ? arrayIndex++ : ByteUtils.toUTF8(buffer.subarray(index, i));\n        let shouldValidateKey = true;\n        if (globalUTFValidation || utf8KeysSet.has(name)) {\n            shouldValidateKey = validationSetting;\n        }\n        else {\n            shouldValidateKey = !validationSetting;\n        }\n        if (isPossibleDBRef !== false && name[0] === '$') {\n            isPossibleDBRef = allowedDBRefKeys.test(name);\n        }\n        let value;\n        index = i + 1;\n        if (elementType === BSON_DATA_STRING) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            value = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_OID) {\n            const oid = ByteUtils.allocate(12);\n            oid.set(buffer.subarray(index, index + 12));\n            value = new ObjectId(oid);\n            index = index + 12;\n        }\n        else if (elementType === BSON_DATA_INT && promoteValues === false) {\n            value = new Int32(buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24));\n        }\n        else if (elementType === BSON_DATA_INT) {\n            value =\n                buffer[index++] |\n                    (buffer[index++] << 8) |\n                    (buffer[index++] << 16) |\n                    (buffer[index++] << 24);\n        }\n        else if (elementType === BSON_DATA_NUMBER && promoteValues === false) {\n            value = new Double(dataview.getFloat64(index, true));\n            index = index + 8;\n        }\n        else if (elementType === BSON_DATA_NUMBER) {\n            value = dataview.getFloat64(index, true);\n            index = index + 8;\n        }\n        else if (elementType === BSON_DATA_DATE) {\n            const lowBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const highBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            value = new Date(new Long(lowBits, highBits).toNumber());\n        }\n        else if (elementType === BSON_DATA_BOOLEAN) {\n            if (buffer[index] !== 0 && buffer[index] !== 1)\n                throw new BSONError('illegal boolean type value');\n            value = buffer[index++] === 1;\n        }\n        else if (elementType === BSON_DATA_OBJECT) {\n            const _index = index;\n            const objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            if (objectSize <= 0 || objectSize > buffer.length - index)\n                throw new BSONError('bad embedded document length in bson');\n            if (raw) {\n                value = buffer.slice(index, index + objectSize);\n            }\n            else {\n                let objectOptions = options;\n                if (!globalUTFValidation) {\n                    objectOptions = { ...options, validation: { utf8: shouldValidateKey } };\n                }\n                value = deserializeObject(buffer, _index, objectOptions, false);\n            }\n            index = index + objectSize;\n        }\n        else if (elementType === BSON_DATA_ARRAY) {\n            const _index = index;\n            const objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            let arrayOptions = options;\n            const stopIndex = index + objectSize;\n            if (fieldsAsRaw && fieldsAsRaw[name]) {\n                arrayOptions = { ...options, raw: true };\n            }\n            if (!globalUTFValidation) {\n                arrayOptions = { ...arrayOptions, validation: { utf8: shouldValidateKey } };\n            }\n            value = deserializeObject(buffer, _index, arrayOptions, true);\n            index = index + objectSize;\n            if (buffer[index - 1] !== 0)\n                throw new BSONError('invalid array terminator byte');\n            if (index !== stopIndex)\n                throw new BSONError('corrupted array bson');\n        }\n        else if (elementType === BSON_DATA_UNDEFINED) {\n            value = undefined;\n        }\n        else if (elementType === BSON_DATA_NULL) {\n            value = null;\n        }\n        else if (elementType === BSON_DATA_LONG) {\n            const dataview = BSONDataView.fromUint8Array(buffer.subarray(index, index + 8));\n            const lowBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const highBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const long = new Long(lowBits, highBits);\n            if (useBigInt64) {\n                value = dataview.getBigInt64(0, true);\n            }\n            else if (promoteLongs && promoteValues === true) {\n                value =\n                    long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n                        ? long.toNumber()\n                        : long;\n            }\n            else {\n                value = long;\n            }\n        }\n        else if (elementType === BSON_DATA_DECIMAL128) {\n            const bytes = ByteUtils.allocate(16);\n            bytes.set(buffer.subarray(index, index + 16), 0);\n            index = index + 16;\n            value = new Decimal128(bytes);\n        }\n        else if (elementType === BSON_DATA_BINARY) {\n            let binarySize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const totalBinarySize = binarySize;\n            const subType = buffer[index++];\n            if (binarySize < 0)\n                throw new BSONError('Negative binary type element size found');\n            if (binarySize > buffer.byteLength)\n                throw new BSONError('Binary type size larger than document size');\n            if (buffer['slice'] != null) {\n                if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer[index++] |\n                            (buffer[index++] << 8) |\n                            (buffer[index++] << 16) |\n                            (buffer[index++] << 24);\n                    if (binarySize < 0)\n                        throw new BSONError('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n                }\n                if (promoteBuffers && promoteValues) {\n                    value = ByteUtils.toLocalBufferType(buffer.slice(index, index + binarySize));\n                }\n                else {\n                    value = new Binary(buffer.slice(index, index + binarySize), subType);\n                    if (subType === BSON_BINARY_SUBTYPE_UUID_NEW) {\n                        value = value.toUUID();\n                    }\n                }\n            }\n            else {\n                const _buffer = ByteUtils.allocate(binarySize);\n                if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer[index++] |\n                            (buffer[index++] << 8) |\n                            (buffer[index++] << 16) |\n                            (buffer[index++] << 24);\n                    if (binarySize < 0)\n                        throw new BSONError('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n                }\n                for (i = 0; i < binarySize; i++) {\n                    _buffer[i] = buffer[index + i];\n                }\n                if (promoteBuffers && promoteValues) {\n                    value = _buffer;\n                }\n                else if (subType === BSON_BINARY_SUBTYPE_UUID_NEW) {\n                    value = new Binary(buffer.slice(index, index + binarySize), subType).toUUID();\n                }\n                else {\n                    value = new Binary(buffer.slice(index, index + binarySize), subType);\n                }\n            }\n            index = index + binarySize;\n        }\n        else if (elementType === BSON_DATA_REGEXP && bsonRegExp === false) {\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const source = ByteUtils.toUTF8(buffer.subarray(index, i));\n            index = i + 1;\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const regExpOptions = ByteUtils.toUTF8(buffer.subarray(index, i));\n            index = i + 1;\n            const optionsArray = new Array(regExpOptions.length);\n            for (i = 0; i < regExpOptions.length; i++) {\n                switch (regExpOptions[i]) {\n                    case 'm':\n                        optionsArray[i] = 'm';\n                        break;\n                    case 's':\n                        optionsArray[i] = 'g';\n                        break;\n                    case 'i':\n                        optionsArray[i] = 'i';\n                        break;\n                }\n            }\n            value = new RegExp(source, optionsArray.join(''));\n        }\n        else if (elementType === BSON_DATA_REGEXP && bsonRegExp === true) {\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const source = ByteUtils.toUTF8(buffer.subarray(index, i));\n            index = i + 1;\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const regExpOptions = ByteUtils.toUTF8(buffer.subarray(index, i));\n            index = i + 1;\n            value = new BSONRegExp(source, regExpOptions);\n        }\n        else if (elementType === BSON_DATA_SYMBOL) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            const symbol = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            value = promoteValues ? symbol : new BSONSymbol(symbol);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_TIMESTAMP) {\n            const i = buffer[index++] +\n                buffer[index++] * (1 << 8) +\n                buffer[index++] * (1 << 16) +\n                buffer[index++] * (1 << 24);\n            const t = buffer[index++] +\n                buffer[index++] * (1 << 8) +\n                buffer[index++] * (1 << 16) +\n                buffer[index++] * (1 << 24);\n            value = new Timestamp({ i, t });\n        }\n        else if (elementType === BSON_DATA_MIN_KEY) {\n            value = new MinKey();\n        }\n        else if (elementType === BSON_DATA_MAX_KEY) {\n            value = new MaxKey();\n        }\n        else if (elementType === BSON_DATA_CODE) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            const functionString = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            value = new Code(functionString);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_CODE_W_SCOPE) {\n            const totalSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (totalSize < 4 + 4 + 4 + 1) {\n                throw new BSONError('code_w_scope total size shorter minimum expected length');\n            }\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            const functionString = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            index = index + stringSize;\n            const _index = index;\n            const objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            const scopeObject = deserializeObject(buffer, _index, options, false);\n            index = index + objectSize;\n            if (totalSize < 4 + 4 + objectSize + stringSize) {\n                throw new BSONError('code_w_scope total size is too short, truncating scope');\n            }\n            if (totalSize > 4 + 4 + objectSize + stringSize) {\n                throw new BSONError('code_w_scope total size is too long, clips outer document');\n            }\n            value = new Code(functionString, scopeObject);\n        }\n        else if (elementType === BSON_DATA_DBPOINTER) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0)\n                throw new BSONError('bad string length in bson');\n            if (validation != null && validation.utf8) {\n                if (!validateUtf8(buffer, index, index + stringSize - 1)) {\n                    throw new BSONError('Invalid UTF-8 string in BSON document');\n                }\n            }\n            const namespace = ByteUtils.toUTF8(buffer.subarray(index, index + stringSize - 1));\n            index = index + stringSize;\n            const oidBuffer = ByteUtils.allocate(12);\n            oidBuffer.set(buffer.subarray(index, index + 12), 0);\n            const oid = new ObjectId(oidBuffer);\n            index = index + 12;\n            value = new DBRef(namespace, oid);\n        }\n        else {\n            throw new BSONError(`Detected unknown BSON type ${elementType.toString(16)} for fieldname \"${name}\"`);\n        }\n        if (name === '__proto__') {\n            Object.defineProperty(object, name, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n        else {\n            object[name] = value;\n        }\n    }\n    if (size !== index - startIndex) {\n        if (isArray)\n            throw new BSONError('corrupt array bson');\n        throw new BSONError('corrupt object bson');\n    }\n    if (!isPossibleDBRef)\n        return object;\n    if (isDBRefLike(object)) {\n        const copy = Object.assign({}, object);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new DBRef(object.$ref, object.$id, object.$db, copy);\n    }\n    return object;\n}\nfunction getValidatedString(buffer, start, end, shouldValidateUtf8) {\n    const value = ByteUtils.toUTF8(buffer.subarray(start, end));\n    if (shouldValidateUtf8) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) === 0xfffd) {\n                if (!validateUtf8(buffer, start, end)) {\n                    throw new BSONError('Invalid UTF-8 string in BSON document');\n                }\n                break;\n            }\n        }\n    }\n    return value;\n}\n\nconst regexp = /\\x00/;\nconst ignoreKeys = new Set(['$db', '$ref', '$id', '$clusterTime']);\nfunction serializeString(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_STRING;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes + 1;\n    buffer[index - 1] = 0;\n    const size = ByteUtils.encodeUTF8Into(buffer, value, index + 4);\n    buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n    buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n    buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n    buffer[index] = (size + 1) & 0xff;\n    index = index + 4 + size;\n    buffer[index++] = 0;\n    return index;\n}\nconst NUMBER_SPACE = new DataView(new ArrayBuffer(8), 0, 8);\nconst FOUR_BYTE_VIEW_ON_NUMBER = new Uint8Array(NUMBER_SPACE.buffer, 0, 4);\nconst EIGHT_BYTE_VIEW_ON_NUMBER = new Uint8Array(NUMBER_SPACE.buffer, 0, 8);\nfunction serializeNumber(buffer, key, value, index) {\n    const isNegativeZero = Object.is(value, -0);\n    const type = !isNegativeZero &&\n        Number.isSafeInteger(value) &&\n        value <= BSON_INT32_MAX &&\n        value >= BSON_INT32_MIN\n        ? BSON_DATA_INT\n        : BSON_DATA_NUMBER;\n    if (type === BSON_DATA_INT) {\n        NUMBER_SPACE.setInt32(0, value, true);\n    }\n    else {\n        NUMBER_SPACE.setFloat64(0, value, true);\n    }\n    const bytes = type === BSON_DATA_INT ? FOUR_BYTE_VIEW_ON_NUMBER : EIGHT_BYTE_VIEW_ON_NUMBER;\n    buffer[index++] = type;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0x00;\n    buffer.set(bytes, index);\n    index += bytes.byteLength;\n    return index;\n}\nfunction serializeBigInt(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_LONG;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index += numberOfWrittenBytes;\n    buffer[index++] = 0;\n    NUMBER_SPACE.setBigInt64(0, value, true);\n    buffer.set(EIGHT_BYTE_VIEW_ON_NUMBER, index);\n    index += EIGHT_BYTE_VIEW_ON_NUMBER.byteLength;\n    return index;\n}\nfunction serializeNull(buffer, key, _, index) {\n    buffer[index++] = BSON_DATA_NULL;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeBoolean(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_BOOLEAN;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    buffer[index++] = value ? 1 : 0;\n    return index;\n}\nfunction serializeDate(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_DATE;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const dateInMilis = Long.fromNumber(value.getTime());\n    const lowBits = dateInMilis.getLowBits();\n    const highBits = dateInMilis.getHighBits();\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeRegExp(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_REGEXP;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (value.source && value.source.match(regexp) != null) {\n        throw new BSONError('value ' + value.source + ' must not contain null bytes');\n    }\n    index = index + ByteUtils.encodeUTF8Into(buffer, value.source, index);\n    buffer[index++] = 0x00;\n    if (value.ignoreCase)\n        buffer[index++] = 0x69;\n    if (value.global)\n        buffer[index++] = 0x73;\n    if (value.multiline)\n        buffer[index++] = 0x6d;\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeBSONRegExp(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_REGEXP;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (value.pattern.match(regexp) != null) {\n        throw new BSONError('pattern ' + value.pattern + ' must not contain null bytes');\n    }\n    index = index + ByteUtils.encodeUTF8Into(buffer, value.pattern, index);\n    buffer[index++] = 0x00;\n    const sortedOptions = value.options.split('').sort().join('');\n    index = index + ByteUtils.encodeUTF8Into(buffer, sortedOptions, index);\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeMinMax(buffer, key, value, index) {\n    if (value === null) {\n        buffer[index++] = BSON_DATA_NULL;\n    }\n    else if (value._bsontype === 'MinKey') {\n        buffer[index++] = BSON_DATA_MIN_KEY;\n    }\n    else {\n        buffer[index++] = BSON_DATA_MAX_KEY;\n    }\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeObjectId(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_OID;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (isUint8Array(value.id)) {\n        buffer.set(value.id.subarray(0, 12), index);\n    }\n    else {\n        throw new BSONError('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n    }\n    return index + 12;\n}\nfunction serializeBuffer(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_BINARY;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const size = value.length;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    buffer[index++] = BSON_BINARY_SUBTYPE_DEFAULT;\n    buffer.set(value, index);\n    index = index + size;\n    return index;\n}\nfunction serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path) {\n    if (path.has(value)) {\n        throw new BSONError('Cannot convert circular structure to BSON');\n    }\n    path.add(value);\n    buffer[index++] = Array.isArray(value) ? BSON_DATA_ARRAY : BSON_DATA_OBJECT;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);\n    path.delete(value);\n    return endIndex;\n}\nfunction serializeDecimal128(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_DECIMAL128;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    buffer.set(value.bytes.subarray(0, 16), index);\n    return index + 16;\n}\nfunction serializeLong(buffer, key, value, index) {\n    buffer[index++] =\n        value._bsontype === 'Long' ? BSON_DATA_LONG : BSON_DATA_TIMESTAMP;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const lowBits = value.getLowBits();\n    const highBits = value.getHighBits();\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeInt32(buffer, key, value, index) {\n    value = value.valueOf();\n    buffer[index++] = BSON_DATA_INT;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    buffer[index++] = value & 0xff;\n    buffer[index++] = (value >> 8) & 0xff;\n    buffer[index++] = (value >> 16) & 0xff;\n    buffer[index++] = (value >> 24) & 0xff;\n    return index;\n}\nfunction serializeDouble(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_NUMBER;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    NUMBER_SPACE.setFloat64(0, value.value, true);\n    buffer.set(EIGHT_BYTE_VIEW_ON_NUMBER, index);\n    index = index + 8;\n    return index;\n}\nfunction serializeFunction(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_CODE;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const functionString = value.toString();\n    const size = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    index = index + 4 + size - 1;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeCode(buffer, key, value, index, checkKeys = false, depth = 0, serializeFunctions = false, ignoreUndefined = true, path) {\n    if (value.scope && typeof value.scope === 'object') {\n        buffer[index++] = BSON_DATA_CODE_W_SCOPE;\n        const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        let startIndex = index;\n        const functionString = value.code;\n        index = index + 4;\n        const codeSize = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n        buffer[index] = codeSize & 0xff;\n        buffer[index + 1] = (codeSize >> 8) & 0xff;\n        buffer[index + 2] = (codeSize >> 16) & 0xff;\n        buffer[index + 3] = (codeSize >> 24) & 0xff;\n        buffer[index + 4 + codeSize - 1] = 0;\n        index = index + codeSize + 4;\n        const endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);\n        index = endIndex - 1;\n        const totalSize = endIndex - startIndex;\n        buffer[startIndex++] = totalSize & 0xff;\n        buffer[startIndex++] = (totalSize >> 8) & 0xff;\n        buffer[startIndex++] = (totalSize >> 16) & 0xff;\n        buffer[startIndex++] = (totalSize >> 24) & 0xff;\n        buffer[index++] = 0;\n    }\n    else {\n        buffer[index++] = BSON_DATA_CODE;\n        const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        const functionString = value.code.toString();\n        const size = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n        buffer[index] = size & 0xff;\n        buffer[index + 1] = (size >> 8) & 0xff;\n        buffer[index + 2] = (size >> 16) & 0xff;\n        buffer[index + 3] = (size >> 24) & 0xff;\n        index = index + 4 + size - 1;\n        buffer[index++] = 0;\n    }\n    return index;\n}\nfunction serializeBinary(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_BINARY;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const data = value.buffer;\n    let size = value.position;\n    if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY)\n        size = size + 4;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    buffer[index++] = value.sub_type;\n    if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n        size = size - 4;\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n    }\n    buffer.set(data, index);\n    index = index + value.position;\n    return index;\n}\nfunction serializeSymbol(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_SYMBOL;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const size = ByteUtils.encodeUTF8Into(buffer, value.value, index + 4) + 1;\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    index = index + 4 + size - 1;\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path) {\n    buffer[index++] = BSON_DATA_OBJECT;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    let startIndex = index;\n    let output = {\n        $ref: value.collection || value.namespace,\n        $id: value.oid\n    };\n    if (value.db != null) {\n        output.$db = value.db;\n    }\n    output = Object.assign(output, value.fields);\n    const endIndex = serializeInto(buffer, output, false, index, depth + 1, serializeFunctions, true, path);\n    const size = endIndex - startIndex;\n    buffer[startIndex++] = size & 0xff;\n    buffer[startIndex++] = (size >> 8) & 0xff;\n    buffer[startIndex++] = (size >> 16) & 0xff;\n    buffer[startIndex++] = (size >> 24) & 0xff;\n    return endIndex;\n}\nfunction serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined, path) {\n    if (path == null) {\n        if (object == null) {\n            buffer[0] = 0x05;\n            buffer[1] = 0x00;\n            buffer[2] = 0x00;\n            buffer[3] = 0x00;\n            buffer[4] = 0x00;\n            return 5;\n        }\n        if (Array.isArray(object)) {\n            throw new BSONError('serialize does not support an array as the root input');\n        }\n        if (typeof object !== 'object') {\n            throw new BSONError('serialize does not support non-object as the root input');\n        }\n        else if ('_bsontype' in object && typeof object._bsontype === 'string') {\n            throw new BSONError(`BSON types cannot be serialized as a document`);\n        }\n        else if (isDate(object) ||\n            isRegExp(object) ||\n            isUint8Array(object) ||\n            isAnyArrayBuffer(object)) {\n            throw new BSONError(`date, regexp, typedarray, and arraybuffer cannot be BSON documents`);\n        }\n        path = new Set();\n    }\n    path.add(object);\n    let index = startingIndex + 4;\n    if (Array.isArray(object)) {\n        for (let i = 0; i < object.length; i++) {\n            const key = `${i}`;\n            let value = object[i];\n            if (typeof value?.toBSON === 'function') {\n                value = value.toBSON();\n            }\n            if (typeof value === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (typeof value === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (typeof value === 'bigint') {\n                index = serializeBigInt(buffer, key, value, index);\n            }\n            else if (typeof value === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === undefined) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (typeof value === 'object' && value._bsontype == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'object' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value._bsontype === 'ObjectId') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (value._bsontype === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'BSONSymbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value._bsontype !== 'undefined') {\n                throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n            }\n        }\n    }\n    else if (object instanceof Map || isMap(object)) {\n        const iterator = object.entries();\n        let done = false;\n        while (!done) {\n            const entry = iterator.next();\n            done = !!entry.done;\n            if (done)\n                continue;\n            const key = entry.value[0];\n            let value = entry.value[1];\n            if (typeof value?.toBSON === 'function') {\n                value = value.toBSON();\n            }\n            const type = typeof value;\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    throw new BSONError('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw new BSONError('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw new BSONError('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (type === 'bigint') {\n                index = serializeBigInt(buffer, key, value, index);\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === null || (value === undefined && ignoreUndefined === false)) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'object' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value._bsontype === 'ObjectId') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'BSONSymbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value._bsontype !== 'undefined') {\n                throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n            }\n        }\n    }\n    else {\n        if (typeof object?.toBSON === 'function') {\n            object = object.toBSON();\n            if (object != null && typeof object !== 'object') {\n                throw new BSONError('toBSON function did not return an object');\n            }\n        }\n        for (const key of Object.keys(object)) {\n            let value = object[key];\n            if (typeof value?.toBSON === 'function') {\n                value = value.toBSON();\n            }\n            const type = typeof value;\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    throw new BSONError('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw new BSONError('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw new BSONError('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (type === 'bigint') {\n                index = serializeBigInt(buffer, key, value, index);\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === undefined) {\n                if (ignoreUndefined === false)\n                    index = serializeNull(buffer, key, value, index);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'object' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value._bsontype === 'ObjectId') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'BSONSymbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value._bsontype !== 'undefined') {\n                throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n            }\n        }\n    }\n    path.delete(object);\n    buffer[index++] = 0x00;\n    const size = index - startingIndex;\n    buffer[startingIndex++] = size & 0xff;\n    buffer[startingIndex++] = (size >> 8) & 0xff;\n    buffer[startingIndex++] = (size >> 16) & 0xff;\n    buffer[startingIndex++] = (size >> 24) & 0xff;\n    return index;\n}\n\nfunction isBSONType(value) {\n    return (value != null &&\n        typeof value === 'object' &&\n        '_bsontype' in value &&\n        typeof value._bsontype === 'string');\n}\nconst keysToCodecs = {\n    $oid: ObjectId,\n    $binary: Binary,\n    $uuid: Binary,\n    $symbol: BSONSymbol,\n    $numberInt: Int32,\n    $numberDecimal: Decimal128,\n    $numberDouble: Double,\n    $numberLong: Long,\n    $minKey: MinKey,\n    $maxKey: MaxKey,\n    $regex: BSONRegExp,\n    $regularExpression: BSONRegExp,\n    $timestamp: Timestamp\n};\nfunction deserializeValue(value, options = {}) {\n    if (typeof value === 'number') {\n        const in32BitRange = value <= BSON_INT32_MAX && value >= BSON_INT32_MIN;\n        const in64BitRange = value <= BSON_INT64_MAX && value >= BSON_INT64_MIN;\n        if (options.relaxed || options.legacy) {\n            return value;\n        }\n        if (Number.isInteger(value) && !Object.is(value, -0)) {\n            if (in32BitRange) {\n                return new Int32(value);\n            }\n            if (in64BitRange) {\n                if (options.useBigInt64) {\n                    return BigInt(value);\n                }\n                return Long.fromNumber(value);\n            }\n        }\n        return new Double(value);\n    }\n    if (value == null || typeof value !== 'object')\n        return value;\n    if (value.$undefined)\n        return null;\n    const keys = Object.keys(value).filter(k => k.startsWith('$') && value[k] != null);\n    for (let i = 0; i < keys.length; i++) {\n        const c = keysToCodecs[keys[i]];\n        if (c)\n            return c.fromExtendedJSON(value, options);\n    }\n    if (value.$date != null) {\n        const d = value.$date;\n        const date = new Date();\n        if (options.legacy) {\n            if (typeof d === 'number')\n                date.setTime(d);\n            else if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n            else if (typeof d === 'bigint')\n                date.setTime(Number(d));\n            else\n                throw new BSONRuntimeError(`Unrecognized type for EJSON date: ${typeof d}`);\n        }\n        else {\n            if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n            else if (Long.isLong(d))\n                date.setTime(d.toNumber());\n            else if (typeof d === 'number' && options.relaxed)\n                date.setTime(d);\n            else if (typeof d === 'bigint')\n                date.setTime(Number(d));\n            else\n                throw new BSONRuntimeError(`Unrecognized type for EJSON date: ${typeof d}`);\n        }\n        return date;\n    }\n    if (value.$code != null) {\n        const copy = Object.assign({}, value);\n        if (value.$scope) {\n            copy.$scope = deserializeValue(value.$scope);\n        }\n        return Code.fromExtendedJSON(value);\n    }\n    if (isDBRefLike(value) || value.$dbPointer) {\n        const v = value.$ref ? value : value.$dbPointer;\n        if (v instanceof DBRef)\n            return v;\n        const dollarKeys = Object.keys(v).filter(k => k.startsWith('$'));\n        let valid = true;\n        dollarKeys.forEach(k => {\n            if (['$ref', '$id', '$db'].indexOf(k) === -1)\n                valid = false;\n        });\n        if (valid)\n            return DBRef.fromExtendedJSON(v);\n    }\n    return value;\n}\nfunction serializeArray(array, options) {\n    return array.map((v, index) => {\n        options.seenObjects.push({ propertyName: `index ${index}`, obj: null });\n        try {\n            return serializeValue(v, options);\n        }\n        finally {\n            options.seenObjects.pop();\n        }\n    });\n}\nfunction getISOString(date) {\n    const isoStr = date.toISOString();\n    return date.getUTCMilliseconds() !== 0 ? isoStr : isoStr.slice(0, -5) + 'Z';\n}\nfunction serializeValue(value, options) {\n    if ((typeof value === 'object' || typeof value === 'function') && value !== null) {\n        const index = options.seenObjects.findIndex(entry => entry.obj === value);\n        if (index !== -1) {\n            const props = options.seenObjects.map(entry => entry.propertyName);\n            const leadingPart = props\n                .slice(0, index)\n                .map(prop => `${prop} -> `)\n                .join('');\n            const alreadySeen = props[index];\n            const circularPart = ' -> ' +\n                props\n                    .slice(index + 1, props.length - 1)\n                    .map(prop => `${prop} -> `)\n                    .join('');\n            const current = props[props.length - 1];\n            const leadingSpace = ' '.repeat(leadingPart.length + alreadySeen.length / 2);\n            const dashes = '-'.repeat(circularPart.length + (alreadySeen.length + current.length) / 2 - 1);\n            throw new BSONError('Converting circular structure to EJSON:\\n' +\n                `    ${leadingPart}${alreadySeen}${circularPart}${current}\\n` +\n                `    ${leadingSpace}\\\\${dashes}/`);\n        }\n        options.seenObjects[options.seenObjects.length - 1].obj = value;\n    }\n    if (Array.isArray(value))\n        return serializeArray(value, options);\n    if (value === undefined)\n        return null;\n    if (value instanceof Date || isDate(value)) {\n        const dateNum = value.getTime(), inRange = dateNum > -1 && dateNum < 253402318800000;\n        if (options.legacy) {\n            return options.relaxed && inRange\n                ? { $date: value.getTime() }\n                : { $date: getISOString(value) };\n        }\n        return options.relaxed && inRange\n            ? { $date: getISOString(value) }\n            : { $date: { $numberLong: value.getTime().toString() } };\n    }\n    if (typeof value === 'number' && (!options.relaxed || !isFinite(value))) {\n        if (Number.isInteger(value) && !Object.is(value, -0)) {\n            if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n                return { $numberInt: value.toString() };\n            }\n            if (value >= BSON_INT64_MIN && value <= BSON_INT64_MAX) {\n                return { $numberLong: value.toString() };\n            }\n        }\n        return { $numberDouble: Object.is(value, -0) ? '-0.0' : value.toString() };\n    }\n    if (typeof value === 'bigint') {\n        if (!options.relaxed) {\n            return { $numberLong: BigInt.asIntN(64, value).toString() };\n        }\n        return Number(BigInt.asIntN(64, value));\n    }\n    if (value instanceof RegExp || isRegExp(value)) {\n        let flags = value.flags;\n        if (flags === undefined) {\n            const match = value.toString().match(/[gimuy]*$/);\n            if (match) {\n                flags = match[0];\n            }\n        }\n        const rx = new BSONRegExp(value.source, flags);\n        return rx.toExtendedJSON(options);\n    }\n    if (value != null && typeof value === 'object')\n        return serializeDocument(value, options);\n    return value;\n}\nconst BSON_TYPE_MAPPINGS = {\n    Binary: (o) => new Binary(o.value(), o.sub_type),\n    Code: (o) => new Code(o.code, o.scope),\n    DBRef: (o) => new DBRef(o.collection || o.namespace, o.oid, o.db, o.fields),\n    Decimal128: (o) => new Decimal128(o.bytes),\n    Double: (o) => new Double(o.value),\n    Int32: (o) => new Int32(o.value),\n    Long: (o) => Long.fromBits(o.low != null ? o.low : o.low_, o.low != null ? o.high : o.high_, o.low != null ? o.unsigned : o.unsigned_),\n    MaxKey: () => new MaxKey(),\n    MinKey: () => new MinKey(),\n    ObjectId: (o) => new ObjectId(o),\n    BSONRegExp: (o) => new BSONRegExp(o.pattern, o.options),\n    BSONSymbol: (o) => new BSONSymbol(o.value),\n    Timestamp: (o) => Timestamp.fromBits(o.low, o.high)\n};\nfunction serializeDocument(doc, options) {\n    if (doc == null || typeof doc !== 'object')\n        throw new BSONError('not an object instance');\n    const bsontype = doc._bsontype;\n    if (typeof bsontype === 'undefined') {\n        const _doc = {};\n        for (const name of Object.keys(doc)) {\n            options.seenObjects.push({ propertyName: name, obj: null });\n            try {\n                const value = serializeValue(doc[name], options);\n                if (name === '__proto__') {\n                    Object.defineProperty(_doc, name, {\n                        value,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true\n                    });\n                }\n                else {\n                    _doc[name] = value;\n                }\n            }\n            finally {\n                options.seenObjects.pop();\n            }\n        }\n        return _doc;\n    }\n    else if (doc != null &&\n        typeof doc === 'object' &&\n        typeof doc._bsontype === 'string' &&\n        doc[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n        throw new BSONVersionError();\n    }\n    else if (isBSONType(doc)) {\n        let outDoc = doc;\n        if (typeof outDoc.toExtendedJSON !== 'function') {\n            const mapper = BSON_TYPE_MAPPINGS[doc._bsontype];\n            if (!mapper) {\n                throw new BSONError('Unrecognized or invalid _bsontype: ' + doc._bsontype);\n            }\n            outDoc = mapper(outDoc);\n        }\n        if (bsontype === 'Code' && outDoc.scope) {\n            outDoc = new Code(outDoc.code, serializeValue(outDoc.scope, options));\n        }\n        else if (bsontype === 'DBRef' && outDoc.oid) {\n            outDoc = new DBRef(serializeValue(outDoc.collection, options), serializeValue(outDoc.oid, options), serializeValue(outDoc.db, options), serializeValue(outDoc.fields, options));\n        }\n        return outDoc.toExtendedJSON(options);\n    }\n    else {\n        throw new BSONError('_bsontype must be a string, but was: ' + typeof bsontype);\n    }\n}\nfunction parse(text, options) {\n    const ejsonOptions = {\n        useBigInt64: options?.useBigInt64 ?? false,\n        relaxed: options?.relaxed ?? true,\n        legacy: options?.legacy ?? false\n    };\n    return JSON.parse(text, (key, value) => {\n        if (key.indexOf('\\x00') !== -1) {\n            throw new BSONError(`BSON Document field names cannot contain null bytes, found: ${JSON.stringify(key)}`);\n        }\n        return deserializeValue(value, ejsonOptions);\n    });\n}\nfunction stringify(value, replacer, space, options) {\n    if (space != null && typeof space === 'object') {\n        options = space;\n        space = 0;\n    }\n    if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n        options = replacer;\n        replacer = undefined;\n        space = 0;\n    }\n    const serializeOptions = Object.assign({ relaxed: true, legacy: false }, options, {\n        seenObjects: [{ propertyName: '(root)', obj: null }]\n    });\n    const doc = serializeValue(value, serializeOptions);\n    return JSON.stringify(doc, replacer, space);\n}\nfunction EJSONserialize(value, options) {\n    options = options || {};\n    return JSON.parse(stringify(value, options));\n}\nfunction EJSONdeserialize(ejson, options) {\n    options = options || {};\n    return parse(JSON.stringify(ejson), options);\n}\nconst EJSON = Object.create(null);\nEJSON.parse = parse;\nEJSON.stringify = stringify;\nEJSON.serialize = EJSONserialize;\nEJSON.deserialize = EJSONdeserialize;\nObject.freeze(EJSON);\n\nconst MAXSIZE = 1024 * 1024 * 17;\nlet buffer = ByteUtils.allocate(MAXSIZE);\nfunction setInternalBufferSize(size) {\n    if (buffer.length < size) {\n        buffer = ByteUtils.allocate(size);\n    }\n}\nfunction serialize(object, options = {}) {\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const minInternalBufferSize = typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n    if (buffer.length < minInternalBufferSize) {\n        buffer = ByteUtils.allocate(minInternalBufferSize);\n    }\n    const serializationIndex = serializeInto(buffer, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, null);\n    const finishedBuffer = ByteUtils.allocate(serializationIndex);\n    finishedBuffer.set(buffer.subarray(0, serializationIndex), 0);\n    return finishedBuffer;\n}\nfunction serializeWithBufferAndIndex(object, finalBuffer, options = {}) {\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const startIndex = typeof options.index === 'number' ? options.index : 0;\n    const serializationIndex = serializeInto(buffer, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, null);\n    finalBuffer.set(buffer.subarray(0, serializationIndex), startIndex);\n    return startIndex + serializationIndex - 1;\n}\nfunction deserialize(buffer, options = {}) {\n    return internalDeserialize(ByteUtils.toLocalBufferType(buffer), options);\n}\nfunction calculateObjectSize(object, options = {}) {\n    options = options || {};\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    return internalCalculateObjectSize(object, serializeFunctions, ignoreUndefined);\n}\nfunction deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {\n    const internalOptions = Object.assign({ allowObjectSmallerThanBufferSize: true, index: 0 }, options);\n    const bufferData = ByteUtils.toLocalBufferType(data);\n    let index = startIndex;\n    for (let i = 0; i < numberOfDocuments; i++) {\n        const size = bufferData[index] |\n            (bufferData[index + 1] << 8) |\n            (bufferData[index + 2] << 16) |\n            (bufferData[index + 3] << 24);\n        internalOptions.index = index;\n        documents[docStartIndex + i] = internalDeserialize(bufferData, internalOptions);\n        index = index + size;\n    }\n    return index;\n}\n\nvar bson = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Code: Code,\n    BSONSymbol: BSONSymbol,\n    DBRef: DBRef,\n    Binary: Binary,\n    ObjectId: ObjectId,\n    UUID: UUID,\n    Long: Long,\n    Timestamp: Timestamp,\n    Double: Double,\n    Int32: Int32,\n    MinKey: MinKey,\n    MaxKey: MaxKey,\n    BSONRegExp: BSONRegExp,\n    Decimal128: Decimal128,\n    setInternalBufferSize: setInternalBufferSize,\n    serialize: serialize,\n    serializeWithBufferAndIndex: serializeWithBufferAndIndex,\n    deserialize: deserialize,\n    calculateObjectSize: calculateObjectSize,\n    deserializeStream: deserializeStream,\n    BSONValue: BSONValue,\n    BSONError: BSONError,\n    BSONVersionError: BSONVersionError,\n    BSONRuntimeError: BSONRuntimeError,\n    BSONType: BSONType,\n    EJSON: EJSON\n});\n\nexports.BSON = bson;\nexports.BSONError = BSONError;\nexports.BSONRegExp = BSONRegExp;\nexports.BSONRuntimeError = BSONRuntimeError;\nexports.BSONSymbol = BSONSymbol;\nexports.BSONType = BSONType;\nexports.BSONValue = BSONValue;\nexports.BSONVersionError = BSONVersionError;\nexports.Binary = Binary;\nexports.Code = Code;\nexports.DBRef = DBRef;\nexports.Decimal128 = Decimal128;\nexports.Double = Double;\nexports.EJSON = EJSON;\nexports.Int32 = Int32;\nexports.Long = Long;\nexports.MaxKey = MaxKey;\nexports.MinKey = MinKey;\nexports.ObjectId = ObjectId;\nexports.Timestamp = Timestamp;\nexports.UUID = UUID;\nexports.calculateObjectSize = calculateObjectSize;\nexports.deserialize = deserialize;\nexports.deserializeStream = deserializeStream;\nexports.serialize = serialize;\nexports.serializeWithBufferAndIndex = serializeWithBufferAndIndex;\nexports.setInternalBufferSize = setInternalBufferSize;\n//# sourceMappingURL=bson.cjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3607);\n"],"names":["root","factory","exports","module","define","amd","globalThis","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","length","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","i","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","ip","Buffer","os","toBuffer","buff","offset","result","isV4Format","alloc","split","map","byte","parseInt","isV6Format","sections","v4Buffer","toString","splice","argv","word","join","readUInt16BE","replace","ipv4Regex","ipv6Regex","_normalizeFamily","family","toLowerCase","test","fromPrefixLen","prefixlen","bits","mask","addr","Math","max","cidr","cidrString","cidrParts","subnet","networkAddress","toLong","maskBuffer","maskLength","octet","numberOfAddresses","fromLong","firstAddress","lastAddress","broadcastAddress","subnetMask","subnetMaskLength","numHosts","contains","other","cidrSubnet","not","or","a","b","isEqual","t","isPrivate","isPublic","isLoopback","loopback","address","interfaces","networkInterfaces","res","filter","details","all","nic","addresses","Boolean","ipl","forEach","CommaAndColonSeparatedRecord","ConnectionString","redactConnectionString","whatwg_url_1","redact_1","DUMMY_HOSTNAME","HOSTS_REGEX","CaseInsensitiveMap","Map","delete","super","_normalizeKey","has","URLWithoutHost","URL","MongoParseError","constructor","uri","options","_a","looseValidation","connectionString","startsWith","match","protocol","username","password","hosts","rest","groups","decodeURIComponent","illegalCharacters","uriWithoutProtocol","authString","_hosts","isSRV","some","host","includes","Ctor","pathname","setPrototypeOf","searchParams","append","getAll","values","entries","Symbol","iterator","_ignored","hostname","port","href","clone","redact","redactValidConnectionString","typedSearchParams","for","origin","search","hash","from","entry","colonIndex","indexOf","__createBinding","o","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","mod","hasOwnProperty","index_1","inputUrl","_b","url","replacementString","redactUsernames","props","parsed","default","_c","replacements","replacer","Admin","add_user_1","execute_operation_1","list_databases_1","remove_user_1","run_command_1","validate_collection_1","db","s","async","command","executeOperation","client","RunCommandOperation","dbName","buildinfo","serverStatus","ping","passwordOrOptions","AddUserOperation","RemoveUserOperation","collectionName","ValidateCollectionOperation","ListDatabasesOperation","replSetGetStatus","resolveBSONOptions","pluckBSONSerializeOptions","Timestamp","serialize","ObjectId","MinKey","MaxKey","Long","Int32","Double","deserialize","Decimal128","DBRef","Code","calculateObjectSize","BSONType","BSONSymbol","BSONRegExp","BSON","Binary","bson_1","fieldsAsRaw","useBigInt64","promoteValues","promoteBuffers","promoteLongs","serializeFunctions","ignoreUndefined","bsonRegExp","raw","enableUtf8Validation","parent","parentOptions","bsonOptions","BulkOperationBase","FindOperators","MongoBulkWriteError","mergeBatchResults","WriteError","WriteConcernError","BulkWriteResult","Batch","BatchType","error_1","delete_1","insert_1","operation_1","update_1","utils_1","write_concern_1","kServerError","freeze","INSERT","UPDATE","DELETE","batchType","originalZeroIndex","currentIndex","originalIndexes","operations","size","sizeBytes","static","ids","idMap","doc","_id","bulkResult","insertedCount","nInserted","matchedCount","nMatched","modifiedCount","nModified","deletedCount","nRemoved","upsertedCount","upserted","upsertedIds","generateIdMap","insertedIds","ok","nUpserted","getInsertedIds","getUpsertedIds","getUpsertedIdAt","getRawResponse","hasWriteErrors","writeErrors","getWriteErrorCount","getWriteErrorAt","getWriteErrors","getWriteConcernError","writeConcernErrors","errmsg","code","MONGODB_ERROR_CODES","WriteConcernFailed","isOk","errInfo","toJSON","getOperation","op","JSON","stringify","batch","writeError","isInsertBatch","isDeleteBatch","isArray","isUpdateBatch","writeConcernError","executeCommands","bulkOperation","callback","batches","resultHandler","MongoWriteConcernError","handleMongoWriteConcernError","writeResult","handleWriteError","finalOptions","resolveOptions","ordered","isOrdered","bypassDocumentValidation","operationId","checkKeys","retryWrites","multi","limit","collection","InsertOperation","namespace","UpdateOperation","DeleteOperation","MongoServerError","assign","update","updateDocument","currentOp","buildCurrentOp","addToOperationsList","makeUpdateStatement","selector","updateOne","hasAtomicOperators","MongoInvalidArgumentError","replaceOne","replacement","deleteOne","makeDeleteStatement","upsert","collation","arrayFilters","hint","BulkWriteShimOperation","AbstractOperation","execute","server","session","topology","getTopology","hello","lastHello","usingAutoEncryption","autoEncrypter","maxBsonObjectSize","maxBatchSizeBytes","maxWriteBatchSize","maxKeySize","applyRetryableWrites","currentBatch","currentBatchSize","currentBatchSizeBytes","currentInsertBatch","currentUpdateBatch","currentRemoveBatch","writeConcern","WriteConcern","fromOptions","executed","insert","document","shouldForceServerObjectId","find","forceServerObjectId","insertOne","updateStatement","u","updateMany","deleteMany","MongoBatchReExecutionError","operation","msg","bulkOp","OrderedBulkOperation","common_1","bsonSize","UnorderedBulkOperation","ChangeStream","collection_1","constants_1","change_stream_cursor_1","db_1","mongo_client_1","mongo_types_1","kCursorStream","kClosed","kMode","CHANGE_STREAM_OPTIONS","CHANGE_DOMAIN_TYPES","COLLECTION","DATABASE","CLUSTER","CHANGE_STREAM_EVENTS","RESUME_TOKEN_CHANGED","END","CLOSE","CHANGESTREAM_CLOSED_ERROR","TypedEventEmitter","pipeline","Collection","Db","MongoClient","MongoChangeStreamError","readPreference","cursor","_createChangeStreamCursor","eventName","_streamEvents","cursorStream","resumeToken","_setIsIterator","hasNext","_processErrorIteratorMode","close","change","next","_processChange","tryNext","asyncIterator","closed","_endStream","stream","streamOptions","_setIsEmitter","MongoAPIError","changeStreamStageOptions","filterOptions","allChangesForCluster","$changeStream","MongoRuntimeError","changeStreamCursor","ChangeStreamCursor","event","e","CHANGE","_closeEmitterModeWithError","ERROR","catch","processedChange","_processErrorStreamMode","destroy","cacheResumeToken","startAtOperationTime","changeStreamError","isResumableError","maxWireVersion","selectServer","serverSelectionError","resumeOptions","selectServerAsync","RESPONSE","MORE","INIT","AuthProvider","AuthContext","connection","credentials","prepare","handshakeDoc","authContext","auth","resolveCname","performGSSAPICanonicalizeHostName","GSSAPI","GSSAPICanonicalizationValue","dns","process","deps_1","auth_provider_1","none","forward","forwardAndReverse","MongoMissingCredentialsError","externalCommand","cb","ns","hostAddress","Kerberos","initializeClient","mechanismProperties","serviceName","SERVICE_NAME","initOptions","user","spnHost","SERVICE_HOST","spn","platform","SERVICE_REALM","makeKerberosClient","MongoMissingDependencyError","step","payload","saslStart","mechanism","autoAuthorize","negotiate","conversationId","saslContinue","response","wrap","finalize","retries","mode","CANONICALIZE_HOST_NAME","lookup","resolvePtr","results","r","MongoCredentials","gssapi_1","providers_1","getDefaultAuthMechanism","saslSupportedMechs","AuthMechanism","MONGODB_SCRAM_SHA256","MONGODB_SCRAM_SHA1","MONGODB_CR","source","MONGODB_DEFAULT","env","AWS_ACCESS_KEY_ID","AWS_SECRET_ACCESS_KEY","AWS_SESSION_TOKEN","equals","resolveAuthMechanism","validate","MONGODB_GSSAPI","MONGODB_PLAIN","MONGODB_OIDC","PROVIDER_NAME","REFRESH_TOKEN_CALLBACK","REQUEST_TOKEN_CALLBACK","AUTH_MECHS_AUTH_SRC_EXTERNAL","MONGODB_X509","canonicalization","creds","MongoCR","crypto","getnonce","nonce","md5","createHash","hash_password","digest","authenticateCommand","authenticate","MongoDBAWS","http","mongo_credentials_1","AWS_EC2_URI","AWS_EC2_PATH","aws4","sign","MongoCompatibilityError","done","AccessKeyId","SecretAccessKey","Token","MONGODB_AWS","credentialProvider","getAwsCredentialProvider","AWS_CONTAINER_CREDENTIALS_RELATIVE_URI","request","method","json","headers","token","roleName","fromNodeProviderChain","provider","then","accessKeyId","secretAccessKey","sessionToken","Expiration","expiration","MongoAWSError","makeTempCredentials","tempCredentials","awsCredentials","randomBytes","p","serverResponse","buffer","h","serverNonce","ByteUtils","subarray","byteLength","body","region","deriveRegion","service","toBase64","path","Authorization","d","parts","_options","timeout","parse","req","setEncoding","data","end","MongoDBOIDC","OIDC_WORKFLOWS","aws_service_workflow_1","callback_workflow_1","CallbackWorkflow","AwsServiceWorkflow","speculativeAuthenticate","getWorkflow","workflow","speculativeAuth","providerName","promises_1","service_workflow_1","ServiceWorkflow","tokenFile","AWS_WEB_IDENTITY_TOKEN_FILE","readFile","token_entry_cache_1","TIMEOUT_MS","finishAuth","commandAsync","jwt","continueCommandDocument","accessToken","cache","TokenEntryCache","refresh","getEntry","startCommandDocument","stepOne","requestAndFinish","isValid","deleteEntry","refreshAndFinish","serverResult","tokenResult","stepOneResult","addEntry","deleteExpiredEntries","commandDocument","getToken","TokenEntry","FN_HASH_COUNTER","NO_FUNCTION","FN_HASHES","WeakMap","Date","now","cacheKey","requestFn","refreshFn","requestHash","refreshHash","hashFunctions","expiresInSeconds","clear","Plain","buffer_1","Set","ScramSHA256","ScramSHA1","ScramSHA","cryptoMethod","saslprep","emitWarning","makeFirstMessage","continueScramConversation","saslStartCmd","_err","resolveError","executeScram","cleanUsername","clientFirstMessageBare","skipEmptyExchange","processedPassword","getFips","passwordDigest","isBuffer","dict","parsePayload","iterations","salt","rnonce","withoutProof","saltedPassword","_hiCache","saltedData","pbkdf2Sync","hiLengthMap","_hiCacheCount","HI","clientKey","HMAC","serverKey","storedKey","text","authMessage","clientFinal","xor","serverSignature","saslContinueCmd","parsedResponse","lhs","rhs","timingSafeEqual","compareDigest","retrySaslContinueCmd","valueParts","createHmac","sha256","sha1","$err","X509","x509AuthenticateCommand","SENSITIVE_COMMANDS","CommandFailedEvent","CommandSucceededEvent","CommandStartedEvent","commands_1","cmd","extractCommand","commandName","extractCommandName","connectionId","serviceId","extractConnectionDetails","commandObj","requestId","databaseName","maybeRedact","hasServiceId","reply","started","duration","calculateDurationInMs","Msg","deepCopy","query","$query","id","cursorId","firstBatch","documents","extractReply","failure","HELLO_COMMANDS","LEGACY_HELLO_COMMAND","LEGACY_HELLO_COMMAND_CAMEL_CASE","commandDoc","LEGACY_FIND_QUERY_MAP","$orderby","$hint","$comment","$maxScan","$max","$min","$returnKey","$showDiskLoc","$maxTimeMS","$snapshot","LEGACY_FIND_OPTIONS_MAP","numberToSkip","numberToReturn","returnFieldSelector","OP_QUERY_KEYS","legacyKey","pre32Limit","$explain","explain","clonedQuery","clonedCommand","BinMsg","Response","Query","read_preference_1","_requestId","getRequestId","maxBsonSize","batchSize","tailable","secondaryOk","oplogReplay","noCursorTimeout","awaitData","exhaust","partial","incRequestId","nextRequestId","toBin","buffers","projection","header","totalLength","OP_QUERY","write","msgHeader","msgBody","opts","responseTo","opCode","fromCompressed","isParsed","documentsReturnedIn","responseFlags","readInt32LE","startingFrom","numberReturned","cursorNotFound","queryFailure","shardConfigStale","awaitCapable","$db","databaseNamespace","ReadPreference","PRIMARY","$readPreference","checksumPresent","moreToCome","exhaustAllowed","makeDocumentSegment","writeInt32LE","OP_MSG","writeUInt32LE","payloadTypeBuffer","documentBuffer","serializeBson","validation","parseBsonSerializationOptions","payloadType","readUInt8","readUInt32LE","bin","utf8","LEGAL_TCP_SOCKET_OPTIONS","LEGAL_TLS_SOCKET_OPTIONS","prepareHandshakeDocument","connect","net","tls","mongocr_1","mongodb_aws_1","mongodb_oidc_1","plain_1","scram_1","x509_1","connection_1","constants_2","AUTH_PROVIDERS","compressors","serverApi","version","helloOk","metadata","makeClientMetadata","compression","loadBalanced","parseConnectOptions","socketPath","makeConnection","existingSocket","socket","ConnectionType","connectionType","Connection","CryptoConnection","conn","_callback","force","handshakeOptions","connectTimeoutMS","socketTimeoutMS","start","getTime","isWritablePrimary","supportedServerErr","serverVersionHighEnough","MIN_SUPPORTED_WIRE_VERSION","serverVersionLowEnough","minWireVersion","MAX_SUPPORTED_WIRE_VERSION","MAX_SUPPORTED_SERVER_VERSION","MIN_SUPPORTED_SERVER_VERSION","checkSupportedServer","lastHelloMS","arbiterOnly","resolvedCredentials","MongoError","addErrorLabel","MongoErrorLabel","HandshakeError","needsRetryableWriteLabel","RetryableWriteError","performInitialHandshake","SOCKET_ERROR_EVENTS","useTLS","keepAlive","noDelay","rejectUnauthorized","keepAliveInitialDelay","round","proxyHost","HostAddress","fromHostPort","proxyPort","rawSocket","destination","socks","SocksClient","createConnection","existing_socket","proxy","userId","proxyUsername","proxyPassword","connectionFailureError","makeSocks5Connection","tlsSocket","servername","isIP","parseSslOptions","disableRenegotiation","setKeepAlive","setTimeout","setNoDelay","connectEvent","cancellationHandler","errorHandler","cancellationToken","connectHandler","authorizationError","nextTick","MongoNetworkError","MongoNetworkTimeoutError","hasSessionSupport","timers_1","util_1","sessions_1","command_monitoring_events_1","message_stream_1","stream_description_1","shared_1","kStream","kQueue","kMessageStream","kGeneration","kLastUseTime","kClusterTime","kDescription","kHello","kAutoEncrypter","kDelayedTimeoutId","promisify","remoteAddress","remotePort","uuidV4","streamIdentifier","monitorCommands","StreamDescription","generation","MessageStream","maxBsonMessageSize","onMessage","onError","onClose","onTimeout","pipe","description","receiveResponse","isMonitoringConnection","idleTime","clusterTime","markAvailable","cleanup","beforeHandshake","unref","delayedTimeoutId","clearTimeout","operationDescription","orphaned","updateSessionFromResponse","$clusterTime","CLUSTER_TIME_RECEIVED","PINNED","UNPINNED","completeCleanup","writableEnded","getReadPreference","shouldUseOpMsg","__nodejs_mock_server__","supportsOpMsg","finalCmd","strict","deprecationErrors","apiVersion","apiStrict","apiDeprecationErrors","greaterThan","applySession","explicit","isSharded","commandOptions","cmdNs","noResponse","compressor","agreedCompressor","zlibCompressionLevel","COMMAND_STARTED","COMMAND_FAILED","COMMAND_SUCCEEDED","writeCommand","logicalSessionTimeoutMinutes","MESSAGE","serverWireVersion","sort","findAndModify","indexKeys","createIndexes","indexes","encrypt","encrypted","decrypt","ConnectionPool","PoolState","connect_1","connection_pool_events_1","errors_1","metrics_1","kServer","kConnections","kPending","kCheckedOut","kMinPoolSizeTimer","kServiceGenerations","kConnectionCounter","kCancellationToken","kWaitQueue","kCancelled","kMetrics","kProcessingWaitQueue","kPoolState","paused","ready","maxPoolSize","minPoolSize","maxConnecting","maxIdleTimeMS","waitQueueTimeoutMS","minPoolSizeCheckFrequencyMS","List","makeCounter","CancellationToken","Infinity","ConnectionPoolMetrics","CONNECTION_POOL_CREATED","ConnectionPoolCreatedEvent","totalConnectionCount","availableConnectionCount","pendingConnectionCount","currentCheckedOutCount","waitQueueSize","serviceGenerations","serverError","checkedOutConnections","waitQueueErrorMetrics","info","CONNECTION_POOL_READY","ConnectionPoolReadyEvent","ensureMinPoolSize","checkOut","CONNECTION_CHECK_OUT_STARTED","ConnectionCheckOutStartedEvent","waitQueueMember","timer","CONNECTION_CHECK_OUT_FAILED","ConnectionCheckOutFailedEvent","WaitQueueTimeoutError","processWaitQueue","checkIn","poolClosed","stale","connectionIsStale","willDestroy","CONNECTION_CHECKED_IN","ConnectionCheckedInEvent","reason","destroyConnection","sid","toHexString","CONNECTION_POOL_CLEARED","ConnectionPoolClearedEvent","interruptInUseConnections","oldGeneration","alreadyPaused","clearMinPoolSizeTimer","minGeneration","PoolClearedOnNetworkError","_cb","return","eachAsync","toArray","CONNECTION_CLOSED","ConnectionClosedEvent","CONNECTION_POOL_CLOSED","ConnectionPoolClosedEvent","withConnection","fn","fnErr","minPoolSizeTimer","connectionIsIdle","destroyConnectionIfPerished","isStale","isIdle","connectOptions","CONNECTION_CREATED","ConnectionCreatedEvent","connectionGeneration","PoolClosedError","PoolClearedError","APM_EVENTS","pinType","markPinned","markUnpinned","CONNECTION_READY","ConnectionReadyEvent","prune","handleError","first","add","CONNECTION_CHECKED_OUT","ConnectionCheckedOutEvent","ConnectionPoolMonitoringEvent","pool","time","MongoDriverError","stream_1","compression_1","MESSAGE_HEADER_SIZE","kBuffer","Duplex","BufferPool","_write","chunk","_","processIncomingData","_read","uncompressibleCommands","canCompress","concatenatedOriginalCommandBuffer","messageToBeCompressed","originalCommandOpCode","compress","compressedMessage","OP_COMPRESSED","compressionDetails","writeUInt8","Compressor","sizeOfMessage","getInt32","read","messageHeader","monitorHasAnotherHello","ResponseType","messageBody","compressorID","compressedBuffer","decompress","MongoDecompressionError","txnConnections","cursorConnections","otherConnections","TXN","CURSOR","reset","OTHER","server_description_1","RESPONSE_FIELDS","ServerType","Unknown","maxMessageSizeBytes","parseServerType","field","c","zlib","snappy","zstd","dataToBeCompressed","zlibDeflate","deflate","zlibOptions","Snappy","ZStandard","level","compressedData","zlibInflate","inflate","uncompress","asBuffer","OP_DELETE","OP_INSERT","OP_UPDATE","OP_REPLY","applyCommonQueryOptions","topology_description_1","primary","fromString","queryOptions","topologyOrServer","Mongos","TopologyDescription","servers","ordered_1","unordered_1","change_stream_1","aggregation_cursor_1","find_cursor_1","list_indexes_cursor_1","bulk_write_1","count_1","count_documents_1","distinct_1","drop_1","estimated_document_count_1","find_and_modify_1","indexes_1","is_capped_1","options_operation_1","rename_1","stats_1","read_concern_1","checkCollectionName","MongoDBNamespace","pkFactory","DEFAULT_PK_FACTORY","readConcern","ReadConcern","collectionHint","normalizeHintField","InsertOneOperation","docs","InsertManyOperation","BulkWriteOperation","UpdateOneOperation","ReplaceOneOperation","UpdateManyOperation","DeleteOneOperation","DeleteManyOperation","newName","RenameOperation","DropCollectionOperation","FindCursor","OptionsOperation","IsCappedOperation","indexSpec","CreateIndexOperation","indexSpecs","CreateIndexesOperation","maxTimeMS","indexName","DropIndexOperation","DropIndexesOperation","listIndexes","ListIndexesCursor","IndexExistsOperation","IndexInformationOperation","EstimatedDocumentCountOperation","CountDocumentsOperation","DistinctOperation","IndexesOperation","CollStatsOperation","FindOneAndDeleteOperation","FindOneAndReplaceOperation","FindOneAndUpdateOperation","aggregate","AggregationCursor","watch","initializeUnorderedBulkOp","initializeOrderedBulkOp","CountOperation","FEATURE_FLAGS","DEFAULT_OPTIONS","OPTIONS","parseOptions","resolveSRVRecord","fs","mongodb_connection_string_url_1","url_1","encrypter_1","mongo_logger_1","VALID_TXT_RECORDS","LB_SINGLE_HOST_ERROR","LB_REPLICA_SET_ERROR","LB_DIRECT_CONNECTION_ERROR","matchesParentDomain","srvAddress","parentDomain","regex","srv","endsWith","srvHost","lookupAddress","promises","resolveSrv","srvServiceName","hostAddresses","record","validateLoadBalancedOptions","resolveTxt","txtRecordOptions","URLSearchParams","option","replicaSet","userSpecifiedAuthSource","merge","userSpecifiedReplicaSet","srvMaxHosts","TRUTHS","FALSEHOODS","getBoolean","valueString","emitWarningOnce","getIntFromOptions","parsedInt","parseInteger","getUIntFromOptions","parsedValue","entriesFromString","keyValuePairs","keyValue","mongoOptions","isSrv","directConnection","setOption","descriptor","transform","deprecated","deprecatedMsg","isRecord","transformValue","mongoClient","flag","urlOptions","objectOptions","allOptions","allKeys","objectOptionValue","urlValue","defaultOptionsValue","tlsAndSslOpts","check","checkTLSOptions","unsupportedOptions","setDifference","optionWord","isOrAre","isGssapi","isX509","isAws","isOidc","autoEncryption","Encrypter","checkForMongoCrypt","encrypter","noUserSpecifiedTLS","noUserSpecifiedSSL","loggerFeatureFlag","loggerEnvOptions","loggerClientOptions","MONGODB_LOG_COMMAND","MONGODB_LOG_TOPOLOGY","MONGODB_LOG_SERVER_SELECTION","MONGODB_LOG_CONNECTION","MONGODB_LOG_ALL","MONGODB_LOG_MAX_DOCUMENT_LENGTH","MONGODB_LOG_PATH","mongodbLogPath","mongoLoggerOptions","MongoLogger","appName","driverInfo","authMechanism","mechanisms","RegExp","authMechanismProperties","optionValue","authSource","serverApiToValidate","versionToValidate","ServerApiVersion","compressionList","compVal","compValArray","application","fsync","wc","heartbeatFrequencyMS","j","journal","localThresholdMS","maxStalenessSeconds","minInternalBufferSize","minHeartbeatFrequencyMS","createPk","readConcernLevel","rp","rpOpts","hedge","tags","readPreferenceTags","tag","readPreferenceTag","retryReads","serverSelectionTimeoutMS","ssl","sslCA","readFileSync","encoding","sslCRL","sslCert","sslKey","sslPass","sslValidate","tlsAllowInvalidCertificates","tlsAllowInvalidHostnames","tlsCAFile","tlsCertificateFile","tlsCertificateKeyFile","tlsCertificateKeyFilePassword","tlsInsecure","checkServerIdentity","wtimeout","wtimeoutMS","srvPoller","minDHSize","pskCallback","secureContext","enableTrace","requestCert","ALPNProtocols","SNICallback","requestOCSP","localAddress","localPort","hints","ca","cert","ciphers","crl","ecdhCurve","passphrase","pfx","secureProtocol","useNewUrlParser","useUnifiedTopology","TOPOLOGY_EVENTS","CMAP_EVENTS","HEARTBEAT_EVENTS","SERVER_HEARTBEAT_FAILED","SERVER_HEARTBEAT_SUCCEEDED","SERVER_HEARTBEAT_STARTED","TOPOLOGY_DESCRIPTION_CHANGED","TOPOLOGY_CLOSED","TOPOLOGY_OPENING","SERVER_DESCRIPTION_CHANGED","SERVER_CLOSED","SERVER_OPENING","DESCRIPTION_RECEIVED","ENDED","CLOSED","CONNECT","OPEN","TIMEOUT","SYSTEM_JS_COLLECTION","SYSTEM_COMMAND_COLLECTION","SYSTEM_USER_COLLECTION","SYSTEM_PROFILE_COLLECTION","SYSTEM_INDEX_COLLECTION","SYSTEM_NAMESPACE_COLLECTION","MONGO_CLIENT_EVENTS","LOCAL_SERVER_EVENTS","SERVER_RELAY_EVENTS","assertUninitialized","AbstractCursor","CURSOR_FLAGS","get_more_1","kill_cursors_1","kId","kDocuments","kNamespace","kClient","kSession","kOptions","kTransform","kInitialized","kKilled","kInit","isMongoClient","comment","maxAwaitTimeMS","ClientSession","startSession","owner","clientSession","cursorOptions","killed","bufferedCount","readBufferedDocuments","number","bufferedDocs","documentsToRead","min","cleanupCursorAsync","needsToEmitClosed","ZERO","ReadableCursorStream","Transform","objectMode","highWaterMark","nextAsync","MongoCursorExhaustedError","array","addCursorFlag","oldTransform","withReadPreference","withReadConcern","resolvedReadConcern","MongoTailableCursorError","rewind","hasEnded","endSession","_getMore","getMoreOperation","GetMoreOperation","_initialize","fromNumber","fromBigInt","pushMany","cleanupCursor","cursorIsDead","nextDocument","blocking","nextBatch","isZero","cursorNs","finally","inTransaction","maybeClearPinnedConnection","KillCursorsOperation","MongoCursorInUseError","Readable","autoDestroy","_readInProgress","_cursor","_readNext","_destroy","closeError","destroyed","aggregate_1","abstract_cursor_1","kPipeline","clonedOptions","mergeOptions","aggregateOperation","AggregateOperation","verbosity","group","$group","$limit","$match","out","$out","project","$project","$lookup","$redact","skip","$skip","$sort","unwind","$unwind","geoNear","$geoNear","_resumeToken","startAfter","resumeAfter","hasReceived","postBatchResumeToken","_processBatch","operationTime","FLAGS","find_1","sort_1","kFilter","kNumReturned","kBuiltOptions","formatSort","findOperation","FindOperation","numReturned","returnKey","showRecordId","addQueryModifier","substr","direction","allowDiskUse","allow","ListCollectionsCursor","list_collections_1","ListCollectionsOperation","ListIndexesOperation","admin_1","CONSTANTS","list_collections_cursor_1","collections_1","create_collection_1","profiling_level_1","set_profiling_level_1","DB_OPTIONS_ALLOW_LIST","invalidChars","validateDatabaseName","preference","CreateCollectionOperation","admin","DbStatsOperation","listCollections","fromCollection","toCollection","new_collection","DropDatabaseOperation","CollectionsOperation","SetProfilingLevelOperation","ProfilingLevelOperation","AutoEncryptionLoggerLevel","makeErrorModule","Proxy","kModuleError","FatalError","Warning","Info","Trace","AutoEncrypterClass","kInternalClient","bypassAutoEncryption","needsConnecting","keyVaultClient","getInternalClient","metadataClient","proxyOptions","internalClient","teardown","mongodbClientEncryption","getMongoDBClientEncryption","extension","AutoEncrypter","isNetworkTimeoutError","isSDAMUnrecoverableError","isNodeShuttingDownError","isRetryableReadError","isRetryableWriteError","MongoServerSelectionError","MongoSystemError","isNetworkErrorBeforeHandshake","MongoTopologyClosedError","MongoServerClosedError","MongoUnexpectedServerResponseError","MongoGridFSChunkError","MongoGridFSStreamError","MongoKerberosError","MongoExpiredSessionError","MongoTransactionError","MongoNotConnectedError","GET_MORE_RESUMABLE_CODES","NODE_IS_RECOVERING_ERROR_MESSAGE","LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE","LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE","kErrorLabels","HostUnreachable","HostNotFound","NetworkTimeout","ShutdownInProgress","PrimarySteppedDown","ExceededTimeLimit","SocketException","NotWritablePrimary","InterruptedAtShutdown","InterruptedDueToReplStateChange","NotPrimaryNoSecondaryOk","NotPrimaryOrSecondary","StaleShardVersion","StaleEpoch","StaleConfig","RetryChangeStream","FailedToSatisfyReadPreference","CursorNotFound","LegacyNotPrimary","NamespaceNotFound","IllegalOperation","MaxTimeMSExpired","UnknownReplWriteConcern","UnsatisfiableWriteConcern","TransientTransactionError","UnknownTransactionCommitResult","ResumableChangeStreamError","ResetPool","InterruptInUseConnections","NoWritesPerformed","cause","hasErrorLabel","label","errorLabels","kBeforeHandshake","input","output","codeName","makeWriteConcernResultObject","RETRYABLE_READ_ERROR_CODES","RETRYABLE_WRITE_ERROR_CODES","SDAM_RECOVERING_CODES","SDAM_NOT_PRIMARY_CODES","SDAM_NODE_SHUTTING_DOWN_ERROR_CODES","isRecoveringError","wireVersion","Explain","ExplainVerbosity","queryPlanner","queryPlannerExtended","executionStats","allPlansExecution","GridFSBucketReadStream","chunks","files","bytesToTrim","bytesToSkip","bytesRead","expected","expectedEnd","file","findOneOptions","handleReadResult","filename","floor","chunkSize","handleStartOption","files_id","$gte","ceil","handleEndOption","FILE","findOne","waitForFile","bytesRemaining","expectedN","expectedLength","buf","sliceStart","sliceEnd","atEndOfStream","bytesLeftToRead","doRead","throwIfInitialized","DATA","GridFSBucket","download_1","upload_1","DEFAULT_GRIDFS_BUCKET_OPTIONS","bucketName","chunkSizeBytes","privateOptions","_chunksCollection","_filesCollection","checkedIndexes","calledOpenUploadStream","openUploadStream","GridFSBucketWriteStream","openUploadStreamWithId","openDownloadStream","openDownloadStreamByName","uploadDate","revision","$set","drop","INDEX","Writable","bucket","bufToStore","pos","streamEnd","outstandingRequests","errored","aborted","createIndex","background","hasChunksIndex","writeConcernOptions","getWriteOptions","unique","checkChunksIndex","checkIndexes","encodingOrCallback","waitForIndexes","checkAborted","inputBuf","inputBufRemaining","spaceRemaining","numToCopy","inputBufPos","createChunkDoc","checkDone","__handleError","doWrite","chunkOrCallback","FINISH","writeRemnant","filesId","filesDoc","contentType","aliases","createFilesDoc","obj","remnant","ServerDescriptionChangedEvent","ServerClosedEvent","TopologyType","ReadPreferenceMode","ReadConcernLevel","ProfilingLevel","ReturnDocument","SrvPollingEvent","TopologyOpeningEvent","TopologyDescriptionChangedEvent","TopologyClosedEvent","ServerOpeningEvent","ServerHeartbeatSucceededEvent","ServerHeartbeatStartedEvent","ServerHeartbeatFailedEvent","gridfs_1","bson_2","common_2","abstract_cursor_2","error_2","explain_1","mongo_client_2","common_3","read_concern_2","read_preference_2","events_1","srv_polling_1","connection_string_1","server_selection_1","topology_1","v1","mongoLogger","hasBeenClosed","sessionPool","ServerSessionPool","activeSessions","isConnected","Topology","topologyConnect","initAutoEncrypter","connectInternalClient","activeSessionEnds","readPreferenceServerSelector","primaryPreferred","topologyDescription","serverDescriptions","endSessions","sessions","optionsOrOperation","withSessionCallback","MongoLoggableComponent","SeverityLevel","parseSeverityFromString","validSeverities","lowerSeverity","resolveLogPath","isValidLogDestinationString","stderr","stdout","EMERGENCY","ALERT","CRITICAL","WARNING","NOTICE","INFORMATIONAL","DEBUG","TRACE","OFF","COMMAND","TOPOLOGY","SERVER_SELECTION","CONNECTION","componentSeverities","maxDocumentLength","logDestination","emergency","component","alert","critical","notice","debug","trace","envOptions","clientOptions","combinedOptions","defaultSeverity","serverSelection","parseUnsignedInteger","command_1","CommandOperation","digestPassword","roles","userPassword","createUser","customData","pwd","executeCommand","defineAspects","Aspect","WRITE_OPERATION","DB_AGGREGATE_COLLECTION","hasWriteStage","finalStage","$merge","trySecondaryWrite","canRetryRead","addToPipeline","stage","let","READ_OPERATION","RETRYABLE","EXPLAINABLE","CURSOR_CREATING","coll","bulk","nameOnly","collections","dbNameOverride","authdb","withCollection","hasAspect","canRetryWrite","commandSupportsReadConcern","MIN_SECONDARY_WRITE_WIRE_VERSION","omitReadPreference","SKIP_COLLATION","decorateWithExplain","prepareDocs","indexInformation","_optionsOrCallback","full","isDestroyed","processResults","$sum","ILLEGAL_COMMAND_FIELDS","encryptedFields","encryptedFieldsMap","escCollection","eccCollection","ecocCollection","createOp","clusteredIndex","executeWithoutEncryptedFieldsCheck","createIndexOp","__safeContent__","statements","every","deletes","acknowledged","q","distinct","decorateWithReadConcern","decorateWithCollation","listCollectionsResult","dropOp","dropDatabase","MMAPv1_RETRY_WRITES_ERROR_CODE","MMAPv1_RETRY_WRITES_ERROR_MESSAGE","maybeCallback","snapshotEnabled","capabilities","supportsSnapshotReads","isPinned","transaction","isCommitted","bypassPinningCheck","unpin","MUST_SELECT_SAME_SERVER","sameServerSelector","secondaryWritableServerSelector","commonWireVersion","executeAsync","willRetryRead","willRetryWrite","supportsRetryableWrites","hasReadAspect","hasWriteAspect","willRetry","incrementTransactionNumber","operationError","originalError","isWriteOperation","isReadOperation","forceClear","retryError","retryOperation","executeOperationAsync","objectSize","_bsontype","findCommand","reduce","singleBatch","abs","allowPartialResults","makeFindCommand","configureFindAndModifyCmdBaseUpdateOpts","cmdBase","new","returnDocument","AFTER","BEFORE","FindAndModifyOperation","remove","fields","getMoreCmd","getMore","EnsureIndexOperation","common_functions_1","VALID_INDEX_OPTIONS","makeIndexSpec","x","spec","property","isObject","userIndex","flat","fromEntries","optionName","commitQuorum","indexNames","dropIndexes","collectionNamespace","insertedId","capped","killCursors","killCursorsCommand","cursors","authorizedCollections","generateCommand","listDatabases","authorizedDatabases","aspect","ctor","aspects","clearSession","profile","was","dropUser","RunAdminCommandOperation","renameCollection","to","dropTarget","newColl","levelValues","slowOnly","enumToString","collStats","scale","dbStats","updates","upsertedId","valid","local","majority","linearizable","available","snapshot","MAJORITY","AVAILABLE","LINEARIZABLE","SNAPSHOT","secondary","secondaryPreferred","nearest","PRIMARY_PREFERRED","SECONDARY","SECONDARY_PREFERRED","NEAREST","_advanceClusterTime","drainTimerQueue","STATE_CONNECTED","STATE_CONNECTING","STATE_CLOSED","STATE_CLOSING","Single","ReplicaSetNoPrimary","ReplicaSetWithPrimary","Sharded","LoadBalanced","Standalone","PossiblePrimary","RSPrimary","RSSecondary","RSArbiter","RSOther","RSGhost","LoadBalancer","queue","entity","topologyId","previousDescription","newDescription","MonitorInterval","RTTPinger","Monitor","server_1","kMonitorId","kConnection","kRTTPinger","kRoundTripTime","STATE_IDLE","STATE_MONITORING","stateTransition","makeStateMachine","INVALID_REQUEST_CHECK_STATES","isInCloseState","monitor","monitorServer","immediate","requestCheck","wake","topologyVersion","resetMonitorState","stop","failureHandler","Server","isAwaitable","tv","processId","counter","isLong","rttPinger","roundTripTime","checkServer","measureRoundTripTime","measureAndReschedule","isExpeditedCallToFnScheduled","stopped","isExecutionInProgress","hasExecutedOnce","_executeAndReschedule","timerId","lastExecutionEnded","_reschedule","timeSinceLastCall","currentTime","lastCallTime","isExpeditedCheckScheduled","ms","connection_pool_1","transactions_1","monitor_1","kMonitor","poolOptions","operationCount","markServerUnknown","ServerDescription","calculateRoundTripTime","wireProtocolCommand","pinnedConnection","isPinnableCommand","checkedOut","pin","serverSession","isDirty","inActiveTransaction","isRetryableWritesEnabled","isTransactionCommand","makeOperationHandler","isNetworkNonTimeoutError","isNetworkTimeoutBeforeHandshakeError","isAuthHandshakeError","etv","stv","compareTopologyVersion","shouldHandleStateChangeError","shouldClearPool","oldRtt","WRITABLE_SERVER_TYPES","DATA_BEARING_SERVER_TYPES","isreplicaset","setName","hidden","currentTv","newTv","currentCounter","newCounter","compare","passives","arbiters","lastUpdateTime","lastWriteDate","lastWrite","setVersion","electionId","me","allHosts","isReadable","isWritable","isDataBearing","chopLength","topologyVersionsEqual","electionIdsEqual","compareObjectId","errorStrictEqual","arrayStrictEqual","tags2","tagsKeys","tags2Keys","tagsStrictEqual","writableServerSelector","IDLE_WRITE_PERIOD","SMALLEST_MAX_STALENESS_SECONDS","tagSetMatch","tagSet","serverTags","serverTagKeys","latencyWindowReducer","low","high","primaryFilter","secondaryFilter","nearestFilter","knownFilter","loadBalancerFilter","selectedServers","serversMatchingTagset","matched","tagSetReducer","maxStaleness","maxStalenessVariance","sMax","maxStalenessReducer","sd","SrvPoller","srvRecords","hostnames","fromSrvRecord","rescanSrvIntervalMS","haMode","_timeout","intervalMS","schedule","_poll","success","SRV_RECORD_DISCOVERY","dnsError","finalAddresses","ServerCapabilities","globalTopologyCounter","seeds","seedlist","seed","topologyType","topologyTypeFromOptions","selectedHosts","shuffle","connectionTimers","detectShardedTopology","ev","detectSrvRecords","previousType","newType","transitionToSharded","srvListeners","listeningToSrvPolling","previousTopologyDescription","updateFromSrvPollingEvent","updateServers","serverDescription","createAndConnectServer","serverUpdateHandler","exitWithError","destroyedServers","destroyServer","drainWaitQueue","serverSelector","translate","timeoutError","hasServer","incomingServerDescription","currentServerDescription","currentTopologyVersion","isStaleServerDescription","previousServerDescription","equalDescriptions","compatibilityError","clientMetadata","newTopologyType","serverAddress","membersToProcess","selectedDescriptions","selectedServer","descriptions","server1","server2","isActive","pinServer","hasAggregationCursor","hasWriteCommands","hasTextSearch","hasAuthCommands","hasListCollectionsCommand","hasListIndexesCommand","commandsTakeWriteConcern","commandsTakeCollation","WIRE_CONSTANTS","MONGOS_OR_UNKNOWN","MONGOS_OR_STANDALONE","NON_PRIMARY_RS_MEMBERS","maxSetVersion","maxElectionId","compatible","incomingHostnames","currentHostnames","hostnamesToAdd","hostnamesToRemove","removedHost","hostToAdd","selectedHostToAdd","serverType","topologyTypeForServerType","updateRsFromPrimary","updateRsNoPrimaryFromMember","checkHasPrimary","updateRsWithPrimaryFromMember","descriptionsWithError","hasKnownServers","hasDataBearingServers","electionIdComparison","maxElectionIdIsEqual","maxElectionIdIsLess","maxSetVersionIsLessOrEqual","currentAddresses","responseAddresses","ServerSession","kServerSession","kSnapshotTime","kSnapshotEnabled","kPinnedConnection","kTxnNumberIncrement","causalConsistency","acquire","defaultCausalConsistencyValue","supports","initialClusterTime","defaultTransactionOptions","Transaction","unpinServer","abortTransaction","release","advanceOperationTime","advanceClusterTime","signature","keyId","startTransaction","topologyMaxWireVersion","maxCommitTimeMS","transition","TxnState","STARTING_TRANSACTION","endTransactionAsync","toBSON","attemptTransaction","MAX_WITH_TRANSACTION_TIMEOUT","NON_DETERMINISTIC_WRITE_CONCERN_ERRORS","hasNotTimedOut","startTime","loadBalancer","NO_TRANSACTION","isMaxTimeMSExpiredError","attemptTransactionCommit","commitTransaction","USER_EXPLICIT_TXN_END_STATES","TRANSACTION_COMMITTED","TRANSACTION_ABORTED","promise","isPromiseLike","userExplicitlyEndedTransaction","maybeRetryOrThrow","txnState","TRANSACTION_COMMITTED_EMPTY","commandHandler","isNonDeterministicWriteConcernError","isUnknownTransactionCommitResult","recoveryToken","SUBTYPE_UUID","lastUse","txnNumber","hasTimedOut","sessionTimeoutMinutes","arrayBuffer","ArrayBuffer","idBytes","sub_type","potentialSession","lsid","inTxnOrTxnCommand","afterClusterTime","atClusterTime","autocommit","TRANSACTION_IN_PROGRESS","_recoveryToken","prepareDirection","$meta","sortEntries","mapToMap","objectToMap","isDeep","deepToMap","isPair","stringsToMap","stateMachine","ACTIVE_STATES","COMMITTED_STATES","_pinnedServer","isStarting","nextState","nextStates","MONGODB_WARNING_CODE","isHello","isSuperset","eachAsyncSeries","applyWriteConcern","toLocalBufferType","byteOffset","seqA","seqB","uint8array","finalHint","param","TO_STRING","object","names","sources","collectionParts","newCount","promiseFn","eachFn","idx","awaiting","eachCallback","arr2","elt","stateTable","newState","legalStates","NODE_DRIVER_VERSION","hrtime","subset","elem","driver","architecture","arch","endianness","elapsed","setA","setB","difference","HAS_OWN","prop","requiredKeys","item","toStringTag","head","prev","node","nodes","ptr","newNode","iterable","prevNode","nextNode","last","totalByteLength","firstBuffer","top4Bytes","allocUnsafe","bytesReadable","bytes","hostString","isIPv6","escapedHost","urlString","urlError","runtimeError","normalized","substring","inspect","emittedWarnings","trunc","en","sequence","items","remainingItemsToShuffle","lowerBound","randomIndex","random","swapHold","mapReduce","inline","MONGODB_CLIENT_ENCRYPTION_OVERRIDE","oid1","oid2","WRITE_CONCERN_KEYS","inherit","parentOpts","webpackEmptyContext","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","stringFromCharCode","fromCharCode","mapDomain","domain","encoded","ucs2decode","string","charCodeAt","extra","ucs2encode","codePoints","fromCodePoint","digitToBasic","digit","adapt","delta","numPoints","firstTime","baseMinusTMin","decode","inputLength","bias","basic","lastIndexOf","oldi","codePoint","baseMinusT","encode","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","qMinusT","toUnicode","toASCII","SmartBuffer","_encoding","_writeOffset","_readOffset","isSmartBufferOptions","checkEncoding","isFiniteInteger","ERRORS","INVALID_SMARTBUFFER_SIZE","_buff","INVALID_SMARTBUFFER_BUFFER","INVALID_SMARTBUFFER_OBJECT","castOptions","readInt8","_readNumberValue","readInt16BE","readInt16LE","readInt32BE","readBigInt64BE","bigIntAndBufferInt64Check","readBigInt64LE","writeInt8","_writeNumberValue","insertInt8","_insertNumberValue","writeInt16BE","insertInt16BE","writeInt16LE","insertInt16LE","writeInt32BE","insertInt32BE","insertInt32LE","writeBigInt64BE","insertBigInt64BE","writeBigInt64LE","insertBigInt64LE","readUInt16LE","readUInt32BE","readBigUInt64BE","readBigUInt64LE","insertUInt8","writeUInt16BE","insertUInt16BE","writeUInt16LE","insertUInt16LE","writeUInt32BE","insertUInt32BE","insertUInt32LE","writeBigUInt64BE","insertBigUInt64BE","writeBigUInt64LE","insertBigUInt64LE","readFloatBE","readFloatLE","writeFloatBE","insertFloatBE","writeFloatLE","insertFloatLE","readDoubleBE","readDoubleLE","writeDoubleBE","insertDoubleBE","writeDoubleLE","insertDoubleLE","readString","arg1","lengthVal","checkLengthValue","insertString","checkOffsetValue","_handleString","writeString","arg2","readStringNT","nullPos","insertStringNT","writeStringNT","writeOffset","readBuffer","endPoint","insertBuffer","_handleBuffer","writeBuffer","readBufferNT","insertBufferNT","writeBufferNT","remaining","readOffset","checkTargetOffset","internalBuffer","encodingVal","isInsert","arg3","offsetVal","ensureInsertable","_ensureWriteable","ensureReadable","INVALID_READ_BEYOND_BOUNDS","dataLength","_ensureCapacity","minLength","oldLength","newLength","func","byteSize","INVALID_WRITE_BEYOND_BOUNDS","INVALID_ENCODING","INVALID_OFFSET","INVALID_OFFSET_NON_NUMBER","INVALID_LENGTH","INVALID_LENGTH_NON_NUMBER","INVALID_TARGET_OFFSET","INVALID_TARGET_LENGTH","isFinite","isInteger","checkOffsetOrLengthValue","isEncoding","bufferMethod","BigInt","__awaiter","thisArg","_arguments","P","generator","fulfilled","rejected","SocksClientError","smart_buffer_1","helpers_1","receivebuffer_1","validateSocksClientOptions","setState","SocksClientState","Created","validateSocksClientChainOptions","randomizeChain","shuffleArray","proxies","sock","nextProxy","nextDestination","ipaddress","frameNumber","isIPv4","remoteHost","Socks5HostType","IPv4","IPv6","Hostname","fromBuffer","hostType","onDataReceived","onDataReceivedHandler","onCloseHandler","onErrorHandler","onConnect","onConnectHandler","onEstablishedTimeout","DEFAULT_TIMEOUT","Socket","Connecting","receiveBuffer","ReceiveBuffer","getSocketOptions","set_tcp_nodelay","setImmediate","excessData","resume","socket_options","Established","BoundWaitingForConnection","closeSocket","ProxyConnectionTimedOut","Connected","sendSocks4InitialHandshake","sendSocks5InitialHandshake","SentInitialHandshake","processData","nextRequiredPacketBufferSize","handleSocks4FinalHandshakeResponse","handleInitialSocks5HandshakeResponse","SentAuthentication","handleInitialSocks5AuthenticationHandshakeResponse","SentFinalHandshake","handleSocks5FinalHandshakeResponse","InternalError","handleSocks4IncomingConnectionResponse","handleSocks5IncomingConnectionResponse","SocketClosed","removeInternalSocketHandlers","pause","SocksCommand","SOCKS_INCOMING_PACKET_SIZES","Socks4Response","Granted","Socks4ProxyRejectedConnection","Socks4ProxyRejectedIncomingBoundConnection","supportedAuthMethods","Socks5Auth","NoAuth","UserPass","custom_auth_method","authMethod","Socks5InitialHandshakeResponse","InvalidSocks5IntiailHandshakeSocksVersion","SOCKS5_NO_ACCEPTABLE_AUTH","InvalidSocks5InitialHandshakeNoAcceptedAuthType","socks5ChosenAuthType","sendSocks5CommandRequest","sendSocks5UserPassAuthentication","sendSocks5CustomAuthentication","InvalidSocks5InitialHandshakeUnknownAuthType","Socks5UserPassAuthenticationResponse","custom_auth_response_size","custom_auth_request_handler","handleSocks5CustomAuthHandshakeResponse","custom_auth_response_handler","handleSocks5AuthenticationNoAuthHandshakeResponse","handleSocks5AuthenticationUserPassHandshakeResponse","ReceivedAuthenticationResponse","authResult","Socks5AuthenticationFailed","Socks5ResponseHeader","peek","Socks5Response","InvalidSocks5FinalHandshakeRejected","addressType","dataNeeded","Socks5ResponseIPv4","hostLength","Socks5ResponseHostname","Socks5ResponseIPv6","ReceivedFinalResponse","associate","Socks5ProxyRejectedIncomingBoundConnection","socksClientOptions","SOCKS5_CUSTOM_AUTH_END","SOCKS5_CUSTOM_AUTH_START","InvalidSocksCommand","InvalidSocksCommandForOperation","InvalidSocksCommandChain","InvalidSocksClientOptionsDestination","InvalidSocksClientOptionsExistingSocket","InvalidSocksClientOptionsProxy","InvalidSocksClientOptionsTimeout","InvalidSocksClientOptionsProxiesLength","InvalidSocksClientOptionsCustomAuthRange","InvalidSocksClientOptionsCustomAuthOptions","NegotiationError","InvalidSocks4HandshakeResponse","InvalidSocks4IncomingConnectionResponse","InvalidSocks5InitialHandshakeResponse","InvalidSocks5FinalHandshake","InvalidSocks5IncomingConnectionResponse","hostNameLength","validateCustomProxyAuth","isValidSocksRemoteHost","isValidSocksProxy","isValidTimeoutValue","acceptedCommands","originalSize","tmp","copyWithin","__exportStar","punycode","regexes","mappingTable","STATUS_MAPPING","findStatus","val","useSTD3ASCIIRules","mid","disallowed_STD3_valid","disallowed_STD3_mapped","mapped","disallowed","validateLabel","checkHyphens","checkBidi","checkJoiners","processingOption","normalize","combiningMarks","ch","status","codePointAt","deviation","combiningClassVirama","validZWNJ","rtl","bidiS1LTR","bidiS1RTL","bidiS2","bidiS3","bidiS4EN","bidiS4AN","bidiS5","bidiS6","processing","domainName","hasError","processed","mapping","ignored","mapChars","labels","isBidi","bidiDomain","isBidiDomain","origLabel","curProcessing","verifyDNSLength","l","total","maxListeners","selfRemovingListener","eventFn","webByteUtils","fromNumberArray","HEX_DIGIT","potentialUint8array","stringTag","isView","Uint8Array","allocate","fromBase64","base64","atob","btoa","toISO88591","fromISO88591","Uint16Array","fromHex","hex","evenLengthHex","firstDigit","secondDigit","hexDigit","toHex","padStart","fromUTF8","TextEncoder","toUTF8","TextDecoder","fatal","utf8ByteLength","encodeUTF8Into","getRandomValues","sum","acc","space","_myCustomMongoDBBuffer","format","DataView","setInt32","setUint32","getUint8","getUint32","FakeSocket","isKeptAlive","keepAliveDelay","timeoutMS","ws","wsReader","forwarder","log","WebbySocket","forwardMessagesToDriver","enable","initialDelayMS","outgoingDataBuffer","outgoing","parseMessage","ismaster","sendFakeMessage","localTime","readOnly","dir","send","incoming","recv","dv","nsNullTerm","nsLen","docStart","docLen","makeNotifier","pRes","pRej","messages","notify","WebSocket","binaryType","reqId","constructMessage","responseBytes","bufferResponse","makeException","ErrorType","globals","toNumber","evenRound","censorNegativeZero","integerPart","createIntegerConversion","bitLength","unsigned","upperBound","twoToTheBitLength","twoToOneLessThanTheBitLength","enforceRange","clamp","y","signMightNotMatch","modulo","createLongLongConversion","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","asBigIntN","asUintN","asIntN","xBigInt","any","boolean","short","long","double","float","is","fround","DOMString","treatNullAsEmptyString","ByteString","USVString","S","U","abByteLengthGetter","sabByteLengthGetter","SharedArrayBuffer","isNonSharedArrayBuffer","isSharedArrayBuffer","isArrayBufferDetached","allowShared","dvByteLengthGetter","typedArrayNameGetter","Int8Array","Int16Array","Int32Array","Uint32Array","Uint8ClampedArray","Float32Array","Float64Array","article","ArrayBufferView","BufferSource","DOMTimeStamp","urlStateMachine","percentEncoding","sharedGlobalObject","install","parseURL","basicURLParse","serializeURL","serializePath","serializeHost","serializeInteger","serializeURLOrigin","setTheUsername","setThePassword","cannotHaveAUsernamePasswordPort","hasAnOpaquePath","percentDecodeString","percentDecodeBytes","conversions","utils","convert","globalObject","invokeTheCallbackFunction","tryWrapperForImpl","callResult","construct","wrapperSymbol","objectReference","usm","urlencoded","implementation","constructorArgs","parsedBase","parsedURL","baseURL","_url","_query","createImpl","doNotStripQMark","_list","parseUrlencodedString","scheme","stateOverride","fragment","implSymbol","ctorRegistrySymbol","makeWrapper","newTarget","proto","hasOwn","Impl","isImpl","implForWrapper","privateData","wrapper","setup","_internalSetup","exposed","globalNames","globalName","ctorRegistry","initCtorRegistry","curArg","esValue","V","getSameObject","defineProperties","pair","_updateSteps","serializeUrlencoded","tuple","found","newObjectInRealm","interfaceName","createDefaultIterator","kind","iteratorPrototype","iterInternalSymbol","nextItem","typedKey","typedValue","pairs","internal","iteratorResult","utf8Encoder","utf8Decoder","ignoreBOM","utf8Encode","utf8DecodeWithoutBOM","isASCIIDigit","isASCIIAlpha","isASCIIAlphanumeric","isASCIIHex","char","percentEncode","toUpperCase","outputIndex","bytePoint","isC0ControlPercentEncode","extraFragmentPercentEncodeSet","extraQueryPercentEncodeSet","isQueryPercentEncode","extraPathPercentEncodeSet","isPathPercentEncode","extraUserinfoPercentEncodeSet","isUserinfoPercentEncode","extraComponentPercentEncodeSet","extraURLEncodedPercentEncodeSet","utf8PercentEncodeCodePointInternal","percentEncodePredicate","isFragmentPercentEncode","isSpecialQueryPercentEncode","isURLEncodedPercentEncode","isComponentPercentEncode","utf8PercentEncodeString","spaceAsPlus","utf8PercentEncodeCodePoint","tr46","infra","specialSchemes","ftp","https","wss","countSymbols","str","at","isSingleDot","isWindowsDriveLetterString","isSpecialScheme","isSpecial","isNotSpecial","defaultPort","parseIPv4Number","charAt","parseHost","isNotSpecialArg","pieceIndex","pointer","numbersSeen","ipv4Piece","swaps","temp","parseIPv6","parseOpaqueHost","asciiDomain","beStrict","domainToASCII","endsInANumber","numbers","part","ipv4","parseIPv4","serializeIPv4","maxIdx","maxLen","currStart","currLen","findLongestZeroSequence","ignore0","serializeIPv6","shortenPath","includesCredentials","URLStateMachine","encodingOverride","parseError","trimControlChars","trimTabAndNewline","atFlag","arrFlag","passwordTokenSeenFlag","cStr","encodedCodePoints","fileOtherwiseCodePoints","startsWithWindowsDriveLetter","cp1","cp2","segment","queryPercentEncodePredicate","excludeFragment","serializeOrigin","integer","replaceByteInByteSequence","sequences","cp","strictlySplitByteSequence","indexOfEqual","nameString","parseUrlencoded","tuples","sameObjectCaches","AsyncIteratorPrototype","eval","wrapperForImpl","impl","byteLengthGetter","supportsPropertyIndex","supportedPropertyIndices","supportsPropertyName","supportedPropertyNames","indexedGet","indexedSetNew","indexedSetExisting","namedGet","namedSetNew","namedSetExisting","namedDelete","asyncIteratorNext","asyncIteratorReturn","asyncIteratorInit","asyncIteratorEOI","getOwnPropertyDescriptors","creator","tryImplForWrapper","isArrayBuffer","isArrayIndexPropName","BSON_MAJOR_VERSION","BSON_INT32_MAX","BSON_INT32_MIN","BSON_INT64_MAX","pow","BSON_INT64_MIN","JS_INT_MAX","JS_INT_MIN","BSON_DATA_NUMBER","BSON_DATA_STRING","BSON_DATA_OBJECT","BSON_DATA_ARRAY","BSON_DATA_BINARY","BSON_DATA_UNDEFINED","BSON_DATA_OID","BSON_DATA_BOOLEAN","BSON_DATA_DATE","BSON_DATA_NULL","BSON_DATA_REGEXP","BSON_DATA_DBPOINTER","BSON_DATA_CODE","BSON_DATA_SYMBOL","BSON_DATA_CODE_W_SCOPE","BSON_DATA_INT","BSON_DATA_TIMESTAMP","BSON_DATA_LONG","BSON_DATA_DECIMAL128","BSON_DATA_MIN_KEY","BSON_DATA_MAX_KEY","BSON_BINARY_SUBTYPE_DEFAULT","BSON_BINARY_SUBTYPE_UUID_NEW","binData","objectId","bool","date","null","dbPointer","javascript","symbol","javascriptWithScope","int","timestamp","decimal","minKey","maxKey","BSONError","bsonError","BSONVersionError","BSONRuntimeError","nodejsMathRandomBytes","nodeJsByteUtils","potentialBuffer","webMathRandomBytes","webRandomBytes","navigator","product","isReactNative","_isBuffer","BSONDataView","VALIDATION_REGEX","uuidValidateString","uuidHexStringToBuffer","hexString","sanitizedHexString","bufferToUuidHexString","includeDashes","isAnyArrayBuffer","isUint8Array","isRegExp","isDate","BSONValue","subType","BUFFER_SIZE","put","byteValue","decodedByte","newSpace","asRaw","toExtendedJSON","base64String","legacy","$binary","$type","toUUID","UUID","$uuid","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_MD5","SUBTYPE_ENCRYPTED","SUBTYPE_COLUMN","SUBTYPE_USER_DEFINED","hexStr","generate","__id","cacheHexString","uuidHexString","otherId","toBinary","scope","$code","$scope","codeJson","isDBRefLike","$id","$ref","oid","wasm","WebAssembly","Instance","Module","TWO_PWR_32_DBL","TWO_PWR_16_DBL","TWO_PWR_64_DBL","TWO_PWR_63_DBL","INT_CACHE","UINT_CACHE","DECIMAL_REG_EX","__isLong__","lowBits","highBits","cachedObj","fromBits","UZERO","MAX_UNSIGNED_VALUE","MIN_VALUE","MAX_VALUE","neg","radix","radixToPower","power","mul","le","fromBytesLE","fromBytesBE","addend","fromValue","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","and","eq","thisNeg","isNegative","otherNeg","sub","comp","divide","divisor","div_u","div_s","get_high","approx","rem","toUnsigned","gt","shru","UONE","ONE","NEG_ONE","shr","div","shl","gte","log2","LN2","approxRes","approxRem","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","greaterThanOrEqual","ge","isEven","isOdd","isPositive","lessThan","lt","lessThanOrEqual","lte","rem_u","rem_s","multiply","multiplier","TWO_PWR_24","b00","negate","notEquals","neq","ne","shiftLeft","numBits","toInt","shiftRight","shiftRightUnsigned","shr_u","subtract","subtrahend","toBigInt","toBytes","toBytesLE","toBytesBE","hi","lo","toSigned","radixLong","rem1","remDiv","digits","eqz","relaxed","$numberLong","bigIntResult","longResult","fromInt","PARSE_STRING_REGEXP","PARSE_INF_REGEXP","PARSE_NAN_REGEXP","EXPONENT_MAX","EXPONENT_MIN","NAN_BUFFER","reverse","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","EXPONENT_REGEX","isDigit","divideu128","DIVISOR","_rem","quotient","invalidErr","representation","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","nDigitsStored","digitsInsert","lastDigit","exponent","significandHigh","significandLow","biasedExponent","stringMatch","infMatch","nanMatch","unsignedNumber","expSign","expNumber","endOfString","roundDigit","roundBit","dIdx","significand","left","right","leftHigh","leftLow","rightHigh","rightLow","productHigh","productMid","productMid2","productLow","multiply64x2","uhleft","uhright","dec","biased_exponent","significand_digits","significand_msb","is_zero","significand128","midl","midh","combination","least_digits","scientific_exponent","radix_position","$numberDecimal","valueOf","$numberDouble","toFixed","doubleValue","parseFloat","$numberInt","$maxKey","$minKey","checkForHexRegExp","PROCESS_UNIQUE","inputId","workingId","inc","getInc","fromUint8Array","otherIdString","thisIdString","getTimestamp","setTime","$oid","internalCalculateObjectSize","calculateElement","binary","ordered_values","global","ignoreCase","multiline","pattern","$regex","$options","$regularExpression","$symbol","LongWithoutOverridesClass","$timestamp","optRadix","FIRST_BIT","FIRST_TWO_BITS","FIRST_THREE_BITS","FIRST_FOUR_BITS","FIRST_FIVE_BITS","TWO_BIT_CHAR","THREE_BIT_CHAR","FOUR_BIT_CHAR","CONTINUING_CHAR","validateUtf8","continuation","JS_INT_MAX_LONG","JS_INT_MIN_LONG","internalDeserialize","allowObjectSmallerThanBufferSize","deserializeObject","allowedDBRefKeys","validationSetting","globalUTFValidation","utf8KeysSet","utf8ValidatedKeys","utf8ValidationValues","startIndex","arrayIndex","isPossibleDBRef","dataview","elementType","shouldValidateKey","stringSize","getValidatedString","getFloat64","_index","arrayOptions","stopIndex","getBigInt64","binarySize","totalBinarySize","_buffer","regExpOptions","optionsArray","functionString","totalSize","scopeObject","oidBuffer","shouldValidateUtf8","regexp","ignoreKeys","serializeString","NUMBER_SPACE","FOUR_BYTE_VIEW_ON_NUMBER","EIGHT_BYTE_VIEW_ON_NUMBER","serializeNumber","isSafeInteger","setFloat64","serializeBigInt","setBigInt64","serializeNull","serializeBoolean","serializeDate","dateInMilis","serializeRegExp","serializeBSONRegExp","sortedOptions","serializeMinMax","serializeObjectId","serializeBuffer","serializeObject","depth","endIndex","serializeInto","serializeDecimal128","serializeLong","serializeInt32","serializeDouble","serializeFunction","serializeCode","codeSize","serializeBinary","serializeSymbol","serializeDBRef","startingIndex","keysToCodecs","deserializeValue","in32BitRange","in64BitRange","$undefined","fromExtendedJSON","$date","$dbPointer","dollarKeys","getISOString","isoStr","toISOString","getUTCMilliseconds","serializeValue","seenObjects","findIndex","propertyName","leadingPart","alreadySeen","circularPart","current","leadingSpace","repeat","dashes","serializeArray","dateNum","inRange","bsontype","_doc","isBSONType","outDoc","mapper","BSON_TYPE_MAPPINGS","serializeDocument","low_","high_","unsigned_","ejsonOptions","EJSON","ejson","MAXSIZE","setInternalBufferSize","serializationIndex","finishedBuffer","serializeWithBufferAndIndex","finalBuffer","deserializeStream","numberOfDocuments","docStartIndex","internalOptions","bufferData","bson","__proto__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition"],"sourceRoot":""}