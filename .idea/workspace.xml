<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5709ffcb-fb0c-40ea-8543-1b8328d368ea" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/LaurelsSocket.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/mongodb.cjs" beforeDir="false" afterPath="$PROJECT_DIR$/dist/mongodb.cjs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/mongodb.cjs.map" beforeDir="false" afterPath="$PROJECT_DIR$/dist/mongodb.cjs.map" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/.package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/.package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/@types/expect/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/@types/expect/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/@types/expect/index.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/@types/expect/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/@types/expect/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/buffer/AUTHORS.md" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/buffer/AUTHORS.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/buffer/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/buffer/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/buffer/index.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/buffer/index.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/buffer/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/buffer/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/buffer/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/buffer/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/CONTRIBUTING.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/GOVERNANCE.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/errors-browser.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/errors.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/experimentalWarning.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_duplex.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_duplex.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_passthrough.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_passthrough.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_readable.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_readable.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_transform.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_transform.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_writable.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/_stream_writable.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/async_iterator.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/buffer_list.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/buffer_list.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/destroy.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/destroy.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/end-of-stream.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/end-of-stream.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/from-browser.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/from.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/from.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/pipeline.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/pipeline.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/state.js" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/state.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/stream-browser.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/lib/internal/streams/stream.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/readable-stream/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/readable-browser.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/node_modules/readable-stream/readable.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/modules/net.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/modules/net.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ws.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/ws.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/test.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/test/test.spec.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2RTgzV9t7ybK6TiaoRGvaYMfKn0" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "/Users/laurel.xiang/mdbjs",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.mocha.mocha_node_package_dir": "/Users/laurel.xiang/mdbjs/node_modules/mocha",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.sourceCode.Java",
    "ts.external.directory.path": "/Users/laurel.xiang/mdbjs/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Mocha.Integration Tests:.constructMessage() outputs the correct message">
    <configuration default="true" type="JetRunConfigurationType">
      <module name="mdbjs" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="mdbjs" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Integration Tests:" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>SUITE</test-kind>
      <test-file>$PROJECT_DIR$/test/test.spec.ts</test-file>
      <test-names>
        <name value="Integration Tests:" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Integration Tests:.TODO: client" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>SUITE</test-kind>
      <test-file>$PROJECT_DIR$/test/test.spec.ts</test-file>
      <test-names>
        <name value="Integration Tests:" />
        <name value="TODO: client" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Integration Tests:.constructMessage() outputs the correct message" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>SUITE</test-kind>
      <test-file>$PROJECT_DIR$/test/test.spec.ts</test-file>
      <test-names>
        <name value="Integration Tests:" />
        <name value="constructMessage() outputs the correct message" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Unit Tests:" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>SUITE</test-kind>
      <test-file>$PROJECT_DIR$/test/test.spec.ts</test-file>
      <test-names>
        <name value="Unit Tests:" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Unit test sanity checks" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options>--require ts-node/register</extra-mocha-options>
      <test-kind>SUITE</test-kind>
      <test-file>$PROJECT_DIR$/test/test.spec.ts</test-file>
      <test-names>
        <name value="Unit test sanity checks" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Mocha.Integration Tests:.constructMessage() outputs the correct message" />
        <item itemvalue="Mocha.Integration Tests:.TODO: client" />
        <item itemvalue="Mocha.Integration Tests:" />
        <item itemvalue="Mocha.Unit Tests:" />
        <item itemvalue="Mocha.Unit test sanity checks" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5709ffcb-fb0c-40ea-8543-1b8328d368ea" name="Changes" comment="" />
      <created>1687279747440</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1687279747440</updated>
      <workItem from="1687279749474" duration="42008000" />
      <workItem from="1688044390108" duration="2804000" />
      <workItem from="1688049761525" duration="8287000" />
      <workItem from="1688391322746" duration="82565000" />
      <workItem from="1689085718408" duration="130000" />
      <workItem from="1689085850053" duration="32620000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
    <option name="exactExcludedFiles">
      <list>
        <option value="$PROJECT_DIR$/src/index.js" />
        <option value="$PROJECT_DIR$/src/index.js.map" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>